//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ERPAppAddition.ERPAddition.WM {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("WIPStockModule")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class WIPStockModule : global::System.Data.DataSet {
        
        private dtCurrentWIPDataTable tabledtCurrentWIP;
        
        private dtCurrentWIPDtlDataTable tabledtCurrentWIPDtl;
        
        private dtCurrentWIPCostDataTable tabledtCurrentWIPCost;
        
        private dtDailyWIPTrendDataTable tabledtDailyWIPTrend;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public WIPStockModule() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected WIPStockModule(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtCurrentWIP"] != null)) {
                    base.Tables.Add(new dtCurrentWIPDataTable(ds.Tables["dtCurrentWIP"]));
                }
                if ((ds.Tables["dtCurrentWIPDtl"] != null)) {
                    base.Tables.Add(new dtCurrentWIPDtlDataTable(ds.Tables["dtCurrentWIPDtl"]));
                }
                if ((ds.Tables["dtCurrentWIPCost"] != null)) {
                    base.Tables.Add(new dtCurrentWIPCostDataTable(ds.Tables["dtCurrentWIPCost"]));
                }
                if ((ds.Tables["dtDailyWIPTrend"] != null)) {
                    base.Tables.Add(new dtDailyWIPTrendDataTable(ds.Tables["dtDailyWIPTrend"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCurrentWIPDataTable dtCurrentWIP {
            get {
                return this.tabledtCurrentWIP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCurrentWIPDtlDataTable dtCurrentWIPDtl {
            get {
                return this.tabledtCurrentWIPDtl;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCurrentWIPCostDataTable dtCurrentWIPCost {
            get {
                return this.tabledtCurrentWIPCost;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDailyWIPTrendDataTable dtDailyWIPTrend {
            get {
                return this.tabledtDailyWIPTrend;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            WIPStockModule cln = ((WIPStockModule)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtCurrentWIP"] != null)) {
                    base.Tables.Add(new dtCurrentWIPDataTable(ds.Tables["dtCurrentWIP"]));
                }
                if ((ds.Tables["dtCurrentWIPDtl"] != null)) {
                    base.Tables.Add(new dtCurrentWIPDtlDataTable(ds.Tables["dtCurrentWIPDtl"]));
                }
                if ((ds.Tables["dtCurrentWIPCost"] != null)) {
                    base.Tables.Add(new dtCurrentWIPCostDataTable(ds.Tables["dtCurrentWIPCost"]));
                }
                if ((ds.Tables["dtDailyWIPTrend"] != null)) {
                    base.Tables.Add(new dtDailyWIPTrendDataTable(ds.Tables["dtDailyWIPTrend"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabledtCurrentWIP = ((dtCurrentWIPDataTable)(base.Tables["dtCurrentWIP"]));
            if ((initTable == true)) {
                if ((this.tabledtCurrentWIP != null)) {
                    this.tabledtCurrentWIP.InitVars();
                }
            }
            this.tabledtCurrentWIPDtl = ((dtCurrentWIPDtlDataTable)(base.Tables["dtCurrentWIPDtl"]));
            if ((initTable == true)) {
                if ((this.tabledtCurrentWIPDtl != null)) {
                    this.tabledtCurrentWIPDtl.InitVars();
                }
            }
            this.tabledtCurrentWIPCost = ((dtCurrentWIPCostDataTable)(base.Tables["dtCurrentWIPCost"]));
            if ((initTable == true)) {
                if ((this.tabledtCurrentWIPCost != null)) {
                    this.tabledtCurrentWIPCost.InitVars();
                }
            }
            this.tabledtDailyWIPTrend = ((dtDailyWIPTrendDataTable)(base.Tables["dtDailyWIPTrend"]));
            if ((initTable == true)) {
                if ((this.tabledtDailyWIPTrend != null)) {
                    this.tabledtDailyWIPTrend.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "WIPStockModule";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/WIPStockModule.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtCurrentWIP = new dtCurrentWIPDataTable();
            base.Tables.Add(this.tabledtCurrentWIP);
            this.tabledtCurrentWIPDtl = new dtCurrentWIPDtlDataTable();
            base.Tables.Add(this.tabledtCurrentWIPDtl);
            this.tabledtCurrentWIPCost = new dtCurrentWIPCostDataTable();
            base.Tables.Add(this.tabledtCurrentWIPCost);
            this.tabledtDailyWIPTrend = new dtDailyWIPTrendDataTable();
            base.Tables.Add(this.tabledtDailyWIPTrend);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtCurrentWIP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtCurrentWIPDtl() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtCurrentWIPCost() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtDailyWIPTrend() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            WIPStockModule ds = new WIPStockModule();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtCurrentWIPRowChangeEventHandler(object sender, dtCurrentWIPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtCurrentWIPDtlRowChangeEventHandler(object sender, dtCurrentWIPDtlRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtCurrentWIPCostRowChangeEventHandler(object sender, dtCurrentWIPCostRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtDailyWIPTrendRowChangeEventHandler(object sender, dtDailyWIPTrendRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCurrentWIPDataTable : global::System.Data.TypedTableBase<dtCurrentWIPRow> {
            
            private global::System.Data.DataColumn columnLOT_DESC;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOPER_DESC;
            
            private global::System.Data.DataColumn columnMAT_ID;
            
            private global::System.Data.DataColumn columnCREATE_CODE;
            
            private global::System.Data.DataColumn columnQTY_1;
            
            private global::System.Data.DataColumn columnLOT_CATGRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDataTable() {
                this.TableName = "dtCurrentWIP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCurrentWIPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtCurrentWIPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_DESCColumn {
                get {
                    return this.columnLOT_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPER_DESCColumn {
                get {
                    return this.columnOPER_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAT_IDColumn {
                get {
                    return this.columnMAT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATE_CODEColumn {
                get {
                    return this.columnCREATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QTY_1Column {
                get {
                    return this.columnQTY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_CATGRYColumn {
                get {
                    return this.columnLOT_CATGRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPRow this[int index] {
                get {
                    return ((dtCurrentWIPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPRowChangeEventHandler dtCurrentWIPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPRowChangeEventHandler dtCurrentWIPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPRowChangeEventHandler dtCurrentWIPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPRowChangeEventHandler dtCurrentWIPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtCurrentWIPRow(dtCurrentWIPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPRow AdddtCurrentWIPRow(string LOT_DESC, string OPER, string OPER_DESC, string MAT_ID, string CREATE_CODE, int QTY_1, string LOT_CATGRY) {
                dtCurrentWIPRow rowdtCurrentWIPRow = ((dtCurrentWIPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOT_DESC,
                        OPER,
                        OPER_DESC,
                        MAT_ID,
                        CREATE_CODE,
                        QTY_1,
                        LOT_CATGRY};
                rowdtCurrentWIPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCurrentWIPRow);
                return rowdtCurrentWIPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtCurrentWIPDataTable cln = ((dtCurrentWIPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCurrentWIPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLOT_DESC = base.Columns["LOT_DESC"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOPER_DESC = base.Columns["OPER_DESC"];
                this.columnMAT_ID = base.Columns["MAT_ID"];
                this.columnCREATE_CODE = base.Columns["CREATE_CODE"];
                this.columnQTY_1 = base.Columns["QTY_1"];
                this.columnLOT_CATGRY = base.Columns["LOT_CATGRY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLOT_DESC = new global::System.Data.DataColumn("LOT_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_DESC);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOPER_DESC = new global::System.Data.DataColumn("OPER_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_DESC);
                this.columnMAT_ID = new global::System.Data.DataColumn("MAT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAT_ID);
                this.columnCREATE_CODE = new global::System.Data.DataColumn("CREATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_CODE);
                this.columnQTY_1 = new global::System.Data.DataColumn("QTY_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY_1);
                this.columnLOT_CATGRY = new global::System.Data.DataColumn("LOT_CATGRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_CATGRY);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPRow NewdtCurrentWIPRow() {
                return ((dtCurrentWIPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCurrentWIPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtCurrentWIPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCurrentWIPRowChanged != null)) {
                    this.dtCurrentWIPRowChanged(this, new dtCurrentWIPRowChangeEvent(((dtCurrentWIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCurrentWIPRowChanging != null)) {
                    this.dtCurrentWIPRowChanging(this, new dtCurrentWIPRowChangeEvent(((dtCurrentWIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCurrentWIPRowDeleted != null)) {
                    this.dtCurrentWIPRowDeleted(this, new dtCurrentWIPRowChangeEvent(((dtCurrentWIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCurrentWIPRowDeleting != null)) {
                    this.dtCurrentWIPRowDeleting(this, new dtCurrentWIPRowChangeEvent(((dtCurrentWIPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtCurrentWIPRow(dtCurrentWIPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WIPStockModule ds = new WIPStockModule();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCurrentWIPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCurrentWIPDtlDataTable : global::System.Data.TypedTableBase<dtCurrentWIPDtlRow> {
            
            private global::System.Data.DataColumn columnLOT_ID;
            
            private global::System.Data.DataColumn columnLOT_CMF_2;
            
            private global::System.Data.DataColumn columnLOT_DESC;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOPER_DESC;
            
            private global::System.Data.DataColumn columnMAT_ID;
            
            private global::System.Data.DataColumn columnCREATE_CODE;
            
            private global::System.Data.DataColumn columnCREATE_QTY_1;
            
            private global::System.Data.DataColumn columnOPER_IN_QTY_1;
            
            private global::System.Data.DataColumn columnQTY_1;
            
            private global::System.Data.DataColumn columnFAC_IN_TIME;
            
            private global::System.Data.DataColumn columnOPER_IN_TIME;
            
            private global::System.Data.DataColumn columnFLOW_IN_TIME;
            
            private global::System.Data.DataColumn columnLAST_TRAN_CODE;
            
            private global::System.Data.DataColumn columnFAC_IN_DAY;
            
            private global::System.Data.DataColumn columnOPER_IN_HOUR;
            
            private global::System.Data.DataColumn columnLOT_CATGRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDtlDataTable() {
                this.TableName = "dtCurrentWIPDtl";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCurrentWIPDtlDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtCurrentWIPDtlDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_IDColumn {
                get {
                    return this.columnLOT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_CMF_2Column {
                get {
                    return this.columnLOT_CMF_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_DESCColumn {
                get {
                    return this.columnLOT_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPER_DESCColumn {
                get {
                    return this.columnOPER_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAT_IDColumn {
                get {
                    return this.columnMAT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATE_CODEColumn {
                get {
                    return this.columnCREATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATE_QTY_1Column {
                get {
                    return this.columnCREATE_QTY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPER_IN_QTY_1Column {
                get {
                    return this.columnOPER_IN_QTY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QTY_1Column {
                get {
                    return this.columnQTY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FAC_IN_TIMEColumn {
                get {
                    return this.columnFAC_IN_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPER_IN_TIMEColumn {
                get {
                    return this.columnOPER_IN_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FLOW_IN_TIMEColumn {
                get {
                    return this.columnFLOW_IN_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LAST_TRAN_CODEColumn {
                get {
                    return this.columnLAST_TRAN_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FAC_IN_DAYColumn {
                get {
                    return this.columnFAC_IN_DAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPER_IN_HOURColumn {
                get {
                    return this.columnOPER_IN_HOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_CATGRYColumn {
                get {
                    return this.columnLOT_CATGRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDtlRow this[int index] {
                get {
                    return ((dtCurrentWIPDtlRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPDtlRowChangeEventHandler dtCurrentWIPDtlRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPDtlRowChangeEventHandler dtCurrentWIPDtlRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPDtlRowChangeEventHandler dtCurrentWIPDtlRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPDtlRowChangeEventHandler dtCurrentWIPDtlRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtCurrentWIPDtlRow(dtCurrentWIPDtlRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDtlRow AdddtCurrentWIPDtlRow(
                        string LOT_ID, 
                        string LOT_CMF_2, 
                        string LOT_DESC, 
                        string OPER, 
                        string OPER_DESC, 
                        string MAT_ID, 
                        string CREATE_CODE, 
                        int CREATE_QTY_1, 
                        int OPER_IN_QTY_1, 
                        int QTY_1, 
                        string FAC_IN_TIME, 
                        string OPER_IN_TIME, 
                        string FLOW_IN_TIME, 
                        string LAST_TRAN_CODE, 
                        string FAC_IN_DAY, 
                        string OPER_IN_HOUR, 
                        string LOT_CATGRY) {
                dtCurrentWIPDtlRow rowdtCurrentWIPDtlRow = ((dtCurrentWIPDtlRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LOT_ID,
                        LOT_CMF_2,
                        LOT_DESC,
                        OPER,
                        OPER_DESC,
                        MAT_ID,
                        CREATE_CODE,
                        CREATE_QTY_1,
                        OPER_IN_QTY_1,
                        QTY_1,
                        FAC_IN_TIME,
                        OPER_IN_TIME,
                        FLOW_IN_TIME,
                        LAST_TRAN_CODE,
                        FAC_IN_DAY,
                        OPER_IN_HOUR,
                        LOT_CATGRY};
                rowdtCurrentWIPDtlRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCurrentWIPDtlRow);
                return rowdtCurrentWIPDtlRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtCurrentWIPDtlDataTable cln = ((dtCurrentWIPDtlDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCurrentWIPDtlDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLOT_ID = base.Columns["LOT_ID"];
                this.columnLOT_CMF_2 = base.Columns["LOT_CMF_2"];
                this.columnLOT_DESC = base.Columns["LOT_DESC"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOPER_DESC = base.Columns["OPER_DESC"];
                this.columnMAT_ID = base.Columns["MAT_ID"];
                this.columnCREATE_CODE = base.Columns["CREATE_CODE"];
                this.columnCREATE_QTY_1 = base.Columns["CREATE_QTY_1"];
                this.columnOPER_IN_QTY_1 = base.Columns["OPER_IN_QTY_1"];
                this.columnQTY_1 = base.Columns["QTY_1"];
                this.columnFAC_IN_TIME = base.Columns["FAC_IN_TIME"];
                this.columnOPER_IN_TIME = base.Columns["OPER_IN_TIME"];
                this.columnFLOW_IN_TIME = base.Columns["FLOW_IN_TIME"];
                this.columnLAST_TRAN_CODE = base.Columns["LAST_TRAN_CODE"];
                this.columnFAC_IN_DAY = base.Columns["FAC_IN_DAY"];
                this.columnOPER_IN_HOUR = base.Columns["OPER_IN_HOUR"];
                this.columnLOT_CATGRY = base.Columns["LOT_CATGRY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLOT_ID = new global::System.Data.DataColumn("LOT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_ID);
                this.columnLOT_CMF_2 = new global::System.Data.DataColumn("LOT_CMF_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_CMF_2);
                this.columnLOT_DESC = new global::System.Data.DataColumn("LOT_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_DESC);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOPER_DESC = new global::System.Data.DataColumn("OPER_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_DESC);
                this.columnMAT_ID = new global::System.Data.DataColumn("MAT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAT_ID);
                this.columnCREATE_CODE = new global::System.Data.DataColumn("CREATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_CODE);
                this.columnCREATE_QTY_1 = new global::System.Data.DataColumn("CREATE_QTY_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_QTY_1);
                this.columnOPER_IN_QTY_1 = new global::System.Data.DataColumn("OPER_IN_QTY_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_IN_QTY_1);
                this.columnQTY_1 = new global::System.Data.DataColumn("QTY_1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY_1);
                this.columnFAC_IN_TIME = new global::System.Data.DataColumn("FAC_IN_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_IN_TIME);
                this.columnOPER_IN_TIME = new global::System.Data.DataColumn("OPER_IN_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_IN_TIME);
                this.columnFLOW_IN_TIME = new global::System.Data.DataColumn("FLOW_IN_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLOW_IN_TIME);
                this.columnLAST_TRAN_CODE = new global::System.Data.DataColumn("LAST_TRAN_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_TRAN_CODE);
                this.columnFAC_IN_DAY = new global::System.Data.DataColumn("FAC_IN_DAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAC_IN_DAY);
                this.columnOPER_IN_HOUR = new global::System.Data.DataColumn("OPER_IN_HOUR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_IN_HOUR);
                this.columnLOT_CATGRY = new global::System.Data.DataColumn("LOT_CATGRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_CATGRY);
                this.columnLOT_ID.Caption = "lot_id";
                this.columnLOT_DESC.Caption = "lot_desc";
                this.columnOPER.Caption = "oper";
                this.columnMAT_ID.Caption = "mat_id";
                this.columnFAC_IN_TIME.Caption = "fac_in_time";
                this.columnOPER_IN_TIME.Caption = "oper_in_time";
                this.columnFAC_IN_DAY.Caption = "fac_in_day";
                this.columnOPER_IN_HOUR.Caption = "oper_in_hour";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDtlRow NewdtCurrentWIPDtlRow() {
                return ((dtCurrentWIPDtlRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCurrentWIPDtlRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtCurrentWIPDtlRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCurrentWIPDtlRowChanged != null)) {
                    this.dtCurrentWIPDtlRowChanged(this, new dtCurrentWIPDtlRowChangeEvent(((dtCurrentWIPDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCurrentWIPDtlRowChanging != null)) {
                    this.dtCurrentWIPDtlRowChanging(this, new dtCurrentWIPDtlRowChangeEvent(((dtCurrentWIPDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCurrentWIPDtlRowDeleted != null)) {
                    this.dtCurrentWIPDtlRowDeleted(this, new dtCurrentWIPDtlRowChangeEvent(((dtCurrentWIPDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCurrentWIPDtlRowDeleting != null)) {
                    this.dtCurrentWIPDtlRowDeleting(this, new dtCurrentWIPDtlRowChangeEvent(((dtCurrentWIPDtlRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtCurrentWIPDtlRow(dtCurrentWIPDtlRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WIPStockModule ds = new WIPStockModule();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCurrentWIPDtlDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCurrentWIPCostDataTable : global::System.Data.TypedTableBase<dtCurrentWIPCostRow> {
            
            private global::System.Data.DataColumn columnRPT_TYPE;
            
            private global::System.Data.DataColumn columnLOT_DESC;
            
            private global::System.Data.DataColumn columnOPER;
            
            private global::System.Data.DataColumn columnOPER_DESC;
            
            private global::System.Data.DataColumn columnMAT_ID;
            
            private global::System.Data.DataColumn columnCREATE_CODE;
            
            private global::System.Data.DataColumn columnQTY_1;
            
            private global::System.Data.DataColumn columnWIP_COST;
            
            private global::System.Data.DataColumn columnINV_COST;
            
            private global::System.Data.DataColumn columnUNIT_COST;
            
            private global::System.Data.DataColumn columnWIP_QTY;
            
            private global::System.Data.DataColumn columnINV_QTY;
            
            private global::System.Data.DataColumn columnGROUP1;
            
            private global::System.Data.DataColumn columnGROUP2;
            
            private global::System.Data.DataColumn columnGROUP3;
            
            private global::System.Data.DataColumn columnGROUP4;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnUNIT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPCostDataTable() {
                this.TableName = "dtCurrentWIPCost";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCurrentWIPCostDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtCurrentWIPCostDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPT_TYPEColumn {
                get {
                    return this.columnRPT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOT_DESCColumn {
                get {
                    return this.columnLOT_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPERColumn {
                get {
                    return this.columnOPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPER_DESCColumn {
                get {
                    return this.columnOPER_DESC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAT_IDColumn {
                get {
                    return this.columnMAT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATE_CODEColumn {
                get {
                    return this.columnCREATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QTY_1Column {
                get {
                    return this.columnQTY_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIP_COSTColumn {
                get {
                    return this.columnWIP_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INV_COSTColumn {
                get {
                    return this.columnINV_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNIT_COSTColumn {
                get {
                    return this.columnUNIT_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIP_QTYColumn {
                get {
                    return this.columnWIP_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INV_QTYColumn {
                get {
                    return this.columnINV_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUP1Column {
                get {
                    return this.columnGROUP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUP2Column {
                get {
                    return this.columnGROUP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUP3Column {
                get {
                    return this.columnGROUP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUP4Column {
                get {
                    return this.columnGROUP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UNITColumn {
                get {
                    return this.columnUNIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPCostRow this[int index] {
                get {
                    return ((dtCurrentWIPCostRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPCostRowChangeEventHandler dtCurrentWIPCostRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPCostRowChangeEventHandler dtCurrentWIPCostRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPCostRowChangeEventHandler dtCurrentWIPCostRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCurrentWIPCostRowChangeEventHandler dtCurrentWIPCostRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtCurrentWIPCostRow(dtCurrentWIPCostRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPCostRow AdddtCurrentWIPCostRow(
                        string RPT_TYPE, 
                        string LOT_DESC, 
                        string OPER, 
                        string OPER_DESC, 
                        string MAT_ID, 
                        string CREATE_CODE, 
                        uint QTY_1, 
                        uint WIP_COST, 
                        uint INV_COST, 
                        float UNIT_COST, 
                        uint WIP_QTY, 
                        uint INV_QTY, 
                        string GROUP1, 
                        string GROUP2, 
                        string GROUP3, 
                        string GROUP4, 
                        ushort SEQ, 
                        string UNIT) {
                dtCurrentWIPCostRow rowdtCurrentWIPCostRow = ((dtCurrentWIPCostRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RPT_TYPE,
                        LOT_DESC,
                        OPER,
                        OPER_DESC,
                        MAT_ID,
                        CREATE_CODE,
                        QTY_1,
                        WIP_COST,
                        INV_COST,
                        UNIT_COST,
                        WIP_QTY,
                        INV_QTY,
                        GROUP1,
                        GROUP2,
                        GROUP3,
                        GROUP4,
                        SEQ,
                        UNIT};
                rowdtCurrentWIPCostRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCurrentWIPCostRow);
                return rowdtCurrentWIPCostRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtCurrentWIPCostDataTable cln = ((dtCurrentWIPCostDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCurrentWIPCostDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRPT_TYPE = base.Columns["RPT_TYPE"];
                this.columnLOT_DESC = base.Columns["LOT_DESC"];
                this.columnOPER = base.Columns["OPER"];
                this.columnOPER_DESC = base.Columns["OPER_DESC"];
                this.columnMAT_ID = base.Columns["MAT_ID"];
                this.columnCREATE_CODE = base.Columns["CREATE_CODE"];
                this.columnQTY_1 = base.Columns["QTY_1"];
                this.columnWIP_COST = base.Columns["WIP_COST"];
                this.columnINV_COST = base.Columns["INV_COST"];
                this.columnUNIT_COST = base.Columns["UNIT_COST"];
                this.columnWIP_QTY = base.Columns["WIP_QTY"];
                this.columnINV_QTY = base.Columns["INV_QTY"];
                this.columnGROUP1 = base.Columns["GROUP1"];
                this.columnGROUP2 = base.Columns["GROUP2"];
                this.columnGROUP3 = base.Columns["GROUP3"];
                this.columnGROUP4 = base.Columns["GROUP4"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnUNIT = base.Columns["UNIT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRPT_TYPE = new global::System.Data.DataColumn("RPT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPT_TYPE);
                this.columnLOT_DESC = new global::System.Data.DataColumn("LOT_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOT_DESC);
                this.columnOPER = new global::System.Data.DataColumn("OPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER);
                this.columnOPER_DESC = new global::System.Data.DataColumn("OPER_DESC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPER_DESC);
                this.columnMAT_ID = new global::System.Data.DataColumn("MAT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAT_ID);
                this.columnCREATE_CODE = new global::System.Data.DataColumn("CREATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_CODE);
                this.columnQTY_1 = new global::System.Data.DataColumn("QTY_1", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY_1);
                this.columnWIP_COST = new global::System.Data.DataColumn("WIP_COST", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIP_COST);
                this.columnINV_COST = new global::System.Data.DataColumn("INV_COST", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_COST);
                this.columnUNIT_COST = new global::System.Data.DataColumn("UNIT_COST", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT_COST);
                this.columnWIP_QTY = new global::System.Data.DataColumn("WIP_QTY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIP_QTY);
                this.columnINV_QTY = new global::System.Data.DataColumn("INV_QTY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_QTY);
                this.columnGROUP1 = new global::System.Data.DataColumn("GROUP1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP1);
                this.columnGROUP2 = new global::System.Data.DataColumn("GROUP2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP2);
                this.columnGROUP3 = new global::System.Data.DataColumn("GROUP3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP3);
                this.columnGROUP4 = new global::System.Data.DataColumn("GROUP4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP4);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(ushort), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnUNIT = new global::System.Data.DataColumn("UNIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUNIT);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPCostRow NewdtCurrentWIPCostRow() {
                return ((dtCurrentWIPCostRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCurrentWIPCostRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtCurrentWIPCostRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCurrentWIPCostRowChanged != null)) {
                    this.dtCurrentWIPCostRowChanged(this, new dtCurrentWIPCostRowChangeEvent(((dtCurrentWIPCostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCurrentWIPCostRowChanging != null)) {
                    this.dtCurrentWIPCostRowChanging(this, new dtCurrentWIPCostRowChangeEvent(((dtCurrentWIPCostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCurrentWIPCostRowDeleted != null)) {
                    this.dtCurrentWIPCostRowDeleted(this, new dtCurrentWIPCostRowChangeEvent(((dtCurrentWIPCostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCurrentWIPCostRowDeleting != null)) {
                    this.dtCurrentWIPCostRowDeleting(this, new dtCurrentWIPCostRowChangeEvent(((dtCurrentWIPCostRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtCurrentWIPCostRow(dtCurrentWIPCostRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WIPStockModule ds = new WIPStockModule();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCurrentWIPCostDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDailyWIPTrendDataTable : global::System.Data.TypedTableBase<dtDailyWIPTrendRow> {
            
            private global::System.Data.DataColumn columnRPT_TYPE;
            
            private global::System.Data.DataColumn columnWORK_DATE;
            
            private global::System.Data.DataColumn columnGROUP1;
            
            private global::System.Data.DataColumn columnCREATE_CODE;
            
            private global::System.Data.DataColumn columnWIP_QTY;
            
            private global::System.Data.DataColumn columnWIP_COST;
            
            private global::System.Data.DataColumn columnINV_QTY;
            
            private global::System.Data.DataColumn columnINV_COST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtDailyWIPTrendDataTable() {
                this.TableName = "dtDailyWIPTrend";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtDailyWIPTrendDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtDailyWIPTrendDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPT_TYPEColumn {
                get {
                    return this.columnRPT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WORK_DATEColumn {
                get {
                    return this.columnWORK_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GROUP1Column {
                get {
                    return this.columnGROUP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CREATE_CODEColumn {
                get {
                    return this.columnCREATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIP_QTYColumn {
                get {
                    return this.columnWIP_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WIP_COSTColumn {
                get {
                    return this.columnWIP_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INV_QTYColumn {
                get {
                    return this.columnINV_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INV_COSTColumn {
                get {
                    return this.columnINV_COST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtDailyWIPTrendRow this[int index] {
                get {
                    return ((dtDailyWIPTrendRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtDailyWIPTrendRowChangeEventHandler dtDailyWIPTrendRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtDailyWIPTrendRowChangeEventHandler dtDailyWIPTrendRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtDailyWIPTrendRowChangeEventHandler dtDailyWIPTrendRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtDailyWIPTrendRowChangeEventHandler dtDailyWIPTrendRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtDailyWIPTrendRow(dtDailyWIPTrendRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtDailyWIPTrendRow AdddtDailyWIPTrendRow(string RPT_TYPE, System.DateTime WORK_DATE, string GROUP1, string CREATE_CODE, uint WIP_QTY, uint WIP_COST, uint INV_QTY, uint INV_COST) {
                dtDailyWIPTrendRow rowdtDailyWIPTrendRow = ((dtDailyWIPTrendRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RPT_TYPE,
                        WORK_DATE,
                        GROUP1,
                        CREATE_CODE,
                        WIP_QTY,
                        WIP_COST,
                        INV_QTY,
                        INV_COST};
                rowdtDailyWIPTrendRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtDailyWIPTrendRow);
                return rowdtDailyWIPTrendRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtDailyWIPTrendDataTable cln = ((dtDailyWIPTrendDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDailyWIPTrendDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRPT_TYPE = base.Columns["RPT_TYPE"];
                this.columnWORK_DATE = base.Columns["WORK_DATE"];
                this.columnGROUP1 = base.Columns["GROUP1"];
                this.columnCREATE_CODE = base.Columns["CREATE_CODE"];
                this.columnWIP_QTY = base.Columns["WIP_QTY"];
                this.columnWIP_COST = base.Columns["WIP_COST"];
                this.columnINV_QTY = base.Columns["INV_QTY"];
                this.columnINV_COST = base.Columns["INV_COST"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRPT_TYPE = new global::System.Data.DataColumn("RPT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPT_TYPE);
                this.columnWORK_DATE = new global::System.Data.DataColumn("WORK_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORK_DATE);
                this.columnGROUP1 = new global::System.Data.DataColumn("GROUP1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP1);
                this.columnCREATE_CODE = new global::System.Data.DataColumn("CREATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_CODE);
                this.columnWIP_QTY = new global::System.Data.DataColumn("WIP_QTY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIP_QTY);
                this.columnWIP_COST = new global::System.Data.DataColumn("WIP_COST", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWIP_COST);
                this.columnINV_QTY = new global::System.Data.DataColumn("INV_QTY", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_QTY);
                this.columnINV_COST = new global::System.Data.DataColumn("INV_COST", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINV_COST);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtDailyWIPTrendRow NewdtDailyWIPTrendRow() {
                return ((dtDailyWIPTrendRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtDailyWIPTrendRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtDailyWIPTrendRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtDailyWIPTrendRowChanged != null)) {
                    this.dtDailyWIPTrendRowChanged(this, new dtDailyWIPTrendRowChangeEvent(((dtDailyWIPTrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtDailyWIPTrendRowChanging != null)) {
                    this.dtDailyWIPTrendRowChanging(this, new dtDailyWIPTrendRowChangeEvent(((dtDailyWIPTrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtDailyWIPTrendRowDeleted != null)) {
                    this.dtDailyWIPTrendRowDeleted(this, new dtDailyWIPTrendRowChangeEvent(((dtDailyWIPTrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtDailyWIPTrendRowDeleting != null)) {
                    this.dtDailyWIPTrendRowDeleting(this, new dtDailyWIPTrendRowChangeEvent(((dtDailyWIPTrendRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtDailyWIPTrendRow(dtDailyWIPTrendRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                WIPStockModule ds = new WIPStockModule();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDailyWIPTrendDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtCurrentWIPRow : global::System.Data.DataRow {
            
            private dtCurrentWIPDataTable tabledtCurrentWIP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCurrentWIPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCurrentWIP = ((dtCurrentWIPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_DESC {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIP.LOT_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'LOT_DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.LOT_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIP.OPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'OPER\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER_DESC {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIP.OPER_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'OPER_DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.OPER_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MAT_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIP.MAT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'MAT_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.MAT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATE_CODE {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIP.CREATE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'CREATE_CODE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.CREATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QTY_1 {
                get {
                    try {
                        return ((int)(this[this.tabledtCurrentWIP.QTY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'QTY_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.QTY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_CATGRY {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIP.LOT_CATGRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIP\' 테이블의 \'LOT_CATGRY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIP.LOT_CATGRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_DESCNull() {
                return this.IsNull(this.tabledtCurrentWIP.LOT_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_DESCNull() {
                this[this.tabledtCurrentWIP.LOT_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERNull() {
                return this.IsNull(this.tabledtCurrentWIP.OPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERNull() {
                this[this.tabledtCurrentWIP.OPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPER_DESCNull() {
                return this.IsNull(this.tabledtCurrentWIP.OPER_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPER_DESCNull() {
                this[this.tabledtCurrentWIP.OPER_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAT_IDNull() {
                return this.IsNull(this.tabledtCurrentWIP.MAT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAT_IDNull() {
                this[this.tabledtCurrentWIP.MAT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATE_CODENull() {
                return this.IsNull(this.tabledtCurrentWIP.CREATE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATE_CODENull() {
                this[this.tabledtCurrentWIP.CREATE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQTY_1Null() {
                return this.IsNull(this.tabledtCurrentWIP.QTY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQTY_1Null() {
                this[this.tabledtCurrentWIP.QTY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_CATGRYNull() {
                return this.IsNull(this.tabledtCurrentWIP.LOT_CATGRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_CATGRYNull() {
                this[this.tabledtCurrentWIP.LOT_CATGRYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtCurrentWIPDtlRow : global::System.Data.DataRow {
            
            private dtCurrentWIPDtlDataTable tabledtCurrentWIPDtl;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCurrentWIPDtlRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCurrentWIPDtl = ((dtCurrentWIPDtlDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.LOT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'LOT_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.LOT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_CMF_2 {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.LOT_CMF_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'LOT_CMF_2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.LOT_CMF_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_DESC {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.LOT_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'LOT_DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.LOT_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.OPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'OPER\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER_DESC {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.OPER_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'OPER_DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.OPER_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MAT_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.MAT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'MAT_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.MAT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATE_CODE {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.CREATE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'CREATE_CODE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.CREATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CREATE_QTY_1 {
                get {
                    try {
                        return ((int)(this[this.tabledtCurrentWIPDtl.CREATE_QTY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'CREATE_QTY_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.CREATE_QTY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OPER_IN_QTY_1 {
                get {
                    try {
                        return ((int)(this[this.tabledtCurrentWIPDtl.OPER_IN_QTY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'OPER_IN_QTY_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.OPER_IN_QTY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QTY_1 {
                get {
                    try {
                        return ((int)(this[this.tabledtCurrentWIPDtl.QTY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'QTY_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.QTY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FAC_IN_TIME {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.FAC_IN_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'FAC_IN_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.FAC_IN_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER_IN_TIME {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.OPER_IN_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'OPER_IN_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.OPER_IN_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FLOW_IN_TIME {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.FLOW_IN_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'FLOW_IN_TIME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.FLOW_IN_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LAST_TRAN_CODE {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.LAST_TRAN_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'LAST_TRAN_CODE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.LAST_TRAN_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FAC_IN_DAY {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.FAC_IN_DAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'FAC_IN_DAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.FAC_IN_DAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER_IN_HOUR {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.OPER_IN_HOURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'OPER_IN_HOUR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.OPER_IN_HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_CATGRY {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPDtl.LOT_CATGRYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPDtl\' 테이블의 \'LOT_CATGRY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPDtl.LOT_CATGRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_IDNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.LOT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_IDNull() {
                this[this.tabledtCurrentWIPDtl.LOT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_CMF_2Null() {
                return this.IsNull(this.tabledtCurrentWIPDtl.LOT_CMF_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_CMF_2Null() {
                this[this.tabledtCurrentWIPDtl.LOT_CMF_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_DESCNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.LOT_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_DESCNull() {
                this[this.tabledtCurrentWIPDtl.LOT_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.OPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERNull() {
                this[this.tabledtCurrentWIPDtl.OPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPER_DESCNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.OPER_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPER_DESCNull() {
                this[this.tabledtCurrentWIPDtl.OPER_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAT_IDNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.MAT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAT_IDNull() {
                this[this.tabledtCurrentWIPDtl.MAT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATE_CODENull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.CREATE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATE_CODENull() {
                this[this.tabledtCurrentWIPDtl.CREATE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATE_QTY_1Null() {
                return this.IsNull(this.tabledtCurrentWIPDtl.CREATE_QTY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATE_QTY_1Null() {
                this[this.tabledtCurrentWIPDtl.CREATE_QTY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPER_IN_QTY_1Null() {
                return this.IsNull(this.tabledtCurrentWIPDtl.OPER_IN_QTY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPER_IN_QTY_1Null() {
                this[this.tabledtCurrentWIPDtl.OPER_IN_QTY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQTY_1Null() {
                return this.IsNull(this.tabledtCurrentWIPDtl.QTY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQTY_1Null() {
                this[this.tabledtCurrentWIPDtl.QTY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFAC_IN_TIMENull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.FAC_IN_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFAC_IN_TIMENull() {
                this[this.tabledtCurrentWIPDtl.FAC_IN_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPER_IN_TIMENull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.OPER_IN_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPER_IN_TIMENull() {
                this[this.tabledtCurrentWIPDtl.OPER_IN_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFLOW_IN_TIMENull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.FLOW_IN_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFLOW_IN_TIMENull() {
                this[this.tabledtCurrentWIPDtl.FLOW_IN_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLAST_TRAN_CODENull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.LAST_TRAN_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLAST_TRAN_CODENull() {
                this[this.tabledtCurrentWIPDtl.LAST_TRAN_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFAC_IN_DAYNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.FAC_IN_DAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFAC_IN_DAYNull() {
                this[this.tabledtCurrentWIPDtl.FAC_IN_DAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPER_IN_HOURNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.OPER_IN_HOURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPER_IN_HOURNull() {
                this[this.tabledtCurrentWIPDtl.OPER_IN_HOURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_CATGRYNull() {
                return this.IsNull(this.tabledtCurrentWIPDtl.LOT_CATGRYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_CATGRYNull() {
                this[this.tabledtCurrentWIPDtl.LOT_CATGRYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtCurrentWIPCostRow : global::System.Data.DataRow {
            
            private dtCurrentWIPCostDataTable tabledtCurrentWIPCost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCurrentWIPCostRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCurrentWIPCost = ((dtCurrentWIPCostDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RPT_TYPE {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.RPT_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'RPT_TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.RPT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOT_DESC {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.LOT_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'LOT_DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.LOT_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.OPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'OPER\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.OPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPER_DESC {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.OPER_DESCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'OPER_DESC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.OPER_DESCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MAT_ID {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.MAT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'MAT_ID\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.MAT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATE_CODE {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.CREATE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'CREATE_CODE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.CREATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint QTY_1 {
                get {
                    try {
                        return ((uint)(this[this.tabledtCurrentWIPCost.QTY_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'QTY_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.QTY_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint WIP_COST {
                get {
                    try {
                        return ((uint)(this[this.tabledtCurrentWIPCost.WIP_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'WIP_COST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.WIP_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint INV_COST {
                get {
                    try {
                        return ((uint)(this[this.tabledtCurrentWIPCost.INV_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'INV_COST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.INV_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float UNIT_COST {
                get {
                    try {
                        return ((float)(this[this.tabledtCurrentWIPCost.UNIT_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'UNIT_COST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.UNIT_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint WIP_QTY {
                get {
                    try {
                        return ((uint)(this[this.tabledtCurrentWIPCost.WIP_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'WIP_QTY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.WIP_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint INV_QTY {
                get {
                    try {
                        return ((uint)(this[this.tabledtCurrentWIPCost.INV_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'INV_QTY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.INV_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP1 {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.GROUP1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'GROUP1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.GROUP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP2 {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.GROUP2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'GROUP2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.GROUP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP3 {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.GROUP3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'GROUP3\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.GROUP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP4 {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.GROUP4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'GROUP4\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.GROUP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ushort SEQ {
                get {
                    try {
                        return ((ushort)(this[this.tabledtCurrentWIPCost.SEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'SEQ\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UNIT {
                get {
                    try {
                        return ((string)(this[this.tabledtCurrentWIPCost.UNITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtCurrentWIPCost\' 테이블의 \'UNIT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtCurrentWIPCost.UNITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPT_TYPENull() {
                return this.IsNull(this.tabledtCurrentWIPCost.RPT_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPT_TYPENull() {
                this[this.tabledtCurrentWIPCost.RPT_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOT_DESCNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.LOT_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOT_DESCNull() {
                this[this.tabledtCurrentWIPCost.LOT_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPERNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.OPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPERNull() {
                this[this.tabledtCurrentWIPCost.OPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPER_DESCNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.OPER_DESCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPER_DESCNull() {
                this[this.tabledtCurrentWIPCost.OPER_DESCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMAT_IDNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.MAT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMAT_IDNull() {
                this[this.tabledtCurrentWIPCost.MAT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATE_CODENull() {
                return this.IsNull(this.tabledtCurrentWIPCost.CREATE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATE_CODENull() {
                this[this.tabledtCurrentWIPCost.CREATE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQTY_1Null() {
                return this.IsNull(this.tabledtCurrentWIPCost.QTY_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQTY_1Null() {
                this[this.tabledtCurrentWIPCost.QTY_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIP_COSTNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.WIP_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIP_COSTNull() {
                this[this.tabledtCurrentWIPCost.WIP_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINV_COSTNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.INV_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINV_COSTNull() {
                this[this.tabledtCurrentWIPCost.INV_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNIT_COSTNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.UNIT_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNIT_COSTNull() {
                this[this.tabledtCurrentWIPCost.UNIT_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIP_QTYNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.WIP_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIP_QTYNull() {
                this[this.tabledtCurrentWIPCost.WIP_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINV_QTYNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.INV_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINV_QTYNull() {
                this[this.tabledtCurrentWIPCost.INV_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROUP1Null() {
                return this.IsNull(this.tabledtCurrentWIPCost.GROUP1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROUP1Null() {
                this[this.tabledtCurrentWIPCost.GROUP1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROUP2Null() {
                return this.IsNull(this.tabledtCurrentWIPCost.GROUP2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROUP2Null() {
                this[this.tabledtCurrentWIPCost.GROUP2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROUP3Null() {
                return this.IsNull(this.tabledtCurrentWIPCost.GROUP3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROUP3Null() {
                this[this.tabledtCurrentWIPCost.GROUP3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROUP4Null() {
                return this.IsNull(this.tabledtCurrentWIPCost.GROUP4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROUP4Null() {
                this[this.tabledtCurrentWIPCost.GROUP4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSEQNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.SEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSEQNull() {
                this[this.tabledtCurrentWIPCost.SEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUNITNull() {
                return this.IsNull(this.tabledtCurrentWIPCost.UNITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUNITNull() {
                this[this.tabledtCurrentWIPCost.UNITColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtDailyWIPTrendRow : global::System.Data.DataRow {
            
            private dtDailyWIPTrendDataTable tabledtDailyWIPTrend;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtDailyWIPTrendRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtDailyWIPTrend = ((dtDailyWIPTrendDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RPT_TYPE {
                get {
                    try {
                        return ((string)(this[this.tabledtDailyWIPTrend.RPT_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'RPT_TYPE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.RPT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime WORK_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtDailyWIPTrend.WORK_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'WORK_DATE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.WORK_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GROUP1 {
                get {
                    try {
                        return ((string)(this[this.tabledtDailyWIPTrend.GROUP1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'GROUP1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.GROUP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CREATE_CODE {
                get {
                    try {
                        return ((string)(this[this.tabledtDailyWIPTrend.CREATE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'CREATE_CODE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.CREATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint WIP_QTY {
                get {
                    try {
                        return ((uint)(this[this.tabledtDailyWIPTrend.WIP_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'WIP_QTY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.WIP_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint WIP_COST {
                get {
                    try {
                        return ((uint)(this[this.tabledtDailyWIPTrend.WIP_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'WIP_COST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.WIP_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint INV_QTY {
                get {
                    try {
                        return ((uint)(this[this.tabledtDailyWIPTrend.INV_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'INV_QTY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.INV_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint INV_COST {
                get {
                    try {
                        return ((uint)(this[this.tabledtDailyWIPTrend.INV_COSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'dtDailyWIPTrend\' 테이블의 \'INV_COST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tabledtDailyWIPTrend.INV_COSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPT_TYPENull() {
                return this.IsNull(this.tabledtDailyWIPTrend.RPT_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPT_TYPENull() {
                this[this.tabledtDailyWIPTrend.RPT_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWORK_DATENull() {
                return this.IsNull(this.tabledtDailyWIPTrend.WORK_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWORK_DATENull() {
                this[this.tabledtDailyWIPTrend.WORK_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGROUP1Null() {
                return this.IsNull(this.tabledtDailyWIPTrend.GROUP1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGROUP1Null() {
                this[this.tabledtDailyWIPTrend.GROUP1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCREATE_CODENull() {
                return this.IsNull(this.tabledtDailyWIPTrend.CREATE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCREATE_CODENull() {
                this[this.tabledtDailyWIPTrend.CREATE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIP_QTYNull() {
                return this.IsNull(this.tabledtDailyWIPTrend.WIP_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIP_QTYNull() {
                this[this.tabledtDailyWIPTrend.WIP_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWIP_COSTNull() {
                return this.IsNull(this.tabledtDailyWIPTrend.WIP_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWIP_COSTNull() {
                this[this.tabledtDailyWIPTrend.WIP_COSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINV_QTYNull() {
                return this.IsNull(this.tabledtDailyWIPTrend.INV_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINV_QTYNull() {
                this[this.tabledtDailyWIPTrend.INV_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINV_COSTNull() {
                return this.IsNull(this.tabledtDailyWIPTrend.INV_COSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINV_COSTNull() {
                this[this.tabledtDailyWIPTrend.INV_COSTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtCurrentWIPRowChangeEvent : global::System.EventArgs {
            
            private dtCurrentWIPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPRowChangeEvent(dtCurrentWIPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtCurrentWIPDtlRowChangeEvent : global::System.EventArgs {
            
            private dtCurrentWIPDtlRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDtlRowChangeEvent(dtCurrentWIPDtlRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPDtlRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtCurrentWIPCostRowChangeEvent : global::System.EventArgs {
            
            private dtCurrentWIPCostRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPCostRowChangeEvent(dtCurrentWIPCostRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCurrentWIPCostRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtDailyWIPTrendRowChangeEvent : global::System.EventArgs {
            
            private dtDailyWIPTrendRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtDailyWIPTrendRowChangeEvent(dtDailyWIPTrendRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtDailyWIPTrendRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591