//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.34209
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ERPAppAddition.ERPAddition.AM.AM_AC1001 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Display_AMT")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Display_AMT : global::System.Data.DataSet {
        
        private A_DAILY_AMTDataTable tableA_DAILY_AMT;
        
        private A_DAILY_AMT_PLANDataTable tableA_DAILY_AMT_PLAN;
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Display_AMT() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected Display_AMT(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["A_DAILY_AMT"] != null)) {
                    base.Tables.Add(new A_DAILY_AMTDataTable(ds.Tables["A_DAILY_AMT"]));
                }
                if ((ds.Tables["A_DAILY_AMT_PLAN"] != null)) {
                    base.Tables.Add(new A_DAILY_AMT_PLANDataTable(ds.Tables["A_DAILY_AMT_PLAN"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public A_DAILY_AMTDataTable A_DAILY_AMT {
            get {
                return this.tableA_DAILY_AMT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public A_DAILY_AMT_PLANDataTable A_DAILY_AMT_PLAN {
            get {
                return this.tableA_DAILY_AMT_PLAN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            Display_AMT cln = ((Display_AMT)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["A_DAILY_AMT"] != null)) {
                    base.Tables.Add(new A_DAILY_AMTDataTable(ds.Tables["A_DAILY_AMT"]));
                }
                if ((ds.Tables["A_DAILY_AMT_PLAN"] != null)) {
                    base.Tables.Add(new A_DAILY_AMT_PLANDataTable(ds.Tables["A_DAILY_AMT_PLAN"]));
                }
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableA_DAILY_AMT = ((A_DAILY_AMTDataTable)(base.Tables["A_DAILY_AMT"]));
            if ((initTable == true)) {
                if ((this.tableA_DAILY_AMT != null)) {
                    this.tableA_DAILY_AMT.InitVars();
                }
            }
            this.tableA_DAILY_AMT_PLAN = ((A_DAILY_AMT_PLANDataTable)(base.Tables["A_DAILY_AMT_PLAN"]));
            if ((initTable == true)) {
                if ((this.tableA_DAILY_AMT_PLAN != null)) {
                    this.tableA_DAILY_AMT_PLAN.InitVars();
                }
            }
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "Display_AMT";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Display_AMT.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableA_DAILY_AMT = new A_DAILY_AMTDataTable();
            base.Tables.Add(this.tableA_DAILY_AMT);
            this.tableA_DAILY_AMT_PLAN = new A_DAILY_AMT_PLANDataTable();
            base.Tables.Add(this.tableA_DAILY_AMT_PLAN);
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeA_DAILY_AMT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeA_DAILY_AMT_PLAN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Display_AMT ds = new Display_AMT();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void A_DAILY_AMTRowChangeEventHandler(object sender, A_DAILY_AMTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void A_DAILY_AMT_PLANRowChangeEventHandler(object sender, A_DAILY_AMT_PLANRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class A_DAILY_AMTDataTable : global::System.Data.TypedTableBase<A_DAILY_AMTRow> {
            
            private global::System.Data.DataColumn columnYYYY;
            
            private global::System.Data.DataColumn columnMM;
            
            private global::System.Data.DataColumn columnDD;
            
            private global::System.Data.DataColumn columnLENDER_COLLET;
            
            private global::System.Data.DataColumn columnSURTAX_REFUND;
            
            private global::System.Data.DataColumn columnTARIFF_REFUND;
            
            private global::System.Data.DataColumn columnLEASE_INCOME;
            
            private global::System.Data.DataColumn columnIMPORT_INCOME;
            
            private global::System.Data.DataColumn columnUSELESS_PAY;
            
            private global::System.Data.DataColumn columnETC_1;
            
            private global::System.Data.DataColumn columnETC_1_BUSINESS_INCOME;
            
            private global::System.Data.DataColumn columnM_MATERIAL;
            
            private global::System.Data.DataColumn columnM_PAY;
            
            private global::System.Data.DataColumn columnM_RETIRE;
            
            private global::System.Data.DataColumn columnM_FOUNTAIN;
            
            private global::System.Data.DataColumn columnM_WELRARE;
            
            private global::System.Data.DataColumn columnPAYROLL_COSTS_EXPENSE;
            
            private global::System.Data.DataColumn columnEXPENSE;
            
            private global::System.Data.DataColumn columnOS_PAY;
            
            private global::System.Data.DataColumn columnOUTSIDE_PAY;
            
            private global::System.Data.DataColumn columnEXPENSE_ETC;
            
            private global::System.Data.DataColumn columnINSEREST;
            
            private global::System.Data.DataColumn columnDEPOSIT_LEASE;
            
            private global::System.Data.DataColumn columnETC_2;
            
            private global::System.Data.DataColumn columnETC_2_BUSINESS_EXPENSE;
            
            private global::System.Data.DataColumn columnETC_2_BUSINESS_INFLOW;
            
            private global::System.Data.DataColumn columnFIXED_ASSET_OUT;
            
            private global::System.Data.DataColumn columnLOAN_INCOME;
            
            private global::System.Data.DataColumn columnFINANCIAL_IN;
            
            private global::System.Data.DataColumn columnVALUABLE_PAPAERS_INCOME;
            
            private global::System.Data.DataColumn columnINVERST;
            
            private global::System.Data.DataColumn columnINVEST_LAND;
            
            private global::System.Data.DataColumn columnINVEST_MACHINE;
            
            private global::System.Data.DataColumn columnINVEST_CAR;
            
            private global::System.Data.DataColumn columnFIXED_ASSET_IN;
            
            private global::System.Data.DataColumn columnLOAN_EXPENSE;
            
            private global::System.Data.DataColumn columnFINANCIAL_OUT;
            
            private global::System.Data.DataColumn columnINVERST_OUT;
            
            private global::System.Data.DataColumn columnINVEST_OUT_CASHOUT;
            
            private global::System.Data.DataColumn columnINVEST_OUT_CASH;
            
            private global::System.Data.DataColumn columnBEWBORROW;
            
            private global::System.Data.DataColumn columnUSANCE_CD1;
            
            private global::System.Data.DataColumn columnINCRES_CAPITAL;
            
            private global::System.Data.DataColumn columnINCRES_CAPITAL_CASH;
            
            private global::System.Data.DataColumn columnLOAN_CD1;
            
            private global::System.Data.DataColumn columnUSANCE_CD2;
            
            private global::System.Data.DataColumn columnDIVIDEND;
            
            private global::System.Data.DataColumn columnDIVIDEND_CASHOUT;
            
            private global::System.Data.DataColumn columnDIVIDEND_CASH;
            
            private global::System.Data.DataColumn columnDIVIDEND_LAST_AMT;
            
            private global::System.Data.DataColumn columnDIVIDEND_AMT;
            
            private global::System.Data.DataColumn columnDIVIDEND_OVER_AMT;
            
            private global::System.Data.DataColumn columnEXT1_CD;
            
            private global::System.Data.DataColumn columnEXT2_CD;
            
            private global::System.Data.DataColumn columnEXT3_CD;
            
            private global::System.Data.DataColumn columnEXT4_CD;
            
            private global::System.Data.DataColumn columnEXT5_CD;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnINSRT_USER_ID;
            
            private global::System.Data.DataColumn columnINSRT_DT;
            
            private global::System.Data.DataColumn columnUPDT_USER_ID;
            
            private global::System.Data.DataColumn columnUPDT_DT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTDataTable() {
                this.TableName = "A_DAILY_AMT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal A_DAILY_AMTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected A_DAILY_AMTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YYYYColumn {
                get {
                    return this.columnYYYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MMColumn {
                get {
                    return this.columnMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDColumn {
                get {
                    return this.columnDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LENDER_COLLETColumn {
                get {
                    return this.columnLENDER_COLLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SURTAX_REFUNDColumn {
                get {
                    return this.columnSURTAX_REFUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TARIFF_REFUNDColumn {
                get {
                    return this.columnTARIFF_REFUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LEASE_INCOMEColumn {
                get {
                    return this.columnLEASE_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMPORT_INCOMEColumn {
                get {
                    return this.columnIMPORT_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USELESS_PAYColumn {
                get {
                    return this.columnUSELESS_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_1Column {
                get {
                    return this.columnETC_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_1_BUSINESS_INCOMEColumn {
                get {
                    return this.columnETC_1_BUSINESS_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_MATERIALColumn {
                get {
                    return this.columnM_MATERIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_PAYColumn {
                get {
                    return this.columnM_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_RETIREColumn {
                get {
                    return this.columnM_RETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_FOUNTAINColumn {
                get {
                    return this.columnM_FOUNTAIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_WELRAREColumn {
                get {
                    return this.columnM_WELRARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYROLL_COSTS_EXPENSEColumn {
                get {
                    return this.columnPAYROLL_COSTS_EXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSEColumn {
                get {
                    return this.columnEXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OS_PAYColumn {
                get {
                    return this.columnOS_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUTSIDE_PAYColumn {
                get {
                    return this.columnOUTSIDE_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_ETCColumn {
                get {
                    return this.columnEXPENSE_ETC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSERESTColumn {
                get {
                    return this.columnINSEREST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPOSIT_LEASEColumn {
                get {
                    return this.columnDEPOSIT_LEASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_2Column {
                get {
                    return this.columnETC_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_2_BUSINESS_EXPENSEColumn {
                get {
                    return this.columnETC_2_BUSINESS_EXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_2_BUSINESS_INFLOWColumn {
                get {
                    return this.columnETC_2_BUSINESS_INFLOW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXED_ASSET_OUTColumn {
                get {
                    return this.columnFIXED_ASSET_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOAN_INCOMEColumn {
                get {
                    return this.columnLOAN_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINANCIAL_INColumn {
                get {
                    return this.columnFINANCIAL_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALUABLE_PAPAERS_INCOMEColumn {
                get {
                    return this.columnVALUABLE_PAPAERS_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVERSTColumn {
                get {
                    return this.columnINVERST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_LANDColumn {
                get {
                    return this.columnINVEST_LAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_MACHINEColumn {
                get {
                    return this.columnINVEST_MACHINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_CARColumn {
                get {
                    return this.columnINVEST_CAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXED_ASSET_INColumn {
                get {
                    return this.columnFIXED_ASSET_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOAN_EXPENSEColumn {
                get {
                    return this.columnLOAN_EXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINANCIAL_OUTColumn {
                get {
                    return this.columnFINANCIAL_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVERST_OUTColumn {
                get {
                    return this.columnINVERST_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_OUT_CASHOUTColumn {
                get {
                    return this.columnINVEST_OUT_CASHOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_OUT_CASHColumn {
                get {
                    return this.columnINVEST_OUT_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BEWBORROWColumn {
                get {
                    return this.columnBEWBORROW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USANCE_CD1Column {
                get {
                    return this.columnUSANCE_CD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INCRES_CAPITALColumn {
                get {
                    return this.columnINCRES_CAPITAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INCRES_CAPITAL_CASHColumn {
                get {
                    return this.columnINCRES_CAPITAL_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOAN_CD1Column {
                get {
                    return this.columnLOAN_CD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USANCE_CD2Column {
                get {
                    return this.columnUSANCE_CD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDENDColumn {
                get {
                    return this.columnDIVIDEND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_CASHOUTColumn {
                get {
                    return this.columnDIVIDEND_CASHOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_CASHColumn {
                get {
                    return this.columnDIVIDEND_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_LAST_AMTColumn {
                get {
                    return this.columnDIVIDEND_LAST_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_AMTColumn {
                get {
                    return this.columnDIVIDEND_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_OVER_AMTColumn {
                get {
                    return this.columnDIVIDEND_OVER_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT1_CDColumn {
                get {
                    return this.columnEXT1_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT2_CDColumn {
                get {
                    return this.columnEXT2_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT3_CDColumn {
                get {
                    return this.columnEXT3_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT4_CDColumn {
                get {
                    return this.columnEXT4_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT5_CDColumn {
                get {
                    return this.columnEXT5_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSRT_USER_IDColumn {
                get {
                    return this.columnINSRT_USER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSRT_DTColumn {
                get {
                    return this.columnINSRT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UPDT_USER_IDColumn {
                get {
                    return this.columnUPDT_USER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UPDT_DTColumn {
                get {
                    return this.columnUPDT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTRow this[int index] {
                get {
                    return ((A_DAILY_AMTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMTRowChangeEventHandler A_DAILY_AMTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMTRowChangeEventHandler A_DAILY_AMTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMTRowChangeEventHandler A_DAILY_AMTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMTRowChangeEventHandler A_DAILY_AMTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddA_DAILY_AMTRow(A_DAILY_AMTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTRow AddA_DAILY_AMTRow(
                        string YYYY, 
                        string MM, 
                        string DD, 
                        decimal LENDER_COLLET, 
                        decimal SURTAX_REFUND, 
                        decimal TARIFF_REFUND, 
                        decimal LEASE_INCOME, 
                        decimal IMPORT_INCOME, 
                        decimal USELESS_PAY, 
                        decimal ETC_1, 
                        decimal ETC_1_BUSINESS_INCOME, 
                        decimal M_MATERIAL, 
                        decimal M_PAY, 
                        decimal M_RETIRE, 
                        decimal M_FOUNTAIN, 
                        decimal M_WELRARE, 
                        decimal PAYROLL_COSTS_EXPENSE, 
                        decimal EXPENSE, 
                        decimal OS_PAY, 
                        decimal OUTSIDE_PAY, 
                        decimal EXPENSE_ETC, 
                        decimal INSEREST, 
                        decimal DEPOSIT_LEASE, 
                        decimal ETC_2, 
                        decimal ETC_2_BUSINESS_EXPENSE, 
                        decimal ETC_2_BUSINESS_INFLOW, 
                        decimal FIXED_ASSET_OUT, 
                        decimal LOAN_INCOME, 
                        decimal FINANCIAL_IN, 
                        decimal VALUABLE_PAPAERS_INCOME, 
                        decimal INVERST, 
                        decimal INVEST_LAND, 
                        decimal INVEST_MACHINE, 
                        decimal INVEST_CAR, 
                        decimal FIXED_ASSET_IN, 
                        decimal LOAN_EXPENSE, 
                        decimal FINANCIAL_OUT, 
                        decimal INVERST_OUT, 
                        decimal INVEST_OUT_CASHOUT, 
                        decimal INVEST_OUT_CASH, 
                        decimal BEWBORROW, 
                        decimal USANCE_CD1, 
                        decimal INCRES_CAPITAL, 
                        decimal INCRES_CAPITAL_CASH, 
                        decimal LOAN_CD1, 
                        decimal USANCE_CD2, 
                        decimal DIVIDEND, 
                        decimal DIVIDEND_CASHOUT, 
                        decimal DIVIDEND_CASH, 
                        decimal DIVIDEND_LAST_AMT, 
                        decimal DIVIDEND_AMT, 
                        decimal DIVIDEND_OVER_AMT, 
                        decimal EXT1_CD, 
                        decimal EXT2_CD, 
                        decimal EXT3_CD, 
                        decimal EXT4_CD, 
                        decimal EXT5_CD, 
                        string REMARK, 
                        string INSRT_USER_ID, 
                        System.DateTime INSRT_DT, 
                        string UPDT_USER_ID, 
                        System.DateTime UPDT_DT) {
                A_DAILY_AMTRow rowA_DAILY_AMTRow = ((A_DAILY_AMTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YYYY,
                        MM,
                        DD,
                        LENDER_COLLET,
                        SURTAX_REFUND,
                        TARIFF_REFUND,
                        LEASE_INCOME,
                        IMPORT_INCOME,
                        USELESS_PAY,
                        ETC_1,
                        ETC_1_BUSINESS_INCOME,
                        M_MATERIAL,
                        M_PAY,
                        M_RETIRE,
                        M_FOUNTAIN,
                        M_WELRARE,
                        PAYROLL_COSTS_EXPENSE,
                        EXPENSE,
                        OS_PAY,
                        OUTSIDE_PAY,
                        EXPENSE_ETC,
                        INSEREST,
                        DEPOSIT_LEASE,
                        ETC_2,
                        ETC_2_BUSINESS_EXPENSE,
                        ETC_2_BUSINESS_INFLOW,
                        FIXED_ASSET_OUT,
                        LOAN_INCOME,
                        FINANCIAL_IN,
                        VALUABLE_PAPAERS_INCOME,
                        INVERST,
                        INVEST_LAND,
                        INVEST_MACHINE,
                        INVEST_CAR,
                        FIXED_ASSET_IN,
                        LOAN_EXPENSE,
                        FINANCIAL_OUT,
                        INVERST_OUT,
                        INVEST_OUT_CASHOUT,
                        INVEST_OUT_CASH,
                        BEWBORROW,
                        USANCE_CD1,
                        INCRES_CAPITAL,
                        INCRES_CAPITAL_CASH,
                        LOAN_CD1,
                        USANCE_CD2,
                        DIVIDEND,
                        DIVIDEND_CASHOUT,
                        DIVIDEND_CASH,
                        DIVIDEND_LAST_AMT,
                        DIVIDEND_AMT,
                        DIVIDEND_OVER_AMT,
                        EXT1_CD,
                        EXT2_CD,
                        EXT3_CD,
                        EXT4_CD,
                        EXT5_CD,
                        REMARK,
                        INSRT_USER_ID,
                        INSRT_DT,
                        UPDT_USER_ID,
                        UPDT_DT};
                rowA_DAILY_AMTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowA_DAILY_AMTRow);
                return rowA_DAILY_AMTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTRow FindByYYYYMMDD(string YYYY, string MM, string DD) {
                return ((A_DAILY_AMTRow)(this.Rows.Find(new object[] {
                            YYYY,
                            MM,
                            DD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                A_DAILY_AMTDataTable cln = ((A_DAILY_AMTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new A_DAILY_AMTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnYYYY = base.Columns["YYYY"];
                this.columnMM = base.Columns["MM"];
                this.columnDD = base.Columns["DD"];
                this.columnLENDER_COLLET = base.Columns["LENDER_COLLET"];
                this.columnSURTAX_REFUND = base.Columns["SURTAX_REFUND"];
                this.columnTARIFF_REFUND = base.Columns["TARIFF_REFUND"];
                this.columnLEASE_INCOME = base.Columns["LEASE_INCOME"];
                this.columnIMPORT_INCOME = base.Columns["IMPORT_INCOME"];
                this.columnUSELESS_PAY = base.Columns["USELESS_PAY"];
                this.columnETC_1 = base.Columns["ETC_1"];
                this.columnETC_1_BUSINESS_INCOME = base.Columns["ETC_1_BUSINESS_INCOME"];
                this.columnM_MATERIAL = base.Columns["M_MATERIAL"];
                this.columnM_PAY = base.Columns["M_PAY"];
                this.columnM_RETIRE = base.Columns["M_RETIRE"];
                this.columnM_FOUNTAIN = base.Columns["M_FOUNTAIN"];
                this.columnM_WELRARE = base.Columns["M_WELRARE"];
                this.columnPAYROLL_COSTS_EXPENSE = base.Columns["PAYROLL_COSTS_EXPENSE"];
                this.columnEXPENSE = base.Columns["EXPENSE"];
                this.columnOS_PAY = base.Columns["OS_PAY"];
                this.columnOUTSIDE_PAY = base.Columns["OUTSIDE_PAY"];
                this.columnEXPENSE_ETC = base.Columns["EXPENSE_ETC"];
                this.columnINSEREST = base.Columns["INSEREST"];
                this.columnDEPOSIT_LEASE = base.Columns["DEPOSIT_LEASE"];
                this.columnETC_2 = base.Columns["ETC_2"];
                this.columnETC_2_BUSINESS_EXPENSE = base.Columns["ETC_2_BUSINESS_EXPENSE"];
                this.columnETC_2_BUSINESS_INFLOW = base.Columns["ETC_2_BUSINESS_INFLOW"];
                this.columnFIXED_ASSET_OUT = base.Columns["FIXED_ASSET_OUT"];
                this.columnLOAN_INCOME = base.Columns["LOAN_INCOME"];
                this.columnFINANCIAL_IN = base.Columns["FINANCIAL_IN"];
                this.columnVALUABLE_PAPAERS_INCOME = base.Columns["VALUABLE_PAPAERS_INCOME"];
                this.columnINVERST = base.Columns["INVERST"];
                this.columnINVEST_LAND = base.Columns["INVEST_LAND"];
                this.columnINVEST_MACHINE = base.Columns["INVEST_MACHINE"];
                this.columnINVEST_CAR = base.Columns["INVEST_CAR"];
                this.columnFIXED_ASSET_IN = base.Columns["FIXED_ASSET_IN"];
                this.columnLOAN_EXPENSE = base.Columns["LOAN_EXPENSE"];
                this.columnFINANCIAL_OUT = base.Columns["FINANCIAL_OUT"];
                this.columnINVERST_OUT = base.Columns["INVERST_OUT"];
                this.columnINVEST_OUT_CASHOUT = base.Columns["INVEST_OUT_CASHOUT"];
                this.columnINVEST_OUT_CASH = base.Columns["INVEST_OUT_CASH"];
                this.columnBEWBORROW = base.Columns["BEWBORROW"];
                this.columnUSANCE_CD1 = base.Columns["USANCE_CD1"];
                this.columnINCRES_CAPITAL = base.Columns["INCRES_CAPITAL"];
                this.columnINCRES_CAPITAL_CASH = base.Columns["INCRES_CAPITAL_CASH"];
                this.columnLOAN_CD1 = base.Columns["LOAN_CD1"];
                this.columnUSANCE_CD2 = base.Columns["USANCE_CD2"];
                this.columnDIVIDEND = base.Columns["DIVIDEND"];
                this.columnDIVIDEND_CASHOUT = base.Columns["DIVIDEND_CASHOUT"];
                this.columnDIVIDEND_CASH = base.Columns["DIVIDEND_CASH"];
                this.columnDIVIDEND_LAST_AMT = base.Columns["DIVIDEND_LAST_AMT"];
                this.columnDIVIDEND_AMT = base.Columns["DIVIDEND_AMT"];
                this.columnDIVIDEND_OVER_AMT = base.Columns["DIVIDEND_OVER_AMT"];
                this.columnEXT1_CD = base.Columns["EXT1_CD"];
                this.columnEXT2_CD = base.Columns["EXT2_CD"];
                this.columnEXT3_CD = base.Columns["EXT3_CD"];
                this.columnEXT4_CD = base.Columns["EXT4_CD"];
                this.columnEXT5_CD = base.Columns["EXT5_CD"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnINSRT_USER_ID = base.Columns["INSRT_USER_ID"];
                this.columnINSRT_DT = base.Columns["INSRT_DT"];
                this.columnUPDT_USER_ID = base.Columns["UPDT_USER_ID"];
                this.columnUPDT_DT = base.Columns["UPDT_DT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnYYYY = new global::System.Data.DataColumn("YYYY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYYY);
                this.columnMM = new global::System.Data.DataColumn("MM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM);
                this.columnDD = new global::System.Data.DataColumn("DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDD);
                this.columnLENDER_COLLET = new global::System.Data.DataColumn("LENDER_COLLET", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLENDER_COLLET);
                this.columnSURTAX_REFUND = new global::System.Data.DataColumn("SURTAX_REFUND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSURTAX_REFUND);
                this.columnTARIFF_REFUND = new global::System.Data.DataColumn("TARIFF_REFUND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARIFF_REFUND);
                this.columnLEASE_INCOME = new global::System.Data.DataColumn("LEASE_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEASE_INCOME);
                this.columnIMPORT_INCOME = new global::System.Data.DataColumn("IMPORT_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPORT_INCOME);
                this.columnUSELESS_PAY = new global::System.Data.DataColumn("USELESS_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSELESS_PAY);
                this.columnETC_1 = new global::System.Data.DataColumn("ETC_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_1);
                this.columnETC_1_BUSINESS_INCOME = new global::System.Data.DataColumn("ETC_1_BUSINESS_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_1_BUSINESS_INCOME);
                this.columnM_MATERIAL = new global::System.Data.DataColumn("M_MATERIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_MATERIAL);
                this.columnM_PAY = new global::System.Data.DataColumn("M_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_PAY);
                this.columnM_RETIRE = new global::System.Data.DataColumn("M_RETIRE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_RETIRE);
                this.columnM_FOUNTAIN = new global::System.Data.DataColumn("M_FOUNTAIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_FOUNTAIN);
                this.columnM_WELRARE = new global::System.Data.DataColumn("M_WELRARE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_WELRARE);
                this.columnPAYROLL_COSTS_EXPENSE = new global::System.Data.DataColumn("PAYROLL_COSTS_EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYROLL_COSTS_EXPENSE);
                this.columnEXPENSE = new global::System.Data.DataColumn("EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE);
                this.columnOS_PAY = new global::System.Data.DataColumn("OS_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOS_PAY);
                this.columnOUTSIDE_PAY = new global::System.Data.DataColumn("OUTSIDE_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTSIDE_PAY);
                this.columnEXPENSE_ETC = new global::System.Data.DataColumn("EXPENSE_ETC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_ETC);
                this.columnINSEREST = new global::System.Data.DataColumn("INSEREST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSEREST);
                this.columnDEPOSIT_LEASE = new global::System.Data.DataColumn("DEPOSIT_LEASE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPOSIT_LEASE);
                this.columnETC_2 = new global::System.Data.DataColumn("ETC_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_2);
                this.columnETC_2_BUSINESS_EXPENSE = new global::System.Data.DataColumn("ETC_2_BUSINESS_EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_2_BUSINESS_EXPENSE);
                this.columnETC_2_BUSINESS_INFLOW = new global::System.Data.DataColumn("ETC_2_BUSINESS_INFLOW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_2_BUSINESS_INFLOW);
                this.columnFIXED_ASSET_OUT = new global::System.Data.DataColumn("FIXED_ASSET_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXED_ASSET_OUT);
                this.columnLOAN_INCOME = new global::System.Data.DataColumn("LOAN_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAN_INCOME);
                this.columnFINANCIAL_IN = new global::System.Data.DataColumn("FINANCIAL_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINANCIAL_IN);
                this.columnVALUABLE_PAPAERS_INCOME = new global::System.Data.DataColumn("VALUABLE_PAPAERS_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUABLE_PAPAERS_INCOME);
                this.columnINVERST = new global::System.Data.DataColumn("INVERST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVERST);
                this.columnINVEST_LAND = new global::System.Data.DataColumn("INVEST_LAND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_LAND);
                this.columnINVEST_MACHINE = new global::System.Data.DataColumn("INVEST_MACHINE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_MACHINE);
                this.columnINVEST_CAR = new global::System.Data.DataColumn("INVEST_CAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_CAR);
                this.columnFIXED_ASSET_IN = new global::System.Data.DataColumn("FIXED_ASSET_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXED_ASSET_IN);
                this.columnLOAN_EXPENSE = new global::System.Data.DataColumn("LOAN_EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAN_EXPENSE);
                this.columnFINANCIAL_OUT = new global::System.Data.DataColumn("FINANCIAL_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINANCIAL_OUT);
                this.columnINVERST_OUT = new global::System.Data.DataColumn("INVERST_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVERST_OUT);
                this.columnINVEST_OUT_CASHOUT = new global::System.Data.DataColumn("INVEST_OUT_CASHOUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_OUT_CASHOUT);
                this.columnINVEST_OUT_CASH = new global::System.Data.DataColumn("INVEST_OUT_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_OUT_CASH);
                this.columnBEWBORROW = new global::System.Data.DataColumn("BEWBORROW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEWBORROW);
                this.columnUSANCE_CD1 = new global::System.Data.DataColumn("USANCE_CD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSANCE_CD1);
                this.columnINCRES_CAPITAL = new global::System.Data.DataColumn("INCRES_CAPITAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCRES_CAPITAL);
                this.columnINCRES_CAPITAL_CASH = new global::System.Data.DataColumn("INCRES_CAPITAL_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCRES_CAPITAL_CASH);
                this.columnLOAN_CD1 = new global::System.Data.DataColumn("LOAN_CD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAN_CD1);
                this.columnUSANCE_CD2 = new global::System.Data.DataColumn("USANCE_CD2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSANCE_CD2);
                this.columnDIVIDEND = new global::System.Data.DataColumn("DIVIDEND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND);
                this.columnDIVIDEND_CASHOUT = new global::System.Data.DataColumn("DIVIDEND_CASHOUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_CASHOUT);
                this.columnDIVIDEND_CASH = new global::System.Data.DataColumn("DIVIDEND_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_CASH);
                this.columnDIVIDEND_LAST_AMT = new global::System.Data.DataColumn("DIVIDEND_LAST_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_LAST_AMT);
                this.columnDIVIDEND_AMT = new global::System.Data.DataColumn("DIVIDEND_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_AMT);
                this.columnDIVIDEND_OVER_AMT = new global::System.Data.DataColumn("DIVIDEND_OVER_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_OVER_AMT);
                this.columnEXT1_CD = new global::System.Data.DataColumn("EXT1_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT1_CD);
                this.columnEXT2_CD = new global::System.Data.DataColumn("EXT2_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT2_CD);
                this.columnEXT3_CD = new global::System.Data.DataColumn("EXT3_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT3_CD);
                this.columnEXT4_CD = new global::System.Data.DataColumn("EXT4_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT4_CD);
                this.columnEXT5_CD = new global::System.Data.DataColumn("EXT5_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT5_CD);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnINSRT_USER_ID = new global::System.Data.DataColumn("INSRT_USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSRT_USER_ID);
                this.columnINSRT_DT = new global::System.Data.DataColumn("INSRT_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSRT_DT);
                this.columnUPDT_USER_ID = new global::System.Data.DataColumn("UPDT_USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDT_USER_ID);
                this.columnUPDT_DT = new global::System.Data.DataColumn("UPDT_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDT_DT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYYYY,
                                this.columnMM,
                                this.columnDD}, true));
                this.columnYYYY.AllowDBNull = false;
                this.columnYYYY.MaxLength = 4;
                this.columnMM.AllowDBNull = false;
                this.columnMM.MaxLength = 2;
                this.columnDD.AllowDBNull = false;
                this.columnDD.MaxLength = 2;
                this.columnREMARK.MaxLength = 20;
                this.columnINSRT_USER_ID.AllowDBNull = false;
                this.columnINSRT_USER_ID.MaxLength = 13;
                this.columnINSRT_DT.AllowDBNull = false;
                this.columnUPDT_USER_ID.AllowDBNull = false;
                this.columnUPDT_USER_ID.MaxLength = 13;
                this.columnUPDT_DT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTRow NewA_DAILY_AMTRow() {
                return ((A_DAILY_AMTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new A_DAILY_AMTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(A_DAILY_AMTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.A_DAILY_AMTRowChanged != null)) {
                    this.A_DAILY_AMTRowChanged(this, new A_DAILY_AMTRowChangeEvent(((A_DAILY_AMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.A_DAILY_AMTRowChanging != null)) {
                    this.A_DAILY_AMTRowChanging(this, new A_DAILY_AMTRowChangeEvent(((A_DAILY_AMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.A_DAILY_AMTRowDeleted != null)) {
                    this.A_DAILY_AMTRowDeleted(this, new A_DAILY_AMTRowChangeEvent(((A_DAILY_AMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.A_DAILY_AMTRowDeleting != null)) {
                    this.A_DAILY_AMTRowDeleting(this, new A_DAILY_AMTRowChangeEvent(((A_DAILY_AMTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveA_DAILY_AMTRow(A_DAILY_AMTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Display_AMT ds = new Display_AMT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "A_DAILY_AMTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class A_DAILY_AMT_PLANDataTable : global::System.Data.TypedTableBase<A_DAILY_AMT_PLANRow> {
            
            private global::System.Data.DataColumn columnYYYY;
            
            private global::System.Data.DataColumn columnMM;
            
            private global::System.Data.DataColumn columnDD;
            
            private global::System.Data.DataColumn columnSALE_CREDIT;
            
            private global::System.Data.DataColumn columnSALE_CREDIT_RSLT;
            
            private global::System.Data.DataColumn columnRETURN_PAY;
            
            private global::System.Data.DataColumn columnRETURN_PAY_RSLT;
            
            private global::System.Data.DataColumn columnSALES_PAY_IN;
            
            private global::System.Data.DataColumn columnSALES_PAY_IN_RSLT;
            
            private global::System.Data.DataColumn columnTRADE_PAYABLE;
            
            private global::System.Data.DataColumn columnTRADE_PAYABLE_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_OS;
            
            private global::System.Data.DataColumn columnNONPAYMENT_OS_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_OUTSIDE;
            
            private global::System.Data.DataColumn columnNONPAYMENT_OUTSIDE_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_ETC1;
            
            private global::System.Data.DataColumn columnNONPAYMENT_ETC1_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_ETC2;
            
            private global::System.Data.DataColumn columnNONPAYMENT_ETC2_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_MATERIAL;
            
            private global::System.Data.DataColumn columnNONPAYMENT_MATERIAL_RSLT;
            
            private global::System.Data.DataColumn columnNONPAYMENT_ETCPAY;
            
            private global::System.Data.DataColumn columnNONPAYMENT_ETCPAY_RSLT;
            
            private global::System.Data.DataColumn columnPERSONNEL_EXPENSES;
            
            private global::System.Data.DataColumn columnPERSONNEL_EXPENSES_RSLT;
            
            private global::System.Data.DataColumn columnPAID_INTEREST;
            
            private global::System.Data.DataColumn columnPAID_INTEREST_RSLT;
            
            private global::System.Data.DataColumn columnBUSINESS_CASH_OUT;
            
            private global::System.Data.DataColumn columnBUSINESS_CASH_OUT_RSLT;
            
            private global::System.Data.DataColumn columnBUSINESS_CASH_FLOW;
            
            private global::System.Data.DataColumn columnBUSINESS_CASH_FLOW_RSLT;
            
            private global::System.Data.DataColumn columnFIXED_ASSETS;
            
            private global::System.Data.DataColumn columnFIXED_ASSETS_RSLT;
            
            private global::System.Data.DataColumn columnETC_BUSINESS_OUT;
            
            private global::System.Data.DataColumn columnETC_BUSINESS_OUT_RSLT;
            
            private global::System.Data.DataColumn columnETC_BUSINESS_IN;
            
            private global::System.Data.DataColumn columnETC_BUSINESS_IN_RSLT;
            
            private global::System.Data.DataColumn columnSALES_PAY_ETC;
            
            private global::System.Data.DataColumn columnSALES_PAY_ETC_RSLT;
            
            private global::System.Data.DataColumn columnSPOTMONTH_PAY;
            
            private global::System.Data.DataColumn columnSPOTMONTH_PAY_RSLT;
            
            private global::System.Data.DataColumn columnBASIS_PAY;
            
            private global::System.Data.DataColumn columnBASIS_PAY_RSLT;
            
            private global::System.Data.DataColumn columnTERMEND_PAY;
            
            private global::System.Data.DataColumn columnTERMEND_PAY_RSLT;
            
            private global::System.Data.DataColumn columnAVAILABLE_PAY;
            
            private global::System.Data.DataColumn columnAVAILABLE_PAY_RSLT;
            
            private global::System.Data.DataColumn columnEXT1_CD;
            
            private global::System.Data.DataColumn columnEXT2_CD;
            
            private global::System.Data.DataColumn columnEXT3_CD;
            
            private global::System.Data.DataColumn columnEXT4_CD;
            
            private global::System.Data.DataColumn columnEXT5_CD;
            
            private global::System.Data.DataColumn columnREMARK;
            
            private global::System.Data.DataColumn columnINSRT_USER_ID;
            
            private global::System.Data.DataColumn columnINSRT_DT;
            
            private global::System.Data.DataColumn columnUPDT_USER_ID;
            
            private global::System.Data.DataColumn columnUPDT_DT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMT_PLANDataTable() {
                this.TableName = "A_DAILY_AMT_PLAN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal A_DAILY_AMT_PLANDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected A_DAILY_AMT_PLANDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YYYYColumn {
                get {
                    return this.columnYYYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MMColumn {
                get {
                    return this.columnMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDColumn {
                get {
                    return this.columnDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALE_CREDITColumn {
                get {
                    return this.columnSALE_CREDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALE_CREDIT_RSLTColumn {
                get {
                    return this.columnSALE_CREDIT_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETURN_PAYColumn {
                get {
                    return this.columnRETURN_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETURN_PAY_RSLTColumn {
                get {
                    return this.columnRETURN_PAY_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALES_PAY_INColumn {
                get {
                    return this.columnSALES_PAY_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALES_PAY_IN_RSLTColumn {
                get {
                    return this.columnSALES_PAY_IN_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRADE_PAYABLEColumn {
                get {
                    return this.columnTRADE_PAYABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TRADE_PAYABLE_RSLTColumn {
                get {
                    return this.columnTRADE_PAYABLE_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENTColumn {
                get {
                    return this.columnNONPAYMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_OSColumn {
                get {
                    return this.columnNONPAYMENT_OS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_OS_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_OS_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_OUTSIDEColumn {
                get {
                    return this.columnNONPAYMENT_OUTSIDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_OUTSIDE_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_OUTSIDE_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_ETC1Column {
                get {
                    return this.columnNONPAYMENT_ETC1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_ETC1_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_ETC1_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_ETC2Column {
                get {
                    return this.columnNONPAYMENT_ETC2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_ETC2_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_ETC2_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_MATERIALColumn {
                get {
                    return this.columnNONPAYMENT_MATERIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_MATERIAL_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_MATERIAL_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_ETCPAYColumn {
                get {
                    return this.columnNONPAYMENT_ETCPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NONPAYMENT_ETCPAY_RSLTColumn {
                get {
                    return this.columnNONPAYMENT_ETCPAY_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_EXPENSESColumn {
                get {
                    return this.columnPERSONNEL_EXPENSES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PERSONNEL_EXPENSES_RSLTColumn {
                get {
                    return this.columnPERSONNEL_EXPENSES_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAID_INTERESTColumn {
                get {
                    return this.columnPAID_INTEREST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAID_INTEREST_RSLTColumn {
                get {
                    return this.columnPAID_INTEREST_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUSINESS_CASH_OUTColumn {
                get {
                    return this.columnBUSINESS_CASH_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUSINESS_CASH_OUT_RSLTColumn {
                get {
                    return this.columnBUSINESS_CASH_OUT_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUSINESS_CASH_FLOWColumn {
                get {
                    return this.columnBUSINESS_CASH_FLOW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BUSINESS_CASH_FLOW_RSLTColumn {
                get {
                    return this.columnBUSINESS_CASH_FLOW_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXED_ASSETSColumn {
                get {
                    return this.columnFIXED_ASSETS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXED_ASSETS_RSLTColumn {
                get {
                    return this.columnFIXED_ASSETS_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_BUSINESS_OUTColumn {
                get {
                    return this.columnETC_BUSINESS_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_BUSINESS_OUT_RSLTColumn {
                get {
                    return this.columnETC_BUSINESS_OUT_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_BUSINESS_INColumn {
                get {
                    return this.columnETC_BUSINESS_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_BUSINESS_IN_RSLTColumn {
                get {
                    return this.columnETC_BUSINESS_IN_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALES_PAY_ETCColumn {
                get {
                    return this.columnSALES_PAY_ETC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALES_PAY_ETC_RSLTColumn {
                get {
                    return this.columnSALES_PAY_ETC_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPOTMONTH_PAYColumn {
                get {
                    return this.columnSPOTMONTH_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SPOTMONTH_PAY_RSLTColumn {
                get {
                    return this.columnSPOTMONTH_PAY_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BASIS_PAYColumn {
                get {
                    return this.columnBASIS_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BASIS_PAY_RSLTColumn {
                get {
                    return this.columnBASIS_PAY_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TERMEND_PAYColumn {
                get {
                    return this.columnTERMEND_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TERMEND_PAY_RSLTColumn {
                get {
                    return this.columnTERMEND_PAY_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVAILABLE_PAYColumn {
                get {
                    return this.columnAVAILABLE_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AVAILABLE_PAY_RSLTColumn {
                get {
                    return this.columnAVAILABLE_PAY_RSLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT1_CDColumn {
                get {
                    return this.columnEXT1_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT2_CDColumn {
                get {
                    return this.columnEXT2_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT3_CDColumn {
                get {
                    return this.columnEXT3_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT4_CDColumn {
                get {
                    return this.columnEXT4_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXT5_CDColumn {
                get {
                    return this.columnEXT5_CD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSRT_USER_IDColumn {
                get {
                    return this.columnINSRT_USER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSRT_DTColumn {
                get {
                    return this.columnINSRT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UPDT_USER_IDColumn {
                get {
                    return this.columnUPDT_USER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UPDT_DTColumn {
                get {
                    return this.columnUPDT_DT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMT_PLANRow this[int index] {
                get {
                    return ((A_DAILY_AMT_PLANRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMT_PLANRowChangeEventHandler A_DAILY_AMT_PLANRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMT_PLANRowChangeEventHandler A_DAILY_AMT_PLANRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMT_PLANRowChangeEventHandler A_DAILY_AMT_PLANRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event A_DAILY_AMT_PLANRowChangeEventHandler A_DAILY_AMT_PLANRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddA_DAILY_AMT_PLANRow(A_DAILY_AMT_PLANRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMT_PLANRow AddA_DAILY_AMT_PLANRow(
                        string YYYY, 
                        string MM, 
                        string DD, 
                        decimal SALE_CREDIT, 
                        decimal SALE_CREDIT_RSLT, 
                        decimal RETURN_PAY, 
                        decimal RETURN_PAY_RSLT, 
                        decimal SALES_PAY_IN, 
                        decimal SALES_PAY_IN_RSLT, 
                        decimal TRADE_PAYABLE, 
                        decimal TRADE_PAYABLE_RSLT, 
                        decimal NONPAYMENT, 
                        decimal NONPAYMENT_RSLT, 
                        decimal NONPAYMENT_OS, 
                        decimal NONPAYMENT_OS_RSLT, 
                        decimal NONPAYMENT_OUTSIDE, 
                        decimal NONPAYMENT_OUTSIDE_RSLT, 
                        decimal NONPAYMENT_ETC1, 
                        decimal NONPAYMENT_ETC1_RSLT, 
                        decimal NONPAYMENT_ETC2, 
                        decimal NONPAYMENT_ETC2_RSLT, 
                        decimal NONPAYMENT_MATERIAL, 
                        decimal NONPAYMENT_MATERIAL_RSLT, 
                        decimal NONPAYMENT_ETCPAY, 
                        decimal NONPAYMENT_ETCPAY_RSLT, 
                        decimal PERSONNEL_EXPENSES, 
                        decimal PERSONNEL_EXPENSES_RSLT, 
                        decimal PAID_INTEREST, 
                        decimal PAID_INTEREST_RSLT, 
                        decimal BUSINESS_CASH_OUT, 
                        decimal BUSINESS_CASH_OUT_RSLT, 
                        decimal BUSINESS_CASH_FLOW, 
                        decimal BUSINESS_CASH_FLOW_RSLT, 
                        decimal FIXED_ASSETS, 
                        decimal FIXED_ASSETS_RSLT, 
                        decimal ETC_BUSINESS_OUT, 
                        decimal ETC_BUSINESS_OUT_RSLT, 
                        decimal ETC_BUSINESS_IN, 
                        decimal ETC_BUSINESS_IN_RSLT, 
                        decimal SALES_PAY_ETC, 
                        decimal SALES_PAY_ETC_RSLT, 
                        decimal SPOTMONTH_PAY, 
                        decimal SPOTMONTH_PAY_RSLT, 
                        decimal BASIS_PAY, 
                        decimal BASIS_PAY_RSLT, 
                        decimal TERMEND_PAY, 
                        decimal TERMEND_PAY_RSLT, 
                        decimal AVAILABLE_PAY, 
                        decimal AVAILABLE_PAY_RSLT, 
                        decimal EXT1_CD, 
                        decimal EXT2_CD, 
                        decimal EXT3_CD, 
                        decimal EXT4_CD, 
                        decimal EXT5_CD, 
                        string REMARK, 
                        string INSRT_USER_ID, 
                        System.DateTime INSRT_DT, 
                        string UPDT_USER_ID, 
                        System.DateTime UPDT_DT) {
                A_DAILY_AMT_PLANRow rowA_DAILY_AMT_PLANRow = ((A_DAILY_AMT_PLANRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YYYY,
                        MM,
                        DD,
                        SALE_CREDIT,
                        SALE_CREDIT_RSLT,
                        RETURN_PAY,
                        RETURN_PAY_RSLT,
                        SALES_PAY_IN,
                        SALES_PAY_IN_RSLT,
                        TRADE_PAYABLE,
                        TRADE_PAYABLE_RSLT,
                        NONPAYMENT,
                        NONPAYMENT_RSLT,
                        NONPAYMENT_OS,
                        NONPAYMENT_OS_RSLT,
                        NONPAYMENT_OUTSIDE,
                        NONPAYMENT_OUTSIDE_RSLT,
                        NONPAYMENT_ETC1,
                        NONPAYMENT_ETC1_RSLT,
                        NONPAYMENT_ETC2,
                        NONPAYMENT_ETC2_RSLT,
                        NONPAYMENT_MATERIAL,
                        NONPAYMENT_MATERIAL_RSLT,
                        NONPAYMENT_ETCPAY,
                        NONPAYMENT_ETCPAY_RSLT,
                        PERSONNEL_EXPENSES,
                        PERSONNEL_EXPENSES_RSLT,
                        PAID_INTEREST,
                        PAID_INTEREST_RSLT,
                        BUSINESS_CASH_OUT,
                        BUSINESS_CASH_OUT_RSLT,
                        BUSINESS_CASH_FLOW,
                        BUSINESS_CASH_FLOW_RSLT,
                        FIXED_ASSETS,
                        FIXED_ASSETS_RSLT,
                        ETC_BUSINESS_OUT,
                        ETC_BUSINESS_OUT_RSLT,
                        ETC_BUSINESS_IN,
                        ETC_BUSINESS_IN_RSLT,
                        SALES_PAY_ETC,
                        SALES_PAY_ETC_RSLT,
                        SPOTMONTH_PAY,
                        SPOTMONTH_PAY_RSLT,
                        BASIS_PAY,
                        BASIS_PAY_RSLT,
                        TERMEND_PAY,
                        TERMEND_PAY_RSLT,
                        AVAILABLE_PAY,
                        AVAILABLE_PAY_RSLT,
                        EXT1_CD,
                        EXT2_CD,
                        EXT3_CD,
                        EXT4_CD,
                        EXT5_CD,
                        REMARK,
                        INSRT_USER_ID,
                        INSRT_DT,
                        UPDT_USER_ID,
                        UPDT_DT};
                rowA_DAILY_AMT_PLANRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowA_DAILY_AMT_PLANRow);
                return rowA_DAILY_AMT_PLANRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                A_DAILY_AMT_PLANDataTable cln = ((A_DAILY_AMT_PLANDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new A_DAILY_AMT_PLANDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnYYYY = base.Columns["YYYY"];
                this.columnMM = base.Columns["MM"];
                this.columnDD = base.Columns["DD"];
                this.columnSALE_CREDIT = base.Columns["SALE_CREDIT"];
                this.columnSALE_CREDIT_RSLT = base.Columns["SALE_CREDIT_RSLT"];
                this.columnRETURN_PAY = base.Columns["RETURN_PAY"];
                this.columnRETURN_PAY_RSLT = base.Columns["RETURN_PAY_RSLT"];
                this.columnSALES_PAY_IN = base.Columns["SALES_PAY_IN"];
                this.columnSALES_PAY_IN_RSLT = base.Columns["SALES_PAY_IN_RSLT"];
                this.columnTRADE_PAYABLE = base.Columns["TRADE_PAYABLE"];
                this.columnTRADE_PAYABLE_RSLT = base.Columns["TRADE_PAYABLE_RSLT"];
                this.columnNONPAYMENT = base.Columns["NONPAYMENT"];
                this.columnNONPAYMENT_RSLT = base.Columns["NONPAYMENT_RSLT"];
                this.columnNONPAYMENT_OS = base.Columns["NONPAYMENT_OS"];
                this.columnNONPAYMENT_OS_RSLT = base.Columns["NONPAYMENT_OS_RSLT"];
                this.columnNONPAYMENT_OUTSIDE = base.Columns["NONPAYMENT_OUTSIDE"];
                this.columnNONPAYMENT_OUTSIDE_RSLT = base.Columns["NONPAYMENT_OUTSIDE_RSLT"];
                this.columnNONPAYMENT_ETC1 = base.Columns["NONPAYMENT_ETC1"];
                this.columnNONPAYMENT_ETC1_RSLT = base.Columns["NONPAYMENT_ETC1_RSLT"];
                this.columnNONPAYMENT_ETC2 = base.Columns["NONPAYMENT_ETC2"];
                this.columnNONPAYMENT_ETC2_RSLT = base.Columns["NONPAYMENT_ETC2_RSLT"];
                this.columnNONPAYMENT_MATERIAL = base.Columns["NONPAYMENT_MATERIAL"];
                this.columnNONPAYMENT_MATERIAL_RSLT = base.Columns["NONPAYMENT_MATERIAL_RSLT"];
                this.columnNONPAYMENT_ETCPAY = base.Columns["NONPAYMENT_ETCPAY"];
                this.columnNONPAYMENT_ETCPAY_RSLT = base.Columns["NONPAYMENT_ETCPAY_RSLT"];
                this.columnPERSONNEL_EXPENSES = base.Columns["PERSONNEL_EXPENSES"];
                this.columnPERSONNEL_EXPENSES_RSLT = base.Columns["PERSONNEL_EXPENSES_RSLT"];
                this.columnPAID_INTEREST = base.Columns["PAID_INTEREST"];
                this.columnPAID_INTEREST_RSLT = base.Columns["PAID_INTEREST_RSLT"];
                this.columnBUSINESS_CASH_OUT = base.Columns["BUSINESS_CASH_OUT"];
                this.columnBUSINESS_CASH_OUT_RSLT = base.Columns["BUSINESS_CASH_OUT_RSLT"];
                this.columnBUSINESS_CASH_FLOW = base.Columns["BUSINESS_CASH_FLOW"];
                this.columnBUSINESS_CASH_FLOW_RSLT = base.Columns["BUSINESS_CASH_FLOW_RSLT"];
                this.columnFIXED_ASSETS = base.Columns["FIXED_ASSETS"];
                this.columnFIXED_ASSETS_RSLT = base.Columns["FIXED_ASSETS_RSLT"];
                this.columnETC_BUSINESS_OUT = base.Columns["ETC_BUSINESS_OUT"];
                this.columnETC_BUSINESS_OUT_RSLT = base.Columns["ETC_BUSINESS_OUT_RSLT"];
                this.columnETC_BUSINESS_IN = base.Columns["ETC_BUSINESS_IN"];
                this.columnETC_BUSINESS_IN_RSLT = base.Columns["ETC_BUSINESS_IN_RSLT"];
                this.columnSALES_PAY_ETC = base.Columns["SALES_PAY_ETC"];
                this.columnSALES_PAY_ETC_RSLT = base.Columns["SALES_PAY_ETC_RSLT"];
                this.columnSPOTMONTH_PAY = base.Columns["SPOTMONTH_PAY"];
                this.columnSPOTMONTH_PAY_RSLT = base.Columns["SPOTMONTH_PAY_RSLT"];
                this.columnBASIS_PAY = base.Columns["BASIS_PAY"];
                this.columnBASIS_PAY_RSLT = base.Columns["BASIS_PAY_RSLT"];
                this.columnTERMEND_PAY = base.Columns["TERMEND_PAY"];
                this.columnTERMEND_PAY_RSLT = base.Columns["TERMEND_PAY_RSLT"];
                this.columnAVAILABLE_PAY = base.Columns["AVAILABLE_PAY"];
                this.columnAVAILABLE_PAY_RSLT = base.Columns["AVAILABLE_PAY_RSLT"];
                this.columnEXT1_CD = base.Columns["EXT1_CD"];
                this.columnEXT2_CD = base.Columns["EXT2_CD"];
                this.columnEXT3_CD = base.Columns["EXT3_CD"];
                this.columnEXT4_CD = base.Columns["EXT4_CD"];
                this.columnEXT5_CD = base.Columns["EXT5_CD"];
                this.columnREMARK = base.Columns["REMARK"];
                this.columnINSRT_USER_ID = base.Columns["INSRT_USER_ID"];
                this.columnINSRT_DT = base.Columns["INSRT_DT"];
                this.columnUPDT_USER_ID = base.Columns["UPDT_USER_ID"];
                this.columnUPDT_DT = base.Columns["UPDT_DT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnYYYY = new global::System.Data.DataColumn("YYYY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYYY);
                this.columnMM = new global::System.Data.DataColumn("MM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM);
                this.columnDD = new global::System.Data.DataColumn("DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDD);
                this.columnSALE_CREDIT = new global::System.Data.DataColumn("SALE_CREDIT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_CREDIT);
                this.columnSALE_CREDIT_RSLT = new global::System.Data.DataColumn("SALE_CREDIT_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALE_CREDIT_RSLT);
                this.columnRETURN_PAY = new global::System.Data.DataColumn("RETURN_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_PAY);
                this.columnRETURN_PAY_RSLT = new global::System.Data.DataColumn("RETURN_PAY_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETURN_PAY_RSLT);
                this.columnSALES_PAY_IN = new global::System.Data.DataColumn("SALES_PAY_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES_PAY_IN);
                this.columnSALES_PAY_IN_RSLT = new global::System.Data.DataColumn("SALES_PAY_IN_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES_PAY_IN_RSLT);
                this.columnTRADE_PAYABLE = new global::System.Data.DataColumn("TRADE_PAYABLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_PAYABLE);
                this.columnTRADE_PAYABLE_RSLT = new global::System.Data.DataColumn("TRADE_PAYABLE_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_PAYABLE_RSLT);
                this.columnNONPAYMENT = new global::System.Data.DataColumn("NONPAYMENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT);
                this.columnNONPAYMENT_RSLT = new global::System.Data.DataColumn("NONPAYMENT_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_RSLT);
                this.columnNONPAYMENT_OS = new global::System.Data.DataColumn("NONPAYMENT_OS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_OS);
                this.columnNONPAYMENT_OS_RSLT = new global::System.Data.DataColumn("NONPAYMENT_OS_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_OS_RSLT);
                this.columnNONPAYMENT_OUTSIDE = new global::System.Data.DataColumn("NONPAYMENT_OUTSIDE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_OUTSIDE);
                this.columnNONPAYMENT_OUTSIDE_RSLT = new global::System.Data.DataColumn("NONPAYMENT_OUTSIDE_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_OUTSIDE_RSLT);
                this.columnNONPAYMENT_ETC1 = new global::System.Data.DataColumn("NONPAYMENT_ETC1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_ETC1);
                this.columnNONPAYMENT_ETC1_RSLT = new global::System.Data.DataColumn("NONPAYMENT_ETC1_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_ETC1_RSLT);
                this.columnNONPAYMENT_ETC2 = new global::System.Data.DataColumn("NONPAYMENT_ETC2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_ETC2);
                this.columnNONPAYMENT_ETC2_RSLT = new global::System.Data.DataColumn("NONPAYMENT_ETC2_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_ETC2_RSLT);
                this.columnNONPAYMENT_MATERIAL = new global::System.Data.DataColumn("NONPAYMENT_MATERIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_MATERIAL);
                this.columnNONPAYMENT_MATERIAL_RSLT = new global::System.Data.DataColumn("NONPAYMENT_MATERIAL_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_MATERIAL_RSLT);
                this.columnNONPAYMENT_ETCPAY = new global::System.Data.DataColumn("NONPAYMENT_ETCPAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_ETCPAY);
                this.columnNONPAYMENT_ETCPAY_RSLT = new global::System.Data.DataColumn("NONPAYMENT_ETCPAY_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNONPAYMENT_ETCPAY_RSLT);
                this.columnPERSONNEL_EXPENSES = new global::System.Data.DataColumn("PERSONNEL_EXPENSES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_EXPENSES);
                this.columnPERSONNEL_EXPENSES_RSLT = new global::System.Data.DataColumn("PERSONNEL_EXPENSES_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERSONNEL_EXPENSES_RSLT);
                this.columnPAID_INTEREST = new global::System.Data.DataColumn("PAID_INTEREST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAID_INTEREST);
                this.columnPAID_INTEREST_RSLT = new global::System.Data.DataColumn("PAID_INTEREST_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAID_INTEREST_RSLT);
                this.columnBUSINESS_CASH_OUT = new global::System.Data.DataColumn("BUSINESS_CASH_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUSINESS_CASH_OUT);
                this.columnBUSINESS_CASH_OUT_RSLT = new global::System.Data.DataColumn("BUSINESS_CASH_OUT_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUSINESS_CASH_OUT_RSLT);
                this.columnBUSINESS_CASH_FLOW = new global::System.Data.DataColumn("BUSINESS_CASH_FLOW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUSINESS_CASH_FLOW);
                this.columnBUSINESS_CASH_FLOW_RSLT = new global::System.Data.DataColumn("BUSINESS_CASH_FLOW_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUSINESS_CASH_FLOW_RSLT);
                this.columnFIXED_ASSETS = new global::System.Data.DataColumn("FIXED_ASSETS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXED_ASSETS);
                this.columnFIXED_ASSETS_RSLT = new global::System.Data.DataColumn("FIXED_ASSETS_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXED_ASSETS_RSLT);
                this.columnETC_BUSINESS_OUT = new global::System.Data.DataColumn("ETC_BUSINESS_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_BUSINESS_OUT);
                this.columnETC_BUSINESS_OUT_RSLT = new global::System.Data.DataColumn("ETC_BUSINESS_OUT_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_BUSINESS_OUT_RSLT);
                this.columnETC_BUSINESS_IN = new global::System.Data.DataColumn("ETC_BUSINESS_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_BUSINESS_IN);
                this.columnETC_BUSINESS_IN_RSLT = new global::System.Data.DataColumn("ETC_BUSINESS_IN_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_BUSINESS_IN_RSLT);
                this.columnSALES_PAY_ETC = new global::System.Data.DataColumn("SALES_PAY_ETC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES_PAY_ETC);
                this.columnSALES_PAY_ETC_RSLT = new global::System.Data.DataColumn("SALES_PAY_ETC_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALES_PAY_ETC_RSLT);
                this.columnSPOTMONTH_PAY = new global::System.Data.DataColumn("SPOTMONTH_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPOTMONTH_PAY);
                this.columnSPOTMONTH_PAY_RSLT = new global::System.Data.DataColumn("SPOTMONTH_PAY_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPOTMONTH_PAY_RSLT);
                this.columnBASIS_PAY = new global::System.Data.DataColumn("BASIS_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASIS_PAY);
                this.columnBASIS_PAY_RSLT = new global::System.Data.DataColumn("BASIS_PAY_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASIS_PAY_RSLT);
                this.columnTERMEND_PAY = new global::System.Data.DataColumn("TERMEND_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMEND_PAY);
                this.columnTERMEND_PAY_RSLT = new global::System.Data.DataColumn("TERMEND_PAY_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMEND_PAY_RSLT);
                this.columnAVAILABLE_PAY = new global::System.Data.DataColumn("AVAILABLE_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVAILABLE_PAY);
                this.columnAVAILABLE_PAY_RSLT = new global::System.Data.DataColumn("AVAILABLE_PAY_RSLT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVAILABLE_PAY_RSLT);
                this.columnEXT1_CD = new global::System.Data.DataColumn("EXT1_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT1_CD);
                this.columnEXT2_CD = new global::System.Data.DataColumn("EXT2_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT2_CD);
                this.columnEXT3_CD = new global::System.Data.DataColumn("EXT3_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT3_CD);
                this.columnEXT4_CD = new global::System.Data.DataColumn("EXT4_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT4_CD);
                this.columnEXT5_CD = new global::System.Data.DataColumn("EXT5_CD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT5_CD);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnINSRT_USER_ID = new global::System.Data.DataColumn("INSRT_USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSRT_USER_ID);
                this.columnINSRT_DT = new global::System.Data.DataColumn("INSRT_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSRT_DT);
                this.columnUPDT_USER_ID = new global::System.Data.DataColumn("UPDT_USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDT_USER_ID);
                this.columnUPDT_DT = new global::System.Data.DataColumn("UPDT_DT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDT_DT);
                this.columnYYYY.AllowDBNull = false;
                this.columnYYYY.MaxLength = 4;
                this.columnMM.AllowDBNull = false;
                this.columnMM.MaxLength = 2;
                this.columnDD.AllowDBNull = false;
                this.columnDD.MaxLength = 2;
                this.columnREMARK.MaxLength = 20;
                this.columnINSRT_USER_ID.AllowDBNull = false;
                this.columnINSRT_USER_ID.MaxLength = 13;
                this.columnINSRT_DT.AllowDBNull = false;
                this.columnUPDT_USER_ID.AllowDBNull = false;
                this.columnUPDT_USER_ID.MaxLength = 13;
                this.columnUPDT_DT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMT_PLANRow NewA_DAILY_AMT_PLANRow() {
                return ((A_DAILY_AMT_PLANRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new A_DAILY_AMT_PLANRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(A_DAILY_AMT_PLANRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.A_DAILY_AMT_PLANRowChanged != null)) {
                    this.A_DAILY_AMT_PLANRowChanged(this, new A_DAILY_AMT_PLANRowChangeEvent(((A_DAILY_AMT_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.A_DAILY_AMT_PLANRowChanging != null)) {
                    this.A_DAILY_AMT_PLANRowChanging(this, new A_DAILY_AMT_PLANRowChangeEvent(((A_DAILY_AMT_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.A_DAILY_AMT_PLANRowDeleted != null)) {
                    this.A_DAILY_AMT_PLANRowDeleted(this, new A_DAILY_AMT_PLANRowChangeEvent(((A_DAILY_AMT_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.A_DAILY_AMT_PLANRowDeleting != null)) {
                    this.A_DAILY_AMT_PLANRowDeleting(this, new A_DAILY_AMT_PLANRowChangeEvent(((A_DAILY_AMT_PLANRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveA_DAILY_AMT_PLANRow(A_DAILY_AMT_PLANRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Display_AMT ds = new Display_AMT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "A_DAILY_AMT_PLANDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.TypedTableBase<DataTable1Row> {
            
            private global::System.Data.DataColumn columnYYYY;
            
            private global::System.Data.DataColumn columnMM;
            
            private global::System.Data.DataColumn columnLENDER_COLLET;
            
            private global::System.Data.DataColumn columnSURTAX_REFUND;
            
            private global::System.Data.DataColumn columnTARIFF_REFUND;
            
            private global::System.Data.DataColumn columnLEASE_INCOME;
            
            private global::System.Data.DataColumn columnIMPORT_INCOME;
            
            private global::System.Data.DataColumn columnUSELESS_PAY;
            
            private global::System.Data.DataColumn columnETC_1;
            
            private global::System.Data.DataColumn columnETC_1_BUSINESS_INCOME;
            
            private global::System.Data.DataColumn columnM_MATERIAL;
            
            private global::System.Data.DataColumn columnM_PAY;
            
            private global::System.Data.DataColumn columnM_RETIRE;
            
            private global::System.Data.DataColumn columnM_FOUNTAIN;
            
            private global::System.Data.DataColumn columnM_WELRARE;
            
            private global::System.Data.DataColumn columnPAYROLL_COSTS_EXPENSE;
            
            private global::System.Data.DataColumn columnEXPENSE;
            
            private global::System.Data.DataColumn columnOS_PAY;
            
            private global::System.Data.DataColumn columnOUTSIDE_PAY;
            
            private global::System.Data.DataColumn columnEXPENSE_ETC;
            
            private global::System.Data.DataColumn columnINSEREST;
            
            private global::System.Data.DataColumn columnDEPOSIT_LEASE;
            
            private global::System.Data.DataColumn columnETC_2;
            
            private global::System.Data.DataColumn columnETC_2_BUSINESS_EXPENSE;
            
            private global::System.Data.DataColumn columnETC_2_BUSINESS_INFLOW;
            
            private global::System.Data.DataColumn columnFIXED_ASSET_OUT;
            
            private global::System.Data.DataColumn columnLOAN_INCOME;
            
            private global::System.Data.DataColumn columnFINANCIAL_IN;
            
            private global::System.Data.DataColumn columnVALUABLE_PAPAERS_INCOME;
            
            private global::System.Data.DataColumn columnINVERST;
            
            private global::System.Data.DataColumn columnINVEST_LAND;
            
            private global::System.Data.DataColumn columnINVEST_MACHINE;
            
            private global::System.Data.DataColumn columnINVEST_CAR;
            
            private global::System.Data.DataColumn columnFIXED_ASSET_IN;
            
            private global::System.Data.DataColumn columnLOAN_EXPENSE;
            
            private global::System.Data.DataColumn columnFINANCIAL_OUT;
            
            private global::System.Data.DataColumn columnINVERST_OUT;
            
            private global::System.Data.DataColumn columnINVEST_OUT_CASHOUT;
            
            private global::System.Data.DataColumn columnINVEST_OUT_CASH;
            
            private global::System.Data.DataColumn columnBEWBORROW;
            
            private global::System.Data.DataColumn columnUSANCE_CD1;
            
            private global::System.Data.DataColumn columnINCRES_CAPITAL;
            
            private global::System.Data.DataColumn columnINCRES_CAPITAL_CASH;
            
            private global::System.Data.DataColumn columnLOAN_CD1;
            
            private global::System.Data.DataColumn columnUSANCE_CD2;
            
            private global::System.Data.DataColumn columnDIVIDEND;
            
            private global::System.Data.DataColumn columnDIVIDEND_CASHOUT;
            
            private global::System.Data.DataColumn columnDIVIDEND_CASH;
            
            private global::System.Data.DataColumn columnDIVIDEND_LAST_AMT;
            
            private global::System.Data.DataColumn columnTOMONTH_PAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YYYYColumn {
                get {
                    return this.columnYYYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MMColumn {
                get {
                    return this.columnMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LENDER_COLLETColumn {
                get {
                    return this.columnLENDER_COLLET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SURTAX_REFUNDColumn {
                get {
                    return this.columnSURTAX_REFUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TARIFF_REFUNDColumn {
                get {
                    return this.columnTARIFF_REFUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LEASE_INCOMEColumn {
                get {
                    return this.columnLEASE_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMPORT_INCOMEColumn {
                get {
                    return this.columnIMPORT_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USELESS_PAYColumn {
                get {
                    return this.columnUSELESS_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_1Column {
                get {
                    return this.columnETC_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_1_BUSINESS_INCOMEColumn {
                get {
                    return this.columnETC_1_BUSINESS_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_MATERIALColumn {
                get {
                    return this.columnM_MATERIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_PAYColumn {
                get {
                    return this.columnM_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_RETIREColumn {
                get {
                    return this.columnM_RETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_FOUNTAINColumn {
                get {
                    return this.columnM_FOUNTAIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn M_WELRAREColumn {
                get {
                    return this.columnM_WELRARE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PAYROLL_COSTS_EXPENSEColumn {
                get {
                    return this.columnPAYROLL_COSTS_EXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSEColumn {
                get {
                    return this.columnEXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OS_PAYColumn {
                get {
                    return this.columnOS_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUTSIDE_PAYColumn {
                get {
                    return this.columnOUTSIDE_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EXPENSE_ETCColumn {
                get {
                    return this.columnEXPENSE_ETC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSERESTColumn {
                get {
                    return this.columnINSEREST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPOSIT_LEASEColumn {
                get {
                    return this.columnDEPOSIT_LEASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_2Column {
                get {
                    return this.columnETC_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_2_BUSINESS_EXPENSEColumn {
                get {
                    return this.columnETC_2_BUSINESS_EXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ETC_2_BUSINESS_INFLOWColumn {
                get {
                    return this.columnETC_2_BUSINESS_INFLOW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXED_ASSET_OUTColumn {
                get {
                    return this.columnFIXED_ASSET_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOAN_INCOMEColumn {
                get {
                    return this.columnLOAN_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINANCIAL_INColumn {
                get {
                    return this.columnFINANCIAL_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VALUABLE_PAPAERS_INCOMEColumn {
                get {
                    return this.columnVALUABLE_PAPAERS_INCOME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVERSTColumn {
                get {
                    return this.columnINVERST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_LANDColumn {
                get {
                    return this.columnINVEST_LAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_MACHINEColumn {
                get {
                    return this.columnINVEST_MACHINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_CARColumn {
                get {
                    return this.columnINVEST_CAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXED_ASSET_INColumn {
                get {
                    return this.columnFIXED_ASSET_IN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOAN_EXPENSEColumn {
                get {
                    return this.columnLOAN_EXPENSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FINANCIAL_OUTColumn {
                get {
                    return this.columnFINANCIAL_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVERST_OUTColumn {
                get {
                    return this.columnINVERST_OUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_OUT_CASHOUTColumn {
                get {
                    return this.columnINVEST_OUT_CASHOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INVEST_OUT_CASHColumn {
                get {
                    return this.columnINVEST_OUT_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BEWBORROWColumn {
                get {
                    return this.columnBEWBORROW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USANCE_CD1Column {
                get {
                    return this.columnUSANCE_CD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INCRES_CAPITALColumn {
                get {
                    return this.columnINCRES_CAPITAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INCRES_CAPITAL_CASHColumn {
                get {
                    return this.columnINCRES_CAPITAL_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOAN_CD1Column {
                get {
                    return this.columnLOAN_CD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USANCE_CD2Column {
                get {
                    return this.columnUSANCE_CD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDENDColumn {
                get {
                    return this.columnDIVIDEND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_CASHOUTColumn {
                get {
                    return this.columnDIVIDEND_CASHOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_CASHColumn {
                get {
                    return this.columnDIVIDEND_CASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIVIDEND_LAST_AMTColumn {
                get {
                    return this.columnDIVIDEND_LAST_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOMONTH_PAYColumn {
                get {
                    return this.columnTOMONTH_PAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(
                        string YYYY, 
                        string MM, 
                        decimal LENDER_COLLET, 
                        decimal SURTAX_REFUND, 
                        decimal TARIFF_REFUND, 
                        decimal LEASE_INCOME, 
                        decimal IMPORT_INCOME, 
                        decimal USELESS_PAY, 
                        decimal ETC_1, 
                        decimal ETC_1_BUSINESS_INCOME, 
                        decimal M_MATERIAL, 
                        decimal M_PAY, 
                        decimal M_RETIRE, 
                        decimal M_FOUNTAIN, 
                        decimal M_WELRARE, 
                        decimal PAYROLL_COSTS_EXPENSE, 
                        decimal EXPENSE, 
                        decimal OS_PAY, 
                        decimal OUTSIDE_PAY, 
                        decimal EXPENSE_ETC, 
                        decimal INSEREST, 
                        decimal DEPOSIT_LEASE, 
                        decimal ETC_2, 
                        decimal ETC_2_BUSINESS_EXPENSE, 
                        decimal ETC_2_BUSINESS_INFLOW, 
                        decimal FIXED_ASSET_OUT, 
                        decimal LOAN_INCOME, 
                        decimal FINANCIAL_IN, 
                        decimal VALUABLE_PAPAERS_INCOME, 
                        decimal INVERST, 
                        decimal INVEST_LAND, 
                        decimal INVEST_MACHINE, 
                        decimal INVEST_CAR, 
                        decimal FIXED_ASSET_IN, 
                        decimal LOAN_EXPENSE, 
                        decimal FINANCIAL_OUT, 
                        decimal INVERST_OUT, 
                        decimal INVEST_OUT_CASHOUT, 
                        decimal INVEST_OUT_CASH, 
                        decimal BEWBORROW, 
                        decimal USANCE_CD1, 
                        decimal INCRES_CAPITAL, 
                        decimal INCRES_CAPITAL_CASH, 
                        decimal LOAN_CD1, 
                        decimal USANCE_CD2, 
                        decimal DIVIDEND, 
                        decimal DIVIDEND_CASHOUT, 
                        decimal DIVIDEND_CASH, 
                        decimal DIVIDEND_LAST_AMT, 
                        decimal TOMONTH_PAY) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YYYY,
                        MM,
                        LENDER_COLLET,
                        SURTAX_REFUND,
                        TARIFF_REFUND,
                        LEASE_INCOME,
                        IMPORT_INCOME,
                        USELESS_PAY,
                        ETC_1,
                        ETC_1_BUSINESS_INCOME,
                        M_MATERIAL,
                        M_PAY,
                        M_RETIRE,
                        M_FOUNTAIN,
                        M_WELRARE,
                        PAYROLL_COSTS_EXPENSE,
                        EXPENSE,
                        OS_PAY,
                        OUTSIDE_PAY,
                        EXPENSE_ETC,
                        INSEREST,
                        DEPOSIT_LEASE,
                        ETC_2,
                        ETC_2_BUSINESS_EXPENSE,
                        ETC_2_BUSINESS_INFLOW,
                        FIXED_ASSET_OUT,
                        LOAN_INCOME,
                        FINANCIAL_IN,
                        VALUABLE_PAPAERS_INCOME,
                        INVERST,
                        INVEST_LAND,
                        INVEST_MACHINE,
                        INVEST_CAR,
                        FIXED_ASSET_IN,
                        LOAN_EXPENSE,
                        FINANCIAL_OUT,
                        INVERST_OUT,
                        INVEST_OUT_CASHOUT,
                        INVEST_OUT_CASH,
                        BEWBORROW,
                        USANCE_CD1,
                        INCRES_CAPITAL,
                        INCRES_CAPITAL_CASH,
                        LOAN_CD1,
                        USANCE_CD2,
                        DIVIDEND,
                        DIVIDEND_CASHOUT,
                        DIVIDEND_CASH,
                        DIVIDEND_LAST_AMT,
                        TOMONTH_PAY};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnYYYY = base.Columns["YYYY"];
                this.columnMM = base.Columns["MM"];
                this.columnLENDER_COLLET = base.Columns["LENDER_COLLET"];
                this.columnSURTAX_REFUND = base.Columns["SURTAX_REFUND"];
                this.columnTARIFF_REFUND = base.Columns["TARIFF_REFUND"];
                this.columnLEASE_INCOME = base.Columns["LEASE_INCOME"];
                this.columnIMPORT_INCOME = base.Columns["IMPORT_INCOME"];
                this.columnUSELESS_PAY = base.Columns["USELESS_PAY"];
                this.columnETC_1 = base.Columns["ETC_1"];
                this.columnETC_1_BUSINESS_INCOME = base.Columns["ETC_1_BUSINESS_INCOME"];
                this.columnM_MATERIAL = base.Columns["M_MATERIAL"];
                this.columnM_PAY = base.Columns["M_PAY"];
                this.columnM_RETIRE = base.Columns["M_RETIRE"];
                this.columnM_FOUNTAIN = base.Columns["M_FOUNTAIN"];
                this.columnM_WELRARE = base.Columns["M_WELRARE"];
                this.columnPAYROLL_COSTS_EXPENSE = base.Columns["PAYROLL_COSTS_EXPENSE"];
                this.columnEXPENSE = base.Columns["EXPENSE"];
                this.columnOS_PAY = base.Columns["OS_PAY"];
                this.columnOUTSIDE_PAY = base.Columns["OUTSIDE_PAY"];
                this.columnEXPENSE_ETC = base.Columns["EXPENSE_ETC"];
                this.columnINSEREST = base.Columns["INSEREST"];
                this.columnDEPOSIT_LEASE = base.Columns["DEPOSIT_LEASE"];
                this.columnETC_2 = base.Columns["ETC_2"];
                this.columnETC_2_BUSINESS_EXPENSE = base.Columns["ETC_2_BUSINESS_EXPENSE"];
                this.columnETC_2_BUSINESS_INFLOW = base.Columns["ETC_2_BUSINESS_INFLOW"];
                this.columnFIXED_ASSET_OUT = base.Columns["FIXED_ASSET_OUT"];
                this.columnLOAN_INCOME = base.Columns["LOAN_INCOME"];
                this.columnFINANCIAL_IN = base.Columns["FINANCIAL_IN"];
                this.columnVALUABLE_PAPAERS_INCOME = base.Columns["VALUABLE_PAPAERS_INCOME"];
                this.columnINVERST = base.Columns["INVERST"];
                this.columnINVEST_LAND = base.Columns["INVEST_LAND"];
                this.columnINVEST_MACHINE = base.Columns["INVEST_MACHINE"];
                this.columnINVEST_CAR = base.Columns["INVEST_CAR"];
                this.columnFIXED_ASSET_IN = base.Columns["FIXED_ASSET_IN"];
                this.columnLOAN_EXPENSE = base.Columns["LOAN_EXPENSE"];
                this.columnFINANCIAL_OUT = base.Columns["FINANCIAL_OUT"];
                this.columnINVERST_OUT = base.Columns["INVERST_OUT"];
                this.columnINVEST_OUT_CASHOUT = base.Columns["INVEST_OUT_CASHOUT"];
                this.columnINVEST_OUT_CASH = base.Columns["INVEST_OUT_CASH"];
                this.columnBEWBORROW = base.Columns["BEWBORROW"];
                this.columnUSANCE_CD1 = base.Columns["USANCE_CD1"];
                this.columnINCRES_CAPITAL = base.Columns["INCRES_CAPITAL"];
                this.columnINCRES_CAPITAL_CASH = base.Columns["INCRES_CAPITAL_CASH"];
                this.columnLOAN_CD1 = base.Columns["LOAN_CD1"];
                this.columnUSANCE_CD2 = base.Columns["USANCE_CD2"];
                this.columnDIVIDEND = base.Columns["DIVIDEND"];
                this.columnDIVIDEND_CASHOUT = base.Columns["DIVIDEND_CASHOUT"];
                this.columnDIVIDEND_CASH = base.Columns["DIVIDEND_CASH"];
                this.columnDIVIDEND_LAST_AMT = base.Columns["DIVIDEND_LAST_AMT"];
                this.columnTOMONTH_PAY = base.Columns["TOMONTH_PAY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnYYYY = new global::System.Data.DataColumn("YYYY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYYY);
                this.columnMM = new global::System.Data.DataColumn("MM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMM);
                this.columnLENDER_COLLET = new global::System.Data.DataColumn("LENDER_COLLET", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLENDER_COLLET);
                this.columnSURTAX_REFUND = new global::System.Data.DataColumn("SURTAX_REFUND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSURTAX_REFUND);
                this.columnTARIFF_REFUND = new global::System.Data.DataColumn("TARIFF_REFUND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTARIFF_REFUND);
                this.columnLEASE_INCOME = new global::System.Data.DataColumn("LEASE_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEASE_INCOME);
                this.columnIMPORT_INCOME = new global::System.Data.DataColumn("IMPORT_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPORT_INCOME);
                this.columnUSELESS_PAY = new global::System.Data.DataColumn("USELESS_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSELESS_PAY);
                this.columnETC_1 = new global::System.Data.DataColumn("ETC_1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_1);
                this.columnETC_1_BUSINESS_INCOME = new global::System.Data.DataColumn("ETC_1_BUSINESS_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_1_BUSINESS_INCOME);
                this.columnM_MATERIAL = new global::System.Data.DataColumn("M_MATERIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_MATERIAL);
                this.columnM_PAY = new global::System.Data.DataColumn("M_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_PAY);
                this.columnM_RETIRE = new global::System.Data.DataColumn("M_RETIRE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_RETIRE);
                this.columnM_FOUNTAIN = new global::System.Data.DataColumn("M_FOUNTAIN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_FOUNTAIN);
                this.columnM_WELRARE = new global::System.Data.DataColumn("M_WELRARE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_WELRARE);
                this.columnPAYROLL_COSTS_EXPENSE = new global::System.Data.DataColumn("PAYROLL_COSTS_EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAYROLL_COSTS_EXPENSE);
                this.columnEXPENSE = new global::System.Data.DataColumn("EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE);
                this.columnOS_PAY = new global::System.Data.DataColumn("OS_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOS_PAY);
                this.columnOUTSIDE_PAY = new global::System.Data.DataColumn("OUTSIDE_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTSIDE_PAY);
                this.columnEXPENSE_ETC = new global::System.Data.DataColumn("EXPENSE_ETC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPENSE_ETC);
                this.columnINSEREST = new global::System.Data.DataColumn("INSEREST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSEREST);
                this.columnDEPOSIT_LEASE = new global::System.Data.DataColumn("DEPOSIT_LEASE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPOSIT_LEASE);
                this.columnETC_2 = new global::System.Data.DataColumn("ETC_2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_2);
                this.columnETC_2_BUSINESS_EXPENSE = new global::System.Data.DataColumn("ETC_2_BUSINESS_EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_2_BUSINESS_EXPENSE);
                this.columnETC_2_BUSINESS_INFLOW = new global::System.Data.DataColumn("ETC_2_BUSINESS_INFLOW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETC_2_BUSINESS_INFLOW);
                this.columnFIXED_ASSET_OUT = new global::System.Data.DataColumn("FIXED_ASSET_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXED_ASSET_OUT);
                this.columnLOAN_INCOME = new global::System.Data.DataColumn("LOAN_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAN_INCOME);
                this.columnFINANCIAL_IN = new global::System.Data.DataColumn("FINANCIAL_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINANCIAL_IN);
                this.columnVALUABLE_PAPAERS_INCOME = new global::System.Data.DataColumn("VALUABLE_PAPAERS_INCOME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALUABLE_PAPAERS_INCOME);
                this.columnINVERST = new global::System.Data.DataColumn("INVERST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVERST);
                this.columnINVEST_LAND = new global::System.Data.DataColumn("INVEST_LAND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_LAND);
                this.columnINVEST_MACHINE = new global::System.Data.DataColumn("INVEST_MACHINE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_MACHINE);
                this.columnINVEST_CAR = new global::System.Data.DataColumn("INVEST_CAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_CAR);
                this.columnFIXED_ASSET_IN = new global::System.Data.DataColumn("FIXED_ASSET_IN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXED_ASSET_IN);
                this.columnLOAN_EXPENSE = new global::System.Data.DataColumn("LOAN_EXPENSE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAN_EXPENSE);
                this.columnFINANCIAL_OUT = new global::System.Data.DataColumn("FINANCIAL_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINANCIAL_OUT);
                this.columnINVERST_OUT = new global::System.Data.DataColumn("INVERST_OUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVERST_OUT);
                this.columnINVEST_OUT_CASHOUT = new global::System.Data.DataColumn("INVEST_OUT_CASHOUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_OUT_CASHOUT);
                this.columnINVEST_OUT_CASH = new global::System.Data.DataColumn("INVEST_OUT_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVEST_OUT_CASH);
                this.columnBEWBORROW = new global::System.Data.DataColumn("BEWBORROW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEWBORROW);
                this.columnUSANCE_CD1 = new global::System.Data.DataColumn("USANCE_CD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSANCE_CD1);
                this.columnINCRES_CAPITAL = new global::System.Data.DataColumn("INCRES_CAPITAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCRES_CAPITAL);
                this.columnINCRES_CAPITAL_CASH = new global::System.Data.DataColumn("INCRES_CAPITAL_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCRES_CAPITAL_CASH);
                this.columnLOAN_CD1 = new global::System.Data.DataColumn("LOAN_CD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOAN_CD1);
                this.columnUSANCE_CD2 = new global::System.Data.DataColumn("USANCE_CD2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSANCE_CD2);
                this.columnDIVIDEND = new global::System.Data.DataColumn("DIVIDEND", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND);
                this.columnDIVIDEND_CASHOUT = new global::System.Data.DataColumn("DIVIDEND_CASHOUT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_CASHOUT);
                this.columnDIVIDEND_CASH = new global::System.Data.DataColumn("DIVIDEND_CASH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_CASH);
                this.columnDIVIDEND_LAST_AMT = new global::System.Data.DataColumn("DIVIDEND_LAST_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIVIDEND_LAST_AMT);
                this.columnTOMONTH_PAY = new global::System.Data.DataColumn("TOMONTH_PAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOMONTH_PAY);
                this.columnYYYY.AllowDBNull = false;
                this.columnYYYY.MaxLength = 4;
                this.columnMM.AllowDBNull = false;
                this.columnMM.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Display_AMT ds = new Display_AMT();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class A_DAILY_AMTRow : global::System.Data.DataRow {
            
            private A_DAILY_AMTDataTable tableA_DAILY_AMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal A_DAILY_AMTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableA_DAILY_AMT = ((A_DAILY_AMTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YYYY {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT.YYYYColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.YYYYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MM {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT.MMColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.MMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DD {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT.DDColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LENDER_COLLET {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.LENDER_COLLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'LENDER_COLLET\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.LENDER_COLLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SURTAX_REFUND {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.SURTAX_REFUNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'SURTAX_REFUND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.SURTAX_REFUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TARIFF_REFUND {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.TARIFF_REFUNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'TARIFF_REFUND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.TARIFF_REFUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LEASE_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.LEASE_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'LEASE_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.LEASE_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IMPORT_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.IMPORT_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'IMPORT_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.IMPORT_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal USELESS_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.USELESS_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'USELESS_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.USELESS_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.ETC_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'ETC_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.ETC_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_1_BUSINESS_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.ETC_1_BUSINESS_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'ETC_1_BUSINESS_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.ETC_1_BUSINESS_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_MATERIAL {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.M_MATERIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'M_MATERIAL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.M_MATERIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.M_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'M_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.M_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_RETIRE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.M_RETIREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'M_RETIRE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.M_RETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_FOUNTAIN {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.M_FOUNTAINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'M_FOUNTAIN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.M_FOUNTAINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_WELRARE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.M_WELRAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'M_WELRARE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.M_WELRAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PAYROLL_COSTS_EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.PAYROLL_COSTS_EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'PAYROLL_COSTS_EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.PAYROLL_COSTS_EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OS_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.OS_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'OS_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.OS_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OUTSIDE_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.OUTSIDE_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'OUTSIDE_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.OUTSIDE_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXPENSE_ETC {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXPENSE_ETCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXPENSE_ETC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXPENSE_ETCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INSEREST {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INSERESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INSEREST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INSERESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DEPOSIT_LEASE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DEPOSIT_LEASEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DEPOSIT_LEASE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DEPOSIT_LEASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.ETC_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'ETC_2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.ETC_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_2_BUSINESS_EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.ETC_2_BUSINESS_EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'ETC_2_BUSINESS_EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.ETC_2_BUSINESS_EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_2_BUSINESS_INFLOW {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.ETC_2_BUSINESS_INFLOWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'ETC_2_BUSINESS_INFLOW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.ETC_2_BUSINESS_INFLOWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FIXED_ASSET_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.FIXED_ASSET_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'FIXED_ASSET_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.FIXED_ASSET_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOAN_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.LOAN_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'LOAN_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.LOAN_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FINANCIAL_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.FINANCIAL_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'FINANCIAL_IN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.FINANCIAL_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VALUABLE_PAPAERS_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.VALUABLE_PAPAERS_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'VALUABLE_PAPAERS_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.VALUABLE_PAPAERS_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVERST {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVERSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVERST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVERSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_LAND {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVEST_LANDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVEST_LAND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVEST_LANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_MACHINE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVEST_MACHINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVEST_MACHINE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVEST_MACHINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_CAR {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVEST_CARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVEST_CAR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVEST_CARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FIXED_ASSET_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.FIXED_ASSET_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'FIXED_ASSET_IN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.FIXED_ASSET_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOAN_EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.LOAN_EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'LOAN_EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.LOAN_EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FINANCIAL_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.FINANCIAL_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'FINANCIAL_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.FINANCIAL_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVERST_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVERST_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVERST_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVERST_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_OUT_CASHOUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVEST_OUT_CASHOUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVEST_OUT_CASHOUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVEST_OUT_CASHOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_OUT_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INVEST_OUT_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INVEST_OUT_CASH\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INVEST_OUT_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BEWBORROW {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.BEWBORROWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'BEWBORROW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.BEWBORROWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal USANCE_CD1 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.USANCE_CD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'USANCE_CD1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.USANCE_CD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INCRES_CAPITAL {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INCRES_CAPITALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INCRES_CAPITAL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INCRES_CAPITALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INCRES_CAPITAL_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.INCRES_CAPITAL_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'INCRES_CAPITAL_CASH\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.INCRES_CAPITAL_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOAN_CD1 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.LOAN_CD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'LOAN_CD1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.LOAN_CD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal USANCE_CD2 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.USANCE_CD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'USANCE_CD2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.USANCE_CD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DIVIDENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DIVIDEND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DIVIDENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_CASHOUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DIVIDEND_CASHOUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DIVIDEND_CASHOUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DIVIDEND_CASHOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DIVIDEND_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DIVIDEND_CASH\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DIVIDEND_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_LAST_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DIVIDEND_LAST_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DIVIDEND_LAST_AMT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DIVIDEND_LAST_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DIVIDEND_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DIVIDEND_AMT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DIVIDEND_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_OVER_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.DIVIDEND_OVER_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'DIVIDEND_OVER_AMT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.DIVIDEND_OVER_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT1_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXT1_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXT1_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXT1_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT2_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXT2_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXT2_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXT2_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT3_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXT3_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXT3_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXT3_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT4_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXT4_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXT4_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXT4_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT5_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT.EXT5_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'EXT5_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.EXT5_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableA_DAILY_AMT.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT\' 테이블의 \'REMARK\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSRT_USER_ID {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT.INSRT_USER_IDColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.INSRT_USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime INSRT_DT {
                get {
                    return ((global::System.DateTime)(this[this.tableA_DAILY_AMT.INSRT_DTColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.INSRT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UPDT_USER_ID {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT.UPDT_USER_IDColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.UPDT_USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UPDT_DT {
                get {
                    return ((global::System.DateTime)(this[this.tableA_DAILY_AMT.UPDT_DTColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT.UPDT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLENDER_COLLETNull() {
                return this.IsNull(this.tableA_DAILY_AMT.LENDER_COLLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLENDER_COLLETNull() {
                this[this.tableA_DAILY_AMT.LENDER_COLLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSURTAX_REFUNDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.SURTAX_REFUNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSURTAX_REFUNDNull() {
                this[this.tableA_DAILY_AMT.SURTAX_REFUNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTARIFF_REFUNDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.TARIFF_REFUNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTARIFF_REFUNDNull() {
                this[this.tableA_DAILY_AMT.TARIFF_REFUNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLEASE_INCOMENull() {
                return this.IsNull(this.tableA_DAILY_AMT.LEASE_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLEASE_INCOMENull() {
                this[this.tableA_DAILY_AMT.LEASE_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMPORT_INCOMENull() {
                return this.IsNull(this.tableA_DAILY_AMT.IMPORT_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMPORT_INCOMENull() {
                this[this.tableA_DAILY_AMT.IMPORT_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSELESS_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT.USELESS_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSELESS_PAYNull() {
                this[this.tableA_DAILY_AMT.USELESS_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_1Null() {
                return this.IsNull(this.tableA_DAILY_AMT.ETC_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_1Null() {
                this[this.tableA_DAILY_AMT.ETC_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_1_BUSINESS_INCOMENull() {
                return this.IsNull(this.tableA_DAILY_AMT.ETC_1_BUSINESS_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_1_BUSINESS_INCOMENull() {
                this[this.tableA_DAILY_AMT.ETC_1_BUSINESS_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_MATERIALNull() {
                return this.IsNull(this.tableA_DAILY_AMT.M_MATERIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_MATERIALNull() {
                this[this.tableA_DAILY_AMT.M_MATERIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT.M_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_PAYNull() {
                this[this.tableA_DAILY_AMT.M_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_RETIRENull() {
                return this.IsNull(this.tableA_DAILY_AMT.M_RETIREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_RETIRENull() {
                this[this.tableA_DAILY_AMT.M_RETIREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_FOUNTAINNull() {
                return this.IsNull(this.tableA_DAILY_AMT.M_FOUNTAINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_FOUNTAINNull() {
                this[this.tableA_DAILY_AMT.M_FOUNTAINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_WELRARENull() {
                return this.IsNull(this.tableA_DAILY_AMT.M_WELRAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_WELRARENull() {
                this[this.tableA_DAILY_AMT.M_WELRAREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAYROLL_COSTS_EXPENSENull() {
                return this.IsNull(this.tableA_DAILY_AMT.PAYROLL_COSTS_EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAYROLL_COSTS_EXPENSENull() {
                this[this.tableA_DAILY_AMT.PAYROLL_COSTS_EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSENull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSENull() {
                this[this.tableA_DAILY_AMT.EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOS_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT.OS_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOS_PAYNull() {
                this[this.tableA_DAILY_AMT.OS_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOUTSIDE_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT.OUTSIDE_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOUTSIDE_PAYNull() {
                this[this.tableA_DAILY_AMT.OUTSIDE_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_ETCNull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXPENSE_ETCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_ETCNull() {
                this[this.tableA_DAILY_AMT.EXPENSE_ETCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSERESTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INSERESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSERESTNull() {
                this[this.tableA_DAILY_AMT.INSERESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEPOSIT_LEASENull() {
                return this.IsNull(this.tableA_DAILY_AMT.DEPOSIT_LEASEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEPOSIT_LEASENull() {
                this[this.tableA_DAILY_AMT.DEPOSIT_LEASEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_2Null() {
                return this.IsNull(this.tableA_DAILY_AMT.ETC_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_2Null() {
                this[this.tableA_DAILY_AMT.ETC_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_2_BUSINESS_EXPENSENull() {
                return this.IsNull(this.tableA_DAILY_AMT.ETC_2_BUSINESS_EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_2_BUSINESS_EXPENSENull() {
                this[this.tableA_DAILY_AMT.ETC_2_BUSINESS_EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_2_BUSINESS_INFLOWNull() {
                return this.IsNull(this.tableA_DAILY_AMT.ETC_2_BUSINESS_INFLOWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_2_BUSINESS_INFLOWNull() {
                this[this.tableA_DAILY_AMT.ETC_2_BUSINESS_INFLOWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIXED_ASSET_OUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.FIXED_ASSET_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIXED_ASSET_OUTNull() {
                this[this.tableA_DAILY_AMT.FIXED_ASSET_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOAN_INCOMENull() {
                return this.IsNull(this.tableA_DAILY_AMT.LOAN_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOAN_INCOMENull() {
                this[this.tableA_DAILY_AMT.LOAN_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINANCIAL_INNull() {
                return this.IsNull(this.tableA_DAILY_AMT.FINANCIAL_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINANCIAL_INNull() {
                this[this.tableA_DAILY_AMT.FINANCIAL_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALUABLE_PAPAERS_INCOMENull() {
                return this.IsNull(this.tableA_DAILY_AMT.VALUABLE_PAPAERS_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALUABLE_PAPAERS_INCOMENull() {
                this[this.tableA_DAILY_AMT.VALUABLE_PAPAERS_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVERSTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVERSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVERSTNull() {
                this[this.tableA_DAILY_AMT.INVERSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_LANDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVEST_LANDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_LANDNull() {
                this[this.tableA_DAILY_AMT.INVEST_LANDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_MACHINENull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVEST_MACHINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_MACHINENull() {
                this[this.tableA_DAILY_AMT.INVEST_MACHINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_CARNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVEST_CARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_CARNull() {
                this[this.tableA_DAILY_AMT.INVEST_CARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIXED_ASSET_INNull() {
                return this.IsNull(this.tableA_DAILY_AMT.FIXED_ASSET_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIXED_ASSET_INNull() {
                this[this.tableA_DAILY_AMT.FIXED_ASSET_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOAN_EXPENSENull() {
                return this.IsNull(this.tableA_DAILY_AMT.LOAN_EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOAN_EXPENSENull() {
                this[this.tableA_DAILY_AMT.LOAN_EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINANCIAL_OUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.FINANCIAL_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINANCIAL_OUTNull() {
                this[this.tableA_DAILY_AMT.FINANCIAL_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVERST_OUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVERST_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVERST_OUTNull() {
                this[this.tableA_DAILY_AMT.INVERST_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_OUT_CASHOUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVEST_OUT_CASHOUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_OUT_CASHOUTNull() {
                this[this.tableA_DAILY_AMT.INVEST_OUT_CASHOUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_OUT_CASHNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INVEST_OUT_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_OUT_CASHNull() {
                this[this.tableA_DAILY_AMT.INVEST_OUT_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBEWBORROWNull() {
                return this.IsNull(this.tableA_DAILY_AMT.BEWBORROWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBEWBORROWNull() {
                this[this.tableA_DAILY_AMT.BEWBORROWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSANCE_CD1Null() {
                return this.IsNull(this.tableA_DAILY_AMT.USANCE_CD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSANCE_CD1Null() {
                this[this.tableA_DAILY_AMT.USANCE_CD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINCRES_CAPITALNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INCRES_CAPITALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINCRES_CAPITALNull() {
                this[this.tableA_DAILY_AMT.INCRES_CAPITALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINCRES_CAPITAL_CASHNull() {
                return this.IsNull(this.tableA_DAILY_AMT.INCRES_CAPITAL_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINCRES_CAPITAL_CASHNull() {
                this[this.tableA_DAILY_AMT.INCRES_CAPITAL_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOAN_CD1Null() {
                return this.IsNull(this.tableA_DAILY_AMT.LOAN_CD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOAN_CD1Null() {
                this[this.tableA_DAILY_AMT.LOAN_CD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSANCE_CD2Null() {
                return this.IsNull(this.tableA_DAILY_AMT.USANCE_CD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSANCE_CD2Null() {
                this[this.tableA_DAILY_AMT.USANCE_CD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDENDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.DIVIDENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDENDNull() {
                this[this.tableA_DAILY_AMT.DIVIDENDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_CASHOUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.DIVIDEND_CASHOUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_CASHOUTNull() {
                this[this.tableA_DAILY_AMT.DIVIDEND_CASHOUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_CASHNull() {
                return this.IsNull(this.tableA_DAILY_AMT.DIVIDEND_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_CASHNull() {
                this[this.tableA_DAILY_AMT.DIVIDEND_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_LAST_AMTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.DIVIDEND_LAST_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_LAST_AMTNull() {
                this[this.tableA_DAILY_AMT.DIVIDEND_LAST_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_AMTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.DIVIDEND_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_AMTNull() {
                this[this.tableA_DAILY_AMT.DIVIDEND_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_OVER_AMTNull() {
                return this.IsNull(this.tableA_DAILY_AMT.DIVIDEND_OVER_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_OVER_AMTNull() {
                this[this.tableA_DAILY_AMT.DIVIDEND_OVER_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT1_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXT1_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT1_CDNull() {
                this[this.tableA_DAILY_AMT.EXT1_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT2_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXT2_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT2_CDNull() {
                this[this.tableA_DAILY_AMT.EXT2_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT3_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXT3_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT3_CDNull() {
                this[this.tableA_DAILY_AMT.EXT3_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT4_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXT4_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT4_CDNull() {
                this[this.tableA_DAILY_AMT.EXT4_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT5_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT.EXT5_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT5_CDNull() {
                this[this.tableA_DAILY_AMT.EXT5_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableA_DAILY_AMT.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKNull() {
                this[this.tableA_DAILY_AMT.REMARKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class A_DAILY_AMT_PLANRow : global::System.Data.DataRow {
            
            private A_DAILY_AMT_PLANDataTable tableA_DAILY_AMT_PLAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal A_DAILY_AMT_PLANRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableA_DAILY_AMT_PLAN = ((A_DAILY_AMT_PLANDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YYYY {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT_PLAN.YYYYColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.YYYYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MM {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT_PLAN.MMColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.MMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DD {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT_PLAN.DDColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SALE_CREDIT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SALE_CREDITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SALE_CREDIT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SALE_CREDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SALE_CREDIT_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SALE_CREDIT_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SALE_CREDIT_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SALE_CREDIT_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RETURN_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.RETURN_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'RETURN_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.RETURN_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RETURN_PAY_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.RETURN_PAY_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'RETURN_PAY_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.RETURN_PAY_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SALES_PAY_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SALES_PAY_IN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SALES_PAY_IN_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_IN_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SALES_PAY_IN_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_IN_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TRADE_PAYABLE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'TRADE_PAYABLE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TRADE_PAYABLE_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLE_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'TRADE_PAYABLE_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLE_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_OS {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_OS\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_OS_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OS_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_OS_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OS_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_OUTSIDE {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_OUTSIDE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_OUTSIDE_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDE_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_OUTSIDE_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDE_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_ETC1 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_ETC1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_ETC1_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_ETC1_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_ETC2 {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_ETC2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_ETC2_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_ETC2_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_MATERIAL {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_MATERIAL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_MATERIAL_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIAL_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_MATERIAL_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIAL_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_ETCPAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_ETCPAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NONPAYMENT_ETCPAY_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAY_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'NONPAYMENT_ETCPAY_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAY_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PERSONNEL_EXPENSES {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'PERSONNEL_EXPENSES\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PERSONNEL_EXPENSES_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSES_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'PERSONNEL_EXPENSES_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSES_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PAID_INTEREST {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.PAID_INTERESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'PAID_INTEREST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.PAID_INTERESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PAID_INTEREST_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.PAID_INTEREST_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'PAID_INTEREST_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.PAID_INTEREST_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUSINESS_CASH_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'BUSINESS_CASH_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUSINESS_CASH_OUT_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUT_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'BUSINESS_CASH_OUT_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUT_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUSINESS_CASH_FLOW {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'BUSINESS_CASH_FLOW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BUSINESS_CASH_FLOW_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOW_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'BUSINESS_CASH_FLOW_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOW_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FIXED_ASSETS {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.FIXED_ASSETSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'FIXED_ASSETS\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.FIXED_ASSETSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FIXED_ASSETS_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.FIXED_ASSETS_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'FIXED_ASSETS_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.FIXED_ASSETS_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_BUSINESS_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'ETC_BUSINESS_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_BUSINESS_OUT_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUT_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'ETC_BUSINESS_OUT_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUT_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_BUSINESS_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'ETC_BUSINESS_IN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_BUSINESS_IN_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_IN_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'ETC_BUSINESS_IN_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_IN_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SALES_PAY_ETC {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SALES_PAY_ETC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SALES_PAY_ETC_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETC_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SALES_PAY_ETC_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETC_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SPOTMONTH_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SPOTMONTH_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SPOTMONTH_PAY_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAY_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'SPOTMONTH_PAY_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAY_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BASIS_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.BASIS_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'BASIS_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.BASIS_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BASIS_PAY_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.BASIS_PAY_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'BASIS_PAY_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.BASIS_PAY_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TERMEND_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.TERMEND_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'TERMEND_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.TERMEND_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TERMEND_PAY_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.TERMEND_PAY_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'TERMEND_PAY_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.TERMEND_PAY_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVAILABLE_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'AVAILABLE_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AVAILABLE_PAY_RSLT {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAY_RSLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'AVAILABLE_PAY_RSLT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAY_RSLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT1_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.EXT1_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'EXT1_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.EXT1_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT2_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.EXT2_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'EXT2_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.EXT2_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT3_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.EXT3_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'EXT3_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.EXT3_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT4_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.EXT4_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'EXT4_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.EXT4_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXT5_CD {
                get {
                    try {
                        return ((decimal)(this[this.tableA_DAILY_AMT_PLAN.EXT5_CDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'EXT5_CD\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.EXT5_CDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableA_DAILY_AMT_PLAN.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'A_DAILY_AMT_PLAN\' 테이블의 \'REMARK\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSRT_USER_ID {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT_PLAN.INSRT_USER_IDColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.INSRT_USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime INSRT_DT {
                get {
                    return ((global::System.DateTime)(this[this.tableA_DAILY_AMT_PLAN.INSRT_DTColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.INSRT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UPDT_USER_ID {
                get {
                    return ((string)(this[this.tableA_DAILY_AMT_PLAN.UPDT_USER_IDColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.UPDT_USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UPDT_DT {
                get {
                    return ((global::System.DateTime)(this[this.tableA_DAILY_AMT_PLAN.UPDT_DTColumn]));
                }
                set {
                    this[this.tableA_DAILY_AMT_PLAN.UPDT_DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSALE_CREDITNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SALE_CREDITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSALE_CREDITNull() {
                this[this.tableA_DAILY_AMT_PLAN.SALE_CREDITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSALE_CREDIT_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SALE_CREDIT_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSALE_CREDIT_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.SALE_CREDIT_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRETURN_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.RETURN_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRETURN_PAYNull() {
                this[this.tableA_DAILY_AMT_PLAN.RETURN_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRETURN_PAY_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.RETURN_PAY_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRETURN_PAY_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.RETURN_PAY_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSALES_PAY_INNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SALES_PAY_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSALES_PAY_INNull() {
                this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSALES_PAY_IN_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SALES_PAY_IN_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSALES_PAY_IN_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_IN_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRADE_PAYABLENull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRADE_PAYABLENull() {
                this[this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTRADE_PAYABLE_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLE_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTRADE_PAYABLE_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.TRADE_PAYABLE_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_OSNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_OSNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_OS_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OS_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_OS_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OS_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_OUTSIDENull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_OUTSIDENull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_OUTSIDE_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDE_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_OUTSIDE_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_OUTSIDE_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_ETC1Null() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_ETC1Null() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_ETC1_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_ETC1_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC1_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_ETC2Null() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_ETC2Null() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_ETC2_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_ETC2_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETC2_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_MATERIALNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_MATERIALNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_MATERIAL_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIAL_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_MATERIAL_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_MATERIAL_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_ETCPAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_ETCPAYNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNONPAYMENT_ETCPAY_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAY_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNONPAYMENT_ETCPAY_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.NONPAYMENT_ETCPAY_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPERSONNEL_EXPENSESNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPERSONNEL_EXPENSESNull() {
                this[this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPERSONNEL_EXPENSES_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSES_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPERSONNEL_EXPENSES_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.PERSONNEL_EXPENSES_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAID_INTERESTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.PAID_INTERESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAID_INTERESTNull() {
                this[this.tableA_DAILY_AMT_PLAN.PAID_INTERESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAID_INTEREST_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.PAID_INTEREST_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAID_INTEREST_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.PAID_INTEREST_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUSINESS_CASH_OUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUSINESS_CASH_OUTNull() {
                this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUSINESS_CASH_OUT_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUT_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUSINESS_CASH_OUT_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_OUT_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUSINESS_CASH_FLOWNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUSINESS_CASH_FLOWNull() {
                this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBUSINESS_CASH_FLOW_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOW_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBUSINESS_CASH_FLOW_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.BUSINESS_CASH_FLOW_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIXED_ASSETSNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.FIXED_ASSETSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIXED_ASSETSNull() {
                this[this.tableA_DAILY_AMT_PLAN.FIXED_ASSETSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIXED_ASSETS_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.FIXED_ASSETS_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIXED_ASSETS_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.FIXED_ASSETS_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_BUSINESS_OUTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_BUSINESS_OUTNull() {
                this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_BUSINESS_OUT_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUT_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_BUSINESS_OUT_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_OUT_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_BUSINESS_INNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_BUSINESS_INNull() {
                this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_BUSINESS_IN_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_IN_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_BUSINESS_IN_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.ETC_BUSINESS_IN_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSALES_PAY_ETCNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSALES_PAY_ETCNull() {
                this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSALES_PAY_ETC_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETC_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSALES_PAY_ETC_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.SALES_PAY_ETC_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSPOTMONTH_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSPOTMONTH_PAYNull() {
                this[this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSPOTMONTH_PAY_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAY_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSPOTMONTH_PAY_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.SPOTMONTH_PAY_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBASIS_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.BASIS_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBASIS_PAYNull() {
                this[this.tableA_DAILY_AMT_PLAN.BASIS_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBASIS_PAY_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.BASIS_PAY_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBASIS_PAY_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.BASIS_PAY_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTERMEND_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.TERMEND_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTERMEND_PAYNull() {
                this[this.tableA_DAILY_AMT_PLAN.TERMEND_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTERMEND_PAY_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.TERMEND_PAY_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTERMEND_PAY_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.TERMEND_PAY_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVAILABLE_PAYNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVAILABLE_PAYNull() {
                this[this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAVAILABLE_PAY_RSLTNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAY_RSLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAVAILABLE_PAY_RSLTNull() {
                this[this.tableA_DAILY_AMT_PLAN.AVAILABLE_PAY_RSLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT1_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.EXT1_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT1_CDNull() {
                this[this.tableA_DAILY_AMT_PLAN.EXT1_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT2_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.EXT2_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT2_CDNull() {
                this[this.tableA_DAILY_AMT_PLAN.EXT2_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT3_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.EXT3_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT3_CDNull() {
                this[this.tableA_DAILY_AMT_PLAN.EXT3_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT4_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.EXT4_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT4_CDNull() {
                this[this.tableA_DAILY_AMT_PLAN.EXT4_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXT5_CDNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.EXT5_CDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXT5_CDNull() {
                this[this.tableA_DAILY_AMT_PLAN.EXT5_CDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableA_DAILY_AMT_PLAN.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetREMARKNull() {
                this[this.tableA_DAILY_AMT_PLAN.REMARKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string YYYY {
                get {
                    return ((string)(this[this.tableDataTable1.YYYYColumn]));
                }
                set {
                    this[this.tableDataTable1.YYYYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MM {
                get {
                    return ((string)(this[this.tableDataTable1.MMColumn]));
                }
                set {
                    this[this.tableDataTable1.MMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LENDER_COLLET {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.LENDER_COLLETColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'LENDER_COLLET\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LENDER_COLLETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SURTAX_REFUND {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.SURTAX_REFUNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'SURTAX_REFUND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.SURTAX_REFUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TARIFF_REFUND {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.TARIFF_REFUNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'TARIFF_REFUND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.TARIFF_REFUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LEASE_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.LEASE_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'LEASE_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LEASE_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IMPORT_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.IMPORT_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'IMPORT_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.IMPORT_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal USELESS_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.USELESS_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'USELESS_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.USELESS_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.ETC_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'ETC_1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ETC_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_1_BUSINESS_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.ETC_1_BUSINESS_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'ETC_1_BUSINESS_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ETC_1_BUSINESS_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_MATERIAL {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.M_MATERIALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'M_MATERIAL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.M_MATERIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.M_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'M_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.M_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_RETIRE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.M_RETIREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'M_RETIRE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.M_RETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_FOUNTAIN {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.M_FOUNTAINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'M_FOUNTAIN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.M_FOUNTAINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal M_WELRARE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.M_WELRAREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'M_WELRARE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.M_WELRAREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PAYROLL_COSTS_EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.PAYROLL_COSTS_EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'PAYROLL_COSTS_EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.PAYROLL_COSTS_EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OS_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.OS_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'OS_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.OS_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OUTSIDE_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.OUTSIDE_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'OUTSIDE_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.OUTSIDE_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EXPENSE_ETC {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.EXPENSE_ETCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'EXPENSE_ETC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.EXPENSE_ETCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INSEREST {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INSERESTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INSEREST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INSERESTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DEPOSIT_LEASE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.DEPOSIT_LEASEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'DEPOSIT_LEASE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DEPOSIT_LEASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.ETC_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'ETC_2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ETC_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_2_BUSINESS_EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.ETC_2_BUSINESS_EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'ETC_2_BUSINESS_EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ETC_2_BUSINESS_EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ETC_2_BUSINESS_INFLOW {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.ETC_2_BUSINESS_INFLOWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'ETC_2_BUSINESS_INFLOW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.ETC_2_BUSINESS_INFLOWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FIXED_ASSET_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.FIXED_ASSET_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'FIXED_ASSET_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.FIXED_ASSET_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOAN_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.LOAN_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'LOAN_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LOAN_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FINANCIAL_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.FINANCIAL_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'FINANCIAL_IN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.FINANCIAL_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VALUABLE_PAPAERS_INCOME {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.VALUABLE_PAPAERS_INCOMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'VALUABLE_PAPAERS_INCOME\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.VALUABLE_PAPAERS_INCOMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVERST {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVERSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVERST\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVERSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_LAND {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVEST_LANDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVEST_LAND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVEST_LANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_MACHINE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVEST_MACHINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVEST_MACHINE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVEST_MACHINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_CAR {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVEST_CARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVEST_CAR\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVEST_CARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FIXED_ASSET_IN {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.FIXED_ASSET_INColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'FIXED_ASSET_IN\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.FIXED_ASSET_INColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOAN_EXPENSE {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.LOAN_EXPENSEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'LOAN_EXPENSE\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LOAN_EXPENSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FINANCIAL_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.FINANCIAL_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'FINANCIAL_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.FINANCIAL_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVERST_OUT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVERST_OUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVERST_OUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVERST_OUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_OUT_CASHOUT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVEST_OUT_CASHOUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVEST_OUT_CASHOUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVEST_OUT_CASHOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INVEST_OUT_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INVEST_OUT_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INVEST_OUT_CASH\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INVEST_OUT_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BEWBORROW {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.BEWBORROWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'BEWBORROW\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.BEWBORROWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal USANCE_CD1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.USANCE_CD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'USANCE_CD1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.USANCE_CD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INCRES_CAPITAL {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INCRES_CAPITALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INCRES_CAPITAL\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INCRES_CAPITALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal INCRES_CAPITAL_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.INCRES_CAPITAL_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'INCRES_CAPITAL_CASH\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.INCRES_CAPITAL_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal LOAN_CD1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.LOAN_CD1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'LOAN_CD1\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.LOAN_CD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal USANCE_CD2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.USANCE_CD2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'USANCE_CD2\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.USANCE_CD2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.DIVIDENDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'DIVIDEND\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DIVIDENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_CASHOUT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.DIVIDEND_CASHOUTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'DIVIDEND_CASHOUT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DIVIDEND_CASHOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_CASH {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.DIVIDEND_CASHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'DIVIDEND_CASH\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DIVIDEND_CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DIVIDEND_LAST_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.DIVIDEND_LAST_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'DIVIDEND_LAST_AMT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DIVIDEND_LAST_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TOMONTH_PAY {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTable1.TOMONTH_PAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DataTable1\' 테이블의 \'TOMONTH_PAY\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.TOMONTH_PAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLENDER_COLLETNull() {
                return this.IsNull(this.tableDataTable1.LENDER_COLLETColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLENDER_COLLETNull() {
                this[this.tableDataTable1.LENDER_COLLETColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSURTAX_REFUNDNull() {
                return this.IsNull(this.tableDataTable1.SURTAX_REFUNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSURTAX_REFUNDNull() {
                this[this.tableDataTable1.SURTAX_REFUNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTARIFF_REFUNDNull() {
                return this.IsNull(this.tableDataTable1.TARIFF_REFUNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTARIFF_REFUNDNull() {
                this[this.tableDataTable1.TARIFF_REFUNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLEASE_INCOMENull() {
                return this.IsNull(this.tableDataTable1.LEASE_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLEASE_INCOMENull() {
                this[this.tableDataTable1.LEASE_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMPORT_INCOMENull() {
                return this.IsNull(this.tableDataTable1.IMPORT_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMPORT_INCOMENull() {
                this[this.tableDataTable1.IMPORT_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSELESS_PAYNull() {
                return this.IsNull(this.tableDataTable1.USELESS_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSELESS_PAYNull() {
                this[this.tableDataTable1.USELESS_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_1Null() {
                return this.IsNull(this.tableDataTable1.ETC_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_1Null() {
                this[this.tableDataTable1.ETC_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_1_BUSINESS_INCOMENull() {
                return this.IsNull(this.tableDataTable1.ETC_1_BUSINESS_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_1_BUSINESS_INCOMENull() {
                this[this.tableDataTable1.ETC_1_BUSINESS_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_MATERIALNull() {
                return this.IsNull(this.tableDataTable1.M_MATERIALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_MATERIALNull() {
                this[this.tableDataTable1.M_MATERIALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_PAYNull() {
                return this.IsNull(this.tableDataTable1.M_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_PAYNull() {
                this[this.tableDataTable1.M_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_RETIRENull() {
                return this.IsNull(this.tableDataTable1.M_RETIREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_RETIRENull() {
                this[this.tableDataTable1.M_RETIREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_FOUNTAINNull() {
                return this.IsNull(this.tableDataTable1.M_FOUNTAINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_FOUNTAINNull() {
                this[this.tableDataTable1.M_FOUNTAINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsM_WELRARENull() {
                return this.IsNull(this.tableDataTable1.M_WELRAREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetM_WELRARENull() {
                this[this.tableDataTable1.M_WELRAREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPAYROLL_COSTS_EXPENSENull() {
                return this.IsNull(this.tableDataTable1.PAYROLL_COSTS_EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPAYROLL_COSTS_EXPENSENull() {
                this[this.tableDataTable1.PAYROLL_COSTS_EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSENull() {
                return this.IsNull(this.tableDataTable1.EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSENull() {
                this[this.tableDataTable1.EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOS_PAYNull() {
                return this.IsNull(this.tableDataTable1.OS_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOS_PAYNull() {
                this[this.tableDataTable1.OS_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOUTSIDE_PAYNull() {
                return this.IsNull(this.tableDataTable1.OUTSIDE_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOUTSIDE_PAYNull() {
                this[this.tableDataTable1.OUTSIDE_PAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEXPENSE_ETCNull() {
                return this.IsNull(this.tableDataTable1.EXPENSE_ETCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEXPENSE_ETCNull() {
                this[this.tableDataTable1.EXPENSE_ETCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSERESTNull() {
                return this.IsNull(this.tableDataTable1.INSERESTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSERESTNull() {
                this[this.tableDataTable1.INSERESTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEPOSIT_LEASENull() {
                return this.IsNull(this.tableDataTable1.DEPOSIT_LEASEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEPOSIT_LEASENull() {
                this[this.tableDataTable1.DEPOSIT_LEASEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_2Null() {
                return this.IsNull(this.tableDataTable1.ETC_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_2Null() {
                this[this.tableDataTable1.ETC_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_2_BUSINESS_EXPENSENull() {
                return this.IsNull(this.tableDataTable1.ETC_2_BUSINESS_EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_2_BUSINESS_EXPENSENull() {
                this[this.tableDataTable1.ETC_2_BUSINESS_EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsETC_2_BUSINESS_INFLOWNull() {
                return this.IsNull(this.tableDataTable1.ETC_2_BUSINESS_INFLOWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetETC_2_BUSINESS_INFLOWNull() {
                this[this.tableDataTable1.ETC_2_BUSINESS_INFLOWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIXED_ASSET_OUTNull() {
                return this.IsNull(this.tableDataTable1.FIXED_ASSET_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIXED_ASSET_OUTNull() {
                this[this.tableDataTable1.FIXED_ASSET_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOAN_INCOMENull() {
                return this.IsNull(this.tableDataTable1.LOAN_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOAN_INCOMENull() {
                this[this.tableDataTable1.LOAN_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINANCIAL_INNull() {
                return this.IsNull(this.tableDataTable1.FINANCIAL_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINANCIAL_INNull() {
                this[this.tableDataTable1.FINANCIAL_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVALUABLE_PAPAERS_INCOMENull() {
                return this.IsNull(this.tableDataTable1.VALUABLE_PAPAERS_INCOMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVALUABLE_PAPAERS_INCOMENull() {
                this[this.tableDataTable1.VALUABLE_PAPAERS_INCOMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVERSTNull() {
                return this.IsNull(this.tableDataTable1.INVERSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVERSTNull() {
                this[this.tableDataTable1.INVERSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_LANDNull() {
                return this.IsNull(this.tableDataTable1.INVEST_LANDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_LANDNull() {
                this[this.tableDataTable1.INVEST_LANDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_MACHINENull() {
                return this.IsNull(this.tableDataTable1.INVEST_MACHINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_MACHINENull() {
                this[this.tableDataTable1.INVEST_MACHINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_CARNull() {
                return this.IsNull(this.tableDataTable1.INVEST_CARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_CARNull() {
                this[this.tableDataTable1.INVEST_CARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFIXED_ASSET_INNull() {
                return this.IsNull(this.tableDataTable1.FIXED_ASSET_INColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFIXED_ASSET_INNull() {
                this[this.tableDataTable1.FIXED_ASSET_INColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOAN_EXPENSENull() {
                return this.IsNull(this.tableDataTable1.LOAN_EXPENSEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOAN_EXPENSENull() {
                this[this.tableDataTable1.LOAN_EXPENSEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFINANCIAL_OUTNull() {
                return this.IsNull(this.tableDataTable1.FINANCIAL_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFINANCIAL_OUTNull() {
                this[this.tableDataTable1.FINANCIAL_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVERST_OUTNull() {
                return this.IsNull(this.tableDataTable1.INVERST_OUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVERST_OUTNull() {
                this[this.tableDataTable1.INVERST_OUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_OUT_CASHOUTNull() {
                return this.IsNull(this.tableDataTable1.INVEST_OUT_CASHOUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_OUT_CASHOUTNull() {
                this[this.tableDataTable1.INVEST_OUT_CASHOUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINVEST_OUT_CASHNull() {
                return this.IsNull(this.tableDataTable1.INVEST_OUT_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINVEST_OUT_CASHNull() {
                this[this.tableDataTable1.INVEST_OUT_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBEWBORROWNull() {
                return this.IsNull(this.tableDataTable1.BEWBORROWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBEWBORROWNull() {
                this[this.tableDataTable1.BEWBORROWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSANCE_CD1Null() {
                return this.IsNull(this.tableDataTable1.USANCE_CD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSANCE_CD1Null() {
                this[this.tableDataTable1.USANCE_CD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINCRES_CAPITALNull() {
                return this.IsNull(this.tableDataTable1.INCRES_CAPITALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINCRES_CAPITALNull() {
                this[this.tableDataTable1.INCRES_CAPITALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINCRES_CAPITAL_CASHNull() {
                return this.IsNull(this.tableDataTable1.INCRES_CAPITAL_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINCRES_CAPITAL_CASHNull() {
                this[this.tableDataTable1.INCRES_CAPITAL_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLOAN_CD1Null() {
                return this.IsNull(this.tableDataTable1.LOAN_CD1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLOAN_CD1Null() {
                this[this.tableDataTable1.LOAN_CD1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSANCE_CD2Null() {
                return this.IsNull(this.tableDataTable1.USANCE_CD2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSANCE_CD2Null() {
                this[this.tableDataTable1.USANCE_CD2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDENDNull() {
                return this.IsNull(this.tableDataTable1.DIVIDENDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDENDNull() {
                this[this.tableDataTable1.DIVIDENDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_CASHOUTNull() {
                return this.IsNull(this.tableDataTable1.DIVIDEND_CASHOUTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_CASHOUTNull() {
                this[this.tableDataTable1.DIVIDEND_CASHOUTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_CASHNull() {
                return this.IsNull(this.tableDataTable1.DIVIDEND_CASHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_CASHNull() {
                this[this.tableDataTable1.DIVIDEND_CASHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIVIDEND_LAST_AMTNull() {
                return this.IsNull(this.tableDataTable1.DIVIDEND_LAST_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIVIDEND_LAST_AMTNull() {
                this[this.tableDataTable1.DIVIDEND_LAST_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOMONTH_PAYNull() {
                return this.IsNull(this.tableDataTable1.TOMONTH_PAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOMONTH_PAYNull() {
                this[this.tableDataTable1.TOMONTH_PAYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class A_DAILY_AMTRowChangeEvent : global::System.EventArgs {
            
            private A_DAILY_AMTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTRowChangeEvent(A_DAILY_AMTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class A_DAILY_AMT_PLANRowChangeEvent : global::System.EventArgs {
            
            private A_DAILY_AMT_PLANRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMT_PLANRowChangeEvent(A_DAILY_AMT_PLANRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public A_DAILY_AMT_PLANRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ERPAppAddition.ERPAddition.AM.AM_AC1001.Display_AMTTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class A_DAILY_AMTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public A_DAILY_AMTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "A_DAILY_AMT";
            tableMapping.ColumnMappings.Add("YYYY", "YYYY");
            tableMapping.ColumnMappings.Add("MM", "MM");
            tableMapping.ColumnMappings.Add("DD", "DD");
            tableMapping.ColumnMappings.Add("LENDER_COLLET", "LENDER_COLLET");
            tableMapping.ColumnMappings.Add("SURTAX_REFUND", "SURTAX_REFUND");
            tableMapping.ColumnMappings.Add("TARIFF_REFUND", "TARIFF_REFUND");
            tableMapping.ColumnMappings.Add("LEASE_INCOME", "LEASE_INCOME");
            tableMapping.ColumnMappings.Add("IMPORT_INCOME", "IMPORT_INCOME");
            tableMapping.ColumnMappings.Add("USELESS_PAY", "USELESS_PAY");
            tableMapping.ColumnMappings.Add("ETC_1", "ETC_1");
            tableMapping.ColumnMappings.Add("ETC_1_BUSINESS_INCOME", "ETC_1_BUSINESS_INCOME");
            tableMapping.ColumnMappings.Add("M_MATERIAL", "M_MATERIAL");
            tableMapping.ColumnMappings.Add("M_PAY", "M_PAY");
            tableMapping.ColumnMappings.Add("M_RETIRE", "M_RETIRE");
            tableMapping.ColumnMappings.Add("M_FOUNTAIN", "M_FOUNTAIN");
            tableMapping.ColumnMappings.Add("M_WELRARE", "M_WELRARE");
            tableMapping.ColumnMappings.Add("PAYROLL_COSTS_EXPENSE", "PAYROLL_COSTS_EXPENSE");
            tableMapping.ColumnMappings.Add("EXPENSE", "EXPENSE");
            tableMapping.ColumnMappings.Add("OS_PAY", "OS_PAY");
            tableMapping.ColumnMappings.Add("OUTSIDE_PAY", "OUTSIDE_PAY");
            tableMapping.ColumnMappings.Add("EXPENSE_ETC", "EXPENSE_ETC");
            tableMapping.ColumnMappings.Add("INSEREST", "INSEREST");
            tableMapping.ColumnMappings.Add("DEPOSIT_LEASE", "DEPOSIT_LEASE");
            tableMapping.ColumnMappings.Add("ETC_2", "ETC_2");
            tableMapping.ColumnMappings.Add("ETC_2_BUSINESS_EXPENSE", "ETC_2_BUSINESS_EXPENSE");
            tableMapping.ColumnMappings.Add("ETC_2_BUSINESS_INFLOW", "ETC_2_BUSINESS_INFLOW");
            tableMapping.ColumnMappings.Add("FIXED_ASSET_OUT", "FIXED_ASSET_OUT");
            tableMapping.ColumnMappings.Add("LOAN_INCOME", "LOAN_INCOME");
            tableMapping.ColumnMappings.Add("FINANCIAL_IN", "FINANCIAL_IN");
            tableMapping.ColumnMappings.Add("VALUABLE_PAPAERS_INCOME", "VALUABLE_PAPAERS_INCOME");
            tableMapping.ColumnMappings.Add("INVERST", "INVERST");
            tableMapping.ColumnMappings.Add("INVEST_LAND", "INVEST_LAND");
            tableMapping.ColumnMappings.Add("INVEST_MACHINE", "INVEST_MACHINE");
            tableMapping.ColumnMappings.Add("INVEST_CAR", "INVEST_CAR");
            tableMapping.ColumnMappings.Add("FIXED_ASSET_IN", "FIXED_ASSET_IN");
            tableMapping.ColumnMappings.Add("LOAN_EXPENSE", "LOAN_EXPENSE");
            tableMapping.ColumnMappings.Add("FINANCIAL_OUT", "FINANCIAL_OUT");
            tableMapping.ColumnMappings.Add("INVERST_OUT", "INVERST_OUT");
            tableMapping.ColumnMappings.Add("INVEST_OUT_CASHOUT", "INVEST_OUT_CASHOUT");
            tableMapping.ColumnMappings.Add("INVEST_OUT_CASH", "INVEST_OUT_CASH");
            tableMapping.ColumnMappings.Add("BEWBORROW", "BEWBORROW");
            tableMapping.ColumnMappings.Add("USANCE_CD1", "USANCE_CD1");
            tableMapping.ColumnMappings.Add("INCRES_CAPITAL", "INCRES_CAPITAL");
            tableMapping.ColumnMappings.Add("INCRES_CAPITAL_CASH", "INCRES_CAPITAL_CASH");
            tableMapping.ColumnMappings.Add("LOAN_CD1", "LOAN_CD1");
            tableMapping.ColumnMappings.Add("USANCE_CD2", "USANCE_CD2");
            tableMapping.ColumnMappings.Add("DIVIDEND", "DIVIDEND");
            tableMapping.ColumnMappings.Add("DIVIDEND_CASHOUT", "DIVIDEND_CASHOUT");
            tableMapping.ColumnMappings.Add("DIVIDEND_CASH", "DIVIDEND_CASH");
            tableMapping.ColumnMappings.Add("DIVIDEND_LAST_AMT", "DIVIDEND_LAST_AMT");
            tableMapping.ColumnMappings.Add("DIVIDEND_AMT", "DIVIDEND_AMT");
            tableMapping.ColumnMappings.Add("DIVIDEND_OVER_AMT", "DIVIDEND_OVER_AMT");
            tableMapping.ColumnMappings.Add("EXT1_CD", "EXT1_CD");
            tableMapping.ColumnMappings.Add("EXT2_CD", "EXT2_CD");
            tableMapping.ColumnMappings.Add("EXT3_CD", "EXT3_CD");
            tableMapping.ColumnMappings.Add("EXT4_CD", "EXT4_CD");
            tableMapping.ColumnMappings.Add("EXT5_CD", "EXT5_CD");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("INSRT_USER_ID", "INSRT_USER_ID");
            tableMapping.ColumnMappings.Add("INSRT_DT", "INSRT_DT");
            tableMapping.ColumnMappings.Add("UPDT_USER_ID", "UPDT_USER_ID");
            tableMapping.ColumnMappings.Add("UPDT_DT", "UPDT_DT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[A_DAILY_AMT] WHERE (([YYYY] = @Original_YYYY) AND ([MM] = @Ori" +
                "ginal_MM) AND ([DD] = @Original_DD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYYY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYYY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[A_DAILY_AMT] ([YYYY], [MM], [DD], [LENDER_COLLET], [SURTAX_REF" +
                "UND], [TARIFF_REFUND], [LEASE_INCOME], [IMPORT_INCOME], [USELESS_PAY], [ETC_1], " +
                "[ETC_1_BUSINESS_INCOME], [M_MATERIAL], [M_PAY], [M_RETIRE], [M_FOUNTAIN], [M_WEL" +
                "RARE], [PAYROLL_COSTS_EXPENSE], [EXPENSE], [OS_PAY], [OUTSIDE_PAY], [EXPENSE_ETC" +
                "], [INSEREST], [DEPOSIT_LEASE], [ETC_2], [ETC_2_BUSINESS_EXPENSE], [ETC_2_BUSINE" +
                "SS_INFLOW], [FIXED_ASSET_OUT], [LOAN_INCOME], [FINANCIAL_IN], [VALUABLE_PAPAERS_" +
                "INCOME], [INVERST], [INVEST_LAND], [INVEST_MACHINE], [INVEST_CAR], [FIXED_ASSET_" +
                "IN], [LOAN_EXPENSE], [FINANCIAL_OUT], [INVERST_OUT], [INVEST_OUT_CASHOUT], [INVE" +
                "ST_OUT_CASH], [BEWBORROW], [USANCE_CD1], [INCRES_CAPITAL], [INCRES_CAPITAL_CASH]" +
                ", [LOAN_CD1], [USANCE_CD2], [DIVIDEND], [DIVIDEND_CASHOUT], [DIVIDEND_CASH], [DI" +
                "VIDEND_LAST_AMT], [DIVIDEND_AMT], [DIVIDEND_OVER_AMT], [EXT1_CD], [EXT2_CD], [EX" +
                "T3_CD], [EXT4_CD], [EXT5_CD], [REMARK], [INSRT_USER_ID], [INSRT_DT], [UPDT_USER_" +
                "ID], [UPDT_DT]) VALUES (@YYYY, @MM, @DD, @LENDER_COLLET, @SURTAX_REFUND, @TARIFF" +
                "_REFUND, @LEASE_INCOME, @IMPORT_INCOME, @USELESS_PAY, @ETC_1, @ETC_1_BUSINESS_IN" +
                "COME, @M_MATERIAL, @M_PAY, @M_RETIRE, @M_FOUNTAIN, @M_WELRARE, @PAYROLL_COSTS_EX" +
                "PENSE, @EXPENSE, @OS_PAY, @OUTSIDE_PAY, @EXPENSE_ETC, @INSEREST, @DEPOSIT_LEASE," +
                " @ETC_2, @ETC_2_BUSINESS_EXPENSE, @ETC_2_BUSINESS_INFLOW, @FIXED_ASSET_OUT, @LOA" +
                "N_INCOME, @FINANCIAL_IN, @VALUABLE_PAPAERS_INCOME, @INVERST, @INVEST_LAND, @INVE" +
                "ST_MACHINE, @INVEST_CAR, @FIXED_ASSET_IN, @LOAN_EXPENSE, @FINANCIAL_OUT, @INVERS" +
                "T_OUT, @INVEST_OUT_CASHOUT, @INVEST_OUT_CASH, @BEWBORROW, @USANCE_CD1, @INCRES_C" +
                "APITAL, @INCRES_CAPITAL_CASH, @LOAN_CD1, @USANCE_CD2, @DIVIDEND, @DIVIDEND_CASHO" +
                "UT, @DIVIDEND_CASH, @DIVIDEND_LAST_AMT, @DIVIDEND_AMT, @DIVIDEND_OVER_AMT, @EXT1" +
                "_CD, @EXT2_CD, @EXT3_CD, @EXT4_CD, @EXT5_CD, @REMARK, @INSRT_USER_ID, @INSRT_DT," +
                " @UPDT_USER_ID, @UPDT_DT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYYY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYYY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LENDER_COLLET", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LENDER_COLLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SURTAX_REFUND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SURTAX_REFUND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TARIFF_REFUND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TARIFF_REFUND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LEASE_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LEASE_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMPORT_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "IMPORT_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USELESS_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "USELESS_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_1_BUSINESS_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_1_BUSINESS_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_MATERIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_MATERIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_RETIRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_FOUNTAIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_FOUNTAIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_WELRARE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_WELRARE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAYROLL_COSTS_EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PAYROLL_COSTS_EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OS_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OS_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTSIDE_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OUTSIDE_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENSE_ETC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXPENSE_ETC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSEREST", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INSEREST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPOSIT_LEASE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DEPOSIT_LEASE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_2_BUSINESS_EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_2_BUSINESS_EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_2_BUSINESS_INFLOW", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_2_BUSINESS_INFLOW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXED_ASSET_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FIXED_ASSET_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOAN_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOAN_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINANCIAL_IN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FINANCIAL_IN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALUABLE_PAPAERS_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VALUABLE_PAPAERS_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVERST", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVERST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_LAND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_LAND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_MACHINE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_MACHINE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_CAR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_CAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXED_ASSET_IN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FIXED_ASSET_IN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOAN_EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOAN_EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINANCIAL_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FINANCIAL_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVERST_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVERST_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_OUT_CASHOUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_OUT_CASHOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_OUT_CASH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_OUT_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEWBORROW", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BEWBORROW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USANCE_CD1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "USANCE_CD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCRES_CAPITAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCRES_CAPITAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCRES_CAPITAL_CASH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCRES_CAPITAL_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOAN_CD1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOAN_CD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USANCE_CD2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "USANCE_CD2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_CASHOUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_CASHOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_CASH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_LAST_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_LAST_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_OVER_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_OVER_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT1_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT1_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT2_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT2_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT3_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT3_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT4_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT4_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT5_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT5_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSRT_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSRT_USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSRT_DT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSRT_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDT_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDT_USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDT_DT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDT_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[A_DAILY_AMT] SET [YYYY] = @YYYY, [MM] = @MM, [DD] = @DD, [LENDER_CO" +
                "LLET] = @LENDER_COLLET, [SURTAX_REFUND] = @SURTAX_REFUND, [TARIFF_REFUND] = @TAR" +
                "IFF_REFUND, [LEASE_INCOME] = @LEASE_INCOME, [IMPORT_INCOME] = @IMPORT_INCOME, [U" +
                "SELESS_PAY] = @USELESS_PAY, [ETC_1] = @ETC_1, [ETC_1_BUSINESS_INCOME] = @ETC_1_B" +
                "USINESS_INCOME, [M_MATERIAL] = @M_MATERIAL, [M_PAY] = @M_PAY, [M_RETIRE] = @M_RE" +
                "TIRE, [M_FOUNTAIN] = @M_FOUNTAIN, [M_WELRARE] = @M_WELRARE, [PAYROLL_COSTS_EXPEN" +
                "SE] = @PAYROLL_COSTS_EXPENSE, [EXPENSE] = @EXPENSE, [OS_PAY] = @OS_PAY, [OUTSIDE" +
                "_PAY] = @OUTSIDE_PAY, [EXPENSE_ETC] = @EXPENSE_ETC, [INSEREST] = @INSEREST, [DEP" +
                "OSIT_LEASE] = @DEPOSIT_LEASE, [ETC_2] = @ETC_2, [ETC_2_BUSINESS_EXPENSE] = @ETC_" +
                "2_BUSINESS_EXPENSE, [ETC_2_BUSINESS_INFLOW] = @ETC_2_BUSINESS_INFLOW, [FIXED_ASS" +
                "ET_OUT] = @FIXED_ASSET_OUT, [LOAN_INCOME] = @LOAN_INCOME, [FINANCIAL_IN] = @FINA" +
                "NCIAL_IN, [VALUABLE_PAPAERS_INCOME] = @VALUABLE_PAPAERS_INCOME, [INVERST] = @INV" +
                "ERST, [INVEST_LAND] = @INVEST_LAND, [INVEST_MACHINE] = @INVEST_MACHINE, [INVEST_" +
                "CAR] = @INVEST_CAR, [FIXED_ASSET_IN] = @FIXED_ASSET_IN, [LOAN_EXPENSE] = @LOAN_E" +
                "XPENSE, [FINANCIAL_OUT] = @FINANCIAL_OUT, [INVERST_OUT] = @INVERST_OUT, [INVEST_" +
                "OUT_CASHOUT] = @INVEST_OUT_CASHOUT, [INVEST_OUT_CASH] = @INVEST_OUT_CASH, [BEWBO" +
                "RROW] = @BEWBORROW, [USANCE_CD1] = @USANCE_CD1, [INCRES_CAPITAL] = @INCRES_CAPIT" +
                "AL, [INCRES_CAPITAL_CASH] = @INCRES_CAPITAL_CASH, [LOAN_CD1] = @LOAN_CD1, [USANC" +
                "E_CD2] = @USANCE_CD2, [DIVIDEND] = @DIVIDEND, [DIVIDEND_CASHOUT] = @DIVIDEND_CAS" +
                "HOUT, [DIVIDEND_CASH] = @DIVIDEND_CASH, [DIVIDEND_LAST_AMT] = @DIVIDEND_LAST_AMT" +
                ", [DIVIDEND_AMT] = @DIVIDEND_AMT, [DIVIDEND_OVER_AMT] = @DIVIDEND_OVER_AMT, [EXT" +
                "1_CD] = @EXT1_CD, [EXT2_CD] = @EXT2_CD, [EXT3_CD] = @EXT3_CD, [EXT4_CD] = @EXT4_" +
                "CD, [EXT5_CD] = @EXT5_CD, [REMARK] = @REMARK, [INSRT_USER_ID] = @INSRT_USER_ID, " +
                "[INSRT_DT] = @INSRT_DT, [UPDT_USER_ID] = @UPDT_USER_ID, [UPDT_DT] = @UPDT_DT WHE" +
                "RE (([YYYY] = @Original_YYYY) AND ([MM] = @Original_MM) AND ([DD] = @Original_DD" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYYY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYYY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LENDER_COLLET", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LENDER_COLLET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SURTAX_REFUND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SURTAX_REFUND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TARIFF_REFUND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TARIFF_REFUND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LEASE_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LEASE_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMPORT_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "IMPORT_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USELESS_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "USELESS_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_1_BUSINESS_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_1_BUSINESS_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_MATERIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_MATERIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_RETIRE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_FOUNTAIN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_FOUNTAIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@M_WELRARE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "M_WELRARE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAYROLL_COSTS_EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PAYROLL_COSTS_EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OS_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OS_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTSIDE_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "OUTSIDE_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPENSE_ETC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXPENSE_ETC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSEREST", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INSEREST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPOSIT_LEASE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DEPOSIT_LEASE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_2_BUSINESS_EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_2_BUSINESS_EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_2_BUSINESS_INFLOW", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_2_BUSINESS_INFLOW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXED_ASSET_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FIXED_ASSET_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOAN_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOAN_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINANCIAL_IN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FINANCIAL_IN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VALUABLE_PAPAERS_INCOME", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "VALUABLE_PAPAERS_INCOME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVERST", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVERST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_LAND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_LAND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_MACHINE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_MACHINE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_CAR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_CAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXED_ASSET_IN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FIXED_ASSET_IN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOAN_EXPENSE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOAN_EXPENSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINANCIAL_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FINANCIAL_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVERST_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVERST_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_OUT_CASHOUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_OUT_CASHOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INVEST_OUT_CASH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INVEST_OUT_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEWBORROW", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BEWBORROW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USANCE_CD1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "USANCE_CD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCRES_CAPITAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCRES_CAPITAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCRES_CAPITAL_CASH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "INCRES_CAPITAL_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOAN_CD1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "LOAN_CD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USANCE_CD2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "USANCE_CD2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_CASHOUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_CASHOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_CASH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_LAST_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_LAST_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIVIDEND_OVER_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "DIVIDEND_OVER_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT1_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT1_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT2_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT2_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT3_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT3_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT4_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT4_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT5_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT5_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSRT_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSRT_USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSRT_DT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSRT_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDT_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDT_USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDT_DT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDT_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYYY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYYY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["nepes_display"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT YYYY, MM, DD, LENDER_COLLET, SURTAX_REFUND, TARIFF_REFUND, LEASE_INCOME, IMPORT_INCOME, USELESS_PAY, ETC_1, ETC_1_BUSINESS_INCOME, M_MATERIAL, M_PAY, M_RETIRE, M_FOUNTAIN, M_WELRARE, PAYROLL_COSTS_EXPENSE, EXPENSE, OS_PAY, OUTSIDE_PAY, EXPENSE_ETC, INSEREST, DEPOSIT_LEASE, ETC_2, ETC_2_BUSINESS_EXPENSE, ETC_2_BUSINESS_INFLOW, FIXED_ASSET_OUT, LOAN_INCOME, FINANCIAL_IN, VALUABLE_PAPAERS_INCOME, INVERST, INVEST_LAND, INVEST_MACHINE, INVEST_CAR, FIXED_ASSET_IN, LOAN_EXPENSE, FINANCIAL_OUT, INVERST_OUT, INVEST_OUT_CASHOUT, INVEST_OUT_CASH, BEWBORROW, USANCE_CD1, INCRES_CAPITAL, INCRES_CAPITAL_CASH, LOAN_CD1, USANCE_CD2, DIVIDEND, DIVIDEND_CASHOUT, DIVIDEND_CASH, DIVIDEND_LAST_AMT, DIVIDEND_AMT, DIVIDEND_OVER_AMT, EXT1_CD, EXT2_CD, EXT3_CD, EXT4_CD, EXT5_CD, REMARK, INSRT_USER_ID, INSRT_DT, UPDT_USER_ID, UPDT_DT FROM dbo.A_DAILY_AMT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Display_AMT.A_DAILY_AMTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Display_AMT.A_DAILY_AMTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Display_AMT.A_DAILY_AMTDataTable dataTable = new Display_AMT.A_DAILY_AMTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Display_AMT.A_DAILY_AMTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Display_AMT dataSet) {
            return this.Adapter.Update(dataSet, "A_DAILY_AMT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_YYYY, string Original_MM, string Original_DD) {
            if ((Original_YYYY == null)) {
                throw new global::System.ArgumentNullException("Original_YYYY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_YYYY));
            }
            if ((Original_MM == null)) {
                throw new global::System.ArgumentNullException("Original_MM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_MM));
            }
            if ((Original_DD == null)) {
                throw new global::System.ArgumentNullException("Original_DD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_DD));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string YYYY, 
                    string MM, 
                    string DD, 
                    global::System.Nullable<decimal> LENDER_COLLET, 
                    global::System.Nullable<decimal> SURTAX_REFUND, 
                    global::System.Nullable<decimal> TARIFF_REFUND, 
                    global::System.Nullable<decimal> LEASE_INCOME, 
                    global::System.Nullable<decimal> IMPORT_INCOME, 
                    global::System.Nullable<decimal> USELESS_PAY, 
                    global::System.Nullable<decimal> ETC_1, 
                    global::System.Nullable<decimal> ETC_1_BUSINESS_INCOME, 
                    global::System.Nullable<decimal> M_MATERIAL, 
                    global::System.Nullable<decimal> M_PAY, 
                    global::System.Nullable<decimal> M_RETIRE, 
                    global::System.Nullable<decimal> M_FOUNTAIN, 
                    global::System.Nullable<decimal> M_WELRARE, 
                    global::System.Nullable<decimal> PAYROLL_COSTS_EXPENSE, 
                    global::System.Nullable<decimal> EXPENSE, 
                    global::System.Nullable<decimal> OS_PAY, 
                    global::System.Nullable<decimal> OUTSIDE_PAY, 
                    global::System.Nullable<decimal> EXPENSE_ETC, 
                    global::System.Nullable<decimal> INSEREST, 
                    global::System.Nullable<decimal> DEPOSIT_LEASE, 
                    global::System.Nullable<decimal> ETC_2, 
                    global::System.Nullable<decimal> ETC_2_BUSINESS_EXPENSE, 
                    global::System.Nullable<decimal> ETC_2_BUSINESS_INFLOW, 
                    global::System.Nullable<decimal> FIXED_ASSET_OUT, 
                    global::System.Nullable<decimal> LOAN_INCOME, 
                    global::System.Nullable<decimal> FINANCIAL_IN, 
                    global::System.Nullable<decimal> VALUABLE_PAPAERS_INCOME, 
                    global::System.Nullable<decimal> INVERST, 
                    global::System.Nullable<decimal> INVEST_LAND, 
                    global::System.Nullable<decimal> INVEST_MACHINE, 
                    global::System.Nullable<decimal> INVEST_CAR, 
                    global::System.Nullable<decimal> FIXED_ASSET_IN, 
                    global::System.Nullable<decimal> LOAN_EXPENSE, 
                    global::System.Nullable<decimal> FINANCIAL_OUT, 
                    global::System.Nullable<decimal> INVERST_OUT, 
                    global::System.Nullable<decimal> INVEST_OUT_CASHOUT, 
                    global::System.Nullable<decimal> INVEST_OUT_CASH, 
                    global::System.Nullable<decimal> BEWBORROW, 
                    global::System.Nullable<decimal> USANCE_CD1, 
                    global::System.Nullable<decimal> INCRES_CAPITAL, 
                    global::System.Nullable<decimal> INCRES_CAPITAL_CASH, 
                    global::System.Nullable<decimal> LOAN_CD1, 
                    global::System.Nullable<decimal> USANCE_CD2, 
                    global::System.Nullable<decimal> DIVIDEND, 
                    global::System.Nullable<decimal> DIVIDEND_CASHOUT, 
                    global::System.Nullable<decimal> DIVIDEND_CASH, 
                    global::System.Nullable<decimal> DIVIDEND_LAST_AMT, 
                    global::System.Nullable<decimal> DIVIDEND_AMT, 
                    global::System.Nullable<decimal> DIVIDEND_OVER_AMT, 
                    global::System.Nullable<decimal> EXT1_CD, 
                    global::System.Nullable<decimal> EXT2_CD, 
                    global::System.Nullable<decimal> EXT3_CD, 
                    global::System.Nullable<decimal> EXT4_CD, 
                    global::System.Nullable<decimal> EXT5_CD, 
                    string REMARK, 
                    string INSRT_USER_ID, 
                    System.DateTime INSRT_DT, 
                    string UPDT_USER_ID, 
                    System.DateTime UPDT_DT) {
            if ((YYYY == null)) {
                throw new global::System.ArgumentNullException("YYYY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(YYYY));
            }
            if ((MM == null)) {
                throw new global::System.ArgumentNullException("MM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MM));
            }
            if ((DD == null)) {
                throw new global::System.ArgumentNullException("DD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DD));
            }
            if ((LENDER_COLLET.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(LENDER_COLLET.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SURTAX_REFUND.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SURTAX_REFUND.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TARIFF_REFUND.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(TARIFF_REFUND.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((LEASE_INCOME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(LEASE_INCOME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((IMPORT_INCOME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(IMPORT_INCOME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((USELESS_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(USELESS_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ETC_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ETC_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ETC_1_BUSINESS_INCOME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(ETC_1_BUSINESS_INCOME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((M_MATERIAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(M_MATERIAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((M_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(M_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((M_RETIRE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(M_RETIRE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((M_FOUNTAIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(M_FOUNTAIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((M_WELRARE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(M_WELRARE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((PAYROLL_COSTS_EXPENSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(PAYROLL_COSTS_EXPENSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EXPENSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(EXPENSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((OS_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(OS_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((OUTSIDE_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(OUTSIDE_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((EXPENSE_ETC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(EXPENSE_ETC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((INSEREST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(INSEREST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DEPOSIT_LEASE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(DEPOSIT_LEASE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ETC_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(ETC_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ETC_2_BUSINESS_EXPENSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(ETC_2_BUSINESS_EXPENSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ETC_2_BUSINESS_INFLOW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(ETC_2_BUSINESS_INFLOW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((FIXED_ASSET_OUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(FIXED_ASSET_OUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((LOAN_INCOME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(LOAN_INCOME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((FINANCIAL_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(FINANCIAL_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((VALUABLE_PAPAERS_INCOME.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(VALUABLE_PAPAERS_INCOME.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((INVERST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(INVERST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((INVEST_LAND.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(INVEST_LAND.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((INVEST_MACHINE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(INVEST_MACHINE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((INVEST_CAR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(INVEST_CAR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((FIXED_ASSET_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(FIXED_ASSET_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((LOAN_EXPENSE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(LOAN_EXPENSE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FINANCIAL_OUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(FINANCIAL_OUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((INVERST_OUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(INVERST_OUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((INVEST_OUT_CASHOUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(INVEST_OUT_CASHOUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((INVEST_OUT_CASH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(INVEST_OUT_CASH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((BEWBORROW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(BEWBORROW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((USANCE_CD1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(USANCE_CD1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((INCRES_CAPITAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(INCRES_CAPITAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((INCRES_CAPITAL_CASH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(INCRES_CAPITAL_CASH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((LOAN_CD1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(LOAN_CD1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((USANCE_CD2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(USANCE_CD2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(DIVIDEND.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_CASHOUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(DIVIDEND_CASHOUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_CASH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(DIVIDEND_CASH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_LAST_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(DIVIDEND_LAST_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(DIVIDEND_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_OVER_AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(DIVIDEND_OVER_AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EXT1_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(EXT1_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((EXT2_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(EXT2_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((EXT3_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(EXT3_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((EXT4_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(EXT4_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((EXT5_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(EXT5_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(REMARK));
            }
            if ((INSRT_USER_ID == null)) {
                throw new global::System.ArgumentNullException("INSRT_USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(INSRT_USER_ID));
            }
            this.Adapter.InsertCommand.Parameters[59].Value = ((System.DateTime)(INSRT_DT));
            if ((UPDT_USER_ID == null)) {
                throw new global::System.ArgumentNullException("UPDT_USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(UPDT_USER_ID));
            }
            this.Adapter.InsertCommand.Parameters[61].Value = ((System.DateTime)(UPDT_DT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YYYY, 
                    string MM, 
                    string DD, 
                    global::System.Nullable<decimal> LENDER_COLLET, 
                    global::System.Nullable<decimal> SURTAX_REFUND, 
                    global::System.Nullable<decimal> TARIFF_REFUND, 
                    global::System.Nullable<decimal> LEASE_INCOME, 
                    global::System.Nullable<decimal> IMPORT_INCOME, 
                    global::System.Nullable<decimal> USELESS_PAY, 
                    global::System.Nullable<decimal> ETC_1, 
                    global::System.Nullable<decimal> ETC_1_BUSINESS_INCOME, 
                    global::System.Nullable<decimal> M_MATERIAL, 
                    global::System.Nullable<decimal> M_PAY, 
                    global::System.Nullable<decimal> M_RETIRE, 
                    global::System.Nullable<decimal> M_FOUNTAIN, 
                    global::System.Nullable<decimal> M_WELRARE, 
                    global::System.Nullable<decimal> PAYROLL_COSTS_EXPENSE, 
                    global::System.Nullable<decimal> EXPENSE, 
                    global::System.Nullable<decimal> OS_PAY, 
                    global::System.Nullable<decimal> OUTSIDE_PAY, 
                    global::System.Nullable<decimal> EXPENSE_ETC, 
                    global::System.Nullable<decimal> INSEREST, 
                    global::System.Nullable<decimal> DEPOSIT_LEASE, 
                    global::System.Nullable<decimal> ETC_2, 
                    global::System.Nullable<decimal> ETC_2_BUSINESS_EXPENSE, 
                    global::System.Nullable<decimal> ETC_2_BUSINESS_INFLOW, 
                    global::System.Nullable<decimal> FIXED_ASSET_OUT, 
                    global::System.Nullable<decimal> LOAN_INCOME, 
                    global::System.Nullable<decimal> FINANCIAL_IN, 
                    global::System.Nullable<decimal> VALUABLE_PAPAERS_INCOME, 
                    global::System.Nullable<decimal> INVERST, 
                    global::System.Nullable<decimal> INVEST_LAND, 
                    global::System.Nullable<decimal> INVEST_MACHINE, 
                    global::System.Nullable<decimal> INVEST_CAR, 
                    global::System.Nullable<decimal> FIXED_ASSET_IN, 
                    global::System.Nullable<decimal> LOAN_EXPENSE, 
                    global::System.Nullable<decimal> FINANCIAL_OUT, 
                    global::System.Nullable<decimal> INVERST_OUT, 
                    global::System.Nullable<decimal> INVEST_OUT_CASHOUT, 
                    global::System.Nullable<decimal> INVEST_OUT_CASH, 
                    global::System.Nullable<decimal> BEWBORROW, 
                    global::System.Nullable<decimal> USANCE_CD1, 
                    global::System.Nullable<decimal> INCRES_CAPITAL, 
                    global::System.Nullable<decimal> INCRES_CAPITAL_CASH, 
                    global::System.Nullable<decimal> LOAN_CD1, 
                    global::System.Nullable<decimal> USANCE_CD2, 
                    global::System.Nullable<decimal> DIVIDEND, 
                    global::System.Nullable<decimal> DIVIDEND_CASHOUT, 
                    global::System.Nullable<decimal> DIVIDEND_CASH, 
                    global::System.Nullable<decimal> DIVIDEND_LAST_AMT, 
                    global::System.Nullable<decimal> DIVIDEND_AMT, 
                    global::System.Nullable<decimal> DIVIDEND_OVER_AMT, 
                    global::System.Nullable<decimal> EXT1_CD, 
                    global::System.Nullable<decimal> EXT2_CD, 
                    global::System.Nullable<decimal> EXT3_CD, 
                    global::System.Nullable<decimal> EXT4_CD, 
                    global::System.Nullable<decimal> EXT5_CD, 
                    string REMARK, 
                    string INSRT_USER_ID, 
                    System.DateTime INSRT_DT, 
                    string UPDT_USER_ID, 
                    System.DateTime UPDT_DT, 
                    string Original_YYYY, 
                    string Original_MM, 
                    string Original_DD) {
            if ((YYYY == null)) {
                throw new global::System.ArgumentNullException("YYYY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(YYYY));
            }
            if ((MM == null)) {
                throw new global::System.ArgumentNullException("MM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MM));
            }
            if ((DD == null)) {
                throw new global::System.ArgumentNullException("DD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DD));
            }
            if ((LENDER_COLLET.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(LENDER_COLLET.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SURTAX_REFUND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SURTAX_REFUND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((TARIFF_REFUND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(TARIFF_REFUND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((LEASE_INCOME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(LEASE_INCOME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((IMPORT_INCOME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(IMPORT_INCOME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((USELESS_PAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(USELESS_PAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ETC_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(ETC_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ETC_1_BUSINESS_INCOME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(ETC_1_BUSINESS_INCOME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((M_MATERIAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(M_MATERIAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((M_PAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(M_PAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((M_RETIRE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(M_RETIRE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((M_FOUNTAIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(M_FOUNTAIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((M_WELRARE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(M_WELRARE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((PAYROLL_COSTS_EXPENSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(PAYROLL_COSTS_EXPENSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((EXPENSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(EXPENSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((OS_PAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(OS_PAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((OUTSIDE_PAY.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(OUTSIDE_PAY.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((EXPENSE_ETC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(EXPENSE_ETC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((INSEREST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(INSEREST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DEPOSIT_LEASE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(DEPOSIT_LEASE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((ETC_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(ETC_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((ETC_2_BUSINESS_EXPENSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(ETC_2_BUSINESS_EXPENSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ETC_2_BUSINESS_INFLOW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(ETC_2_BUSINESS_INFLOW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((FIXED_ASSET_OUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(FIXED_ASSET_OUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((LOAN_INCOME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(LOAN_INCOME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((FINANCIAL_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(FINANCIAL_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((VALUABLE_PAPAERS_INCOME.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(VALUABLE_PAPAERS_INCOME.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((INVERST.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(INVERST.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((INVEST_LAND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(INVEST_LAND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((INVEST_MACHINE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(INVEST_MACHINE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((INVEST_CAR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(INVEST_CAR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((FIXED_ASSET_IN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(FIXED_ASSET_IN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((LOAN_EXPENSE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(LOAN_EXPENSE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((FINANCIAL_OUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(FINANCIAL_OUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((INVERST_OUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(INVERST_OUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((INVEST_OUT_CASHOUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(INVEST_OUT_CASHOUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((INVEST_OUT_CASH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(INVEST_OUT_CASH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((BEWBORROW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(BEWBORROW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((USANCE_CD1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(USANCE_CD1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((INCRES_CAPITAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(INCRES_CAPITAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((INCRES_CAPITAL_CASH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(INCRES_CAPITAL_CASH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((LOAN_CD1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(LOAN_CD1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((USANCE_CD2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(USANCE_CD2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(DIVIDEND.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_CASHOUT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(DIVIDEND_CASHOUT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_CASH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(DIVIDEND_CASH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_LAST_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(DIVIDEND_LAST_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(DIVIDEND_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DIVIDEND_OVER_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(DIVIDEND_OVER_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EXT1_CD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(EXT1_CD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((EXT2_CD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(EXT2_CD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((EXT3_CD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(EXT3_CD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((EXT4_CD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(EXT4_CD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((EXT5_CD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(EXT5_CD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((REMARK == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(REMARK));
            }
            if ((INSRT_USER_ID == null)) {
                throw new global::System.ArgumentNullException("INSRT_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(INSRT_USER_ID));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(INSRT_DT));
            if ((UPDT_USER_ID == null)) {
                throw new global::System.ArgumentNullException("UPDT_USER_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(UPDT_USER_ID));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((System.DateTime)(UPDT_DT));
            if ((Original_YYYY == null)) {
                throw new global::System.ArgumentNullException("Original_YYYY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_YYYY));
            }
            if ((Original_MM == null)) {
                throw new global::System.ArgumentNullException("Original_MM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_MM));
            }
            if ((Original_DD == null)) {
                throw new global::System.ArgumentNullException("Original_DD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_DD));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> LENDER_COLLET, 
                    global::System.Nullable<decimal> SURTAX_REFUND, 
                    global::System.Nullable<decimal> TARIFF_REFUND, 
                    global::System.Nullable<decimal> LEASE_INCOME, 
                    global::System.Nullable<decimal> IMPORT_INCOME, 
                    global::System.Nullable<decimal> USELESS_PAY, 
                    global::System.Nullable<decimal> ETC_1, 
                    global::System.Nullable<decimal> ETC_1_BUSINESS_INCOME, 
                    global::System.Nullable<decimal> M_MATERIAL, 
                    global::System.Nullable<decimal> M_PAY, 
                    global::System.Nullable<decimal> M_RETIRE, 
                    global::System.Nullable<decimal> M_FOUNTAIN, 
                    global::System.Nullable<decimal> M_WELRARE, 
                    global::System.Nullable<decimal> PAYROLL_COSTS_EXPENSE, 
                    global::System.Nullable<decimal> EXPENSE, 
                    global::System.Nullable<decimal> OS_PAY, 
                    global::System.Nullable<decimal> OUTSIDE_PAY, 
                    global::System.Nullable<decimal> EXPENSE_ETC, 
                    global::System.Nullable<decimal> INSEREST, 
                    global::System.Nullable<decimal> DEPOSIT_LEASE, 
                    global::System.Nullable<decimal> ETC_2, 
                    global::System.Nullable<decimal> ETC_2_BUSINESS_EXPENSE, 
                    global::System.Nullable<decimal> ETC_2_BUSINESS_INFLOW, 
                    global::System.Nullable<decimal> FIXED_ASSET_OUT, 
                    global::System.Nullable<decimal> LOAN_INCOME, 
                    global::System.Nullable<decimal> FINANCIAL_IN, 
                    global::System.Nullable<decimal> VALUABLE_PAPAERS_INCOME, 
                    global::System.Nullable<decimal> INVERST, 
                    global::System.Nullable<decimal> INVEST_LAND, 
                    global::System.Nullable<decimal> INVEST_MACHINE, 
                    global::System.Nullable<decimal> INVEST_CAR, 
                    global::System.Nullable<decimal> FIXED_ASSET_IN, 
                    global::System.Nullable<decimal> LOAN_EXPENSE, 
                    global::System.Nullable<decimal> FINANCIAL_OUT, 
                    global::System.Nullable<decimal> INVERST_OUT, 
                    global::System.Nullable<decimal> INVEST_OUT_CASHOUT, 
                    global::System.Nullable<decimal> INVEST_OUT_CASH, 
                    global::System.Nullable<decimal> BEWBORROW, 
                    global::System.Nullable<decimal> USANCE_CD1, 
                    global::System.Nullable<decimal> INCRES_CAPITAL, 
                    global::System.Nullable<decimal> INCRES_CAPITAL_CASH, 
                    global::System.Nullable<decimal> LOAN_CD1, 
                    global::System.Nullable<decimal> USANCE_CD2, 
                    global::System.Nullable<decimal> DIVIDEND, 
                    global::System.Nullable<decimal> DIVIDEND_CASHOUT, 
                    global::System.Nullable<decimal> DIVIDEND_CASH, 
                    global::System.Nullable<decimal> DIVIDEND_LAST_AMT, 
                    global::System.Nullable<decimal> DIVIDEND_AMT, 
                    global::System.Nullable<decimal> DIVIDEND_OVER_AMT, 
                    global::System.Nullable<decimal> EXT1_CD, 
                    global::System.Nullable<decimal> EXT2_CD, 
                    global::System.Nullable<decimal> EXT3_CD, 
                    global::System.Nullable<decimal> EXT4_CD, 
                    global::System.Nullable<decimal> EXT5_CD, 
                    string REMARK, 
                    string INSRT_USER_ID, 
                    System.DateTime INSRT_DT, 
                    string UPDT_USER_ID, 
                    System.DateTime UPDT_DT, 
                    string Original_YYYY, 
                    string Original_MM, 
                    string Original_DD) {
            return this.Update(Original_YYYY, Original_MM, Original_DD, LENDER_COLLET, SURTAX_REFUND, TARIFF_REFUND, LEASE_INCOME, IMPORT_INCOME, USELESS_PAY, ETC_1, ETC_1_BUSINESS_INCOME, M_MATERIAL, M_PAY, M_RETIRE, M_FOUNTAIN, M_WELRARE, PAYROLL_COSTS_EXPENSE, EXPENSE, OS_PAY, OUTSIDE_PAY, EXPENSE_ETC, INSEREST, DEPOSIT_LEASE, ETC_2, ETC_2_BUSINESS_EXPENSE, ETC_2_BUSINESS_INFLOW, FIXED_ASSET_OUT, LOAN_INCOME, FINANCIAL_IN, VALUABLE_PAPAERS_INCOME, INVERST, INVEST_LAND, INVEST_MACHINE, INVEST_CAR, FIXED_ASSET_IN, LOAN_EXPENSE, FINANCIAL_OUT, INVERST_OUT, INVEST_OUT_CASHOUT, INVEST_OUT_CASH, BEWBORROW, USANCE_CD1, INCRES_CAPITAL, INCRES_CAPITAL_CASH, LOAN_CD1, USANCE_CD2, DIVIDEND, DIVIDEND_CASHOUT, DIVIDEND_CASH, DIVIDEND_LAST_AMT, DIVIDEND_AMT, DIVIDEND_OVER_AMT, EXT1_CD, EXT2_CD, EXT3_CD, EXT4_CD, EXT5_CD, REMARK, INSRT_USER_ID, INSRT_DT, UPDT_USER_ID, UPDT_DT, Original_YYYY, Original_MM, Original_DD);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class A_DAILY_AMT_PLANTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public A_DAILY_AMT_PLANTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "A_DAILY_AMT_PLAN";
            tableMapping.ColumnMappings.Add("YYYY", "YYYY");
            tableMapping.ColumnMappings.Add("MM", "MM");
            tableMapping.ColumnMappings.Add("DD", "DD");
            tableMapping.ColumnMappings.Add("SALE_CREDIT", "SALE_CREDIT");
            tableMapping.ColumnMappings.Add("SALE_CREDIT_RSLT", "SALE_CREDIT_RSLT");
            tableMapping.ColumnMappings.Add("RETURN_PAY", "RETURN_PAY");
            tableMapping.ColumnMappings.Add("RETURN_PAY_RSLT", "RETURN_PAY_RSLT");
            tableMapping.ColumnMappings.Add("SALES_PAY_IN", "SALES_PAY_IN");
            tableMapping.ColumnMappings.Add("SALES_PAY_IN_RSLT", "SALES_PAY_IN_RSLT");
            tableMapping.ColumnMappings.Add("TRADE_PAYABLE", "TRADE_PAYABLE");
            tableMapping.ColumnMappings.Add("TRADE_PAYABLE_RSLT", "TRADE_PAYABLE_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT", "NONPAYMENT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_RSLT", "NONPAYMENT_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_OS", "NONPAYMENT_OS");
            tableMapping.ColumnMappings.Add("NONPAYMENT_OS_RSLT", "NONPAYMENT_OS_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_OUTSIDE", "NONPAYMENT_OUTSIDE");
            tableMapping.ColumnMappings.Add("NONPAYMENT_OUTSIDE_RSLT", "NONPAYMENT_OUTSIDE_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_ETC1", "NONPAYMENT_ETC1");
            tableMapping.ColumnMappings.Add("NONPAYMENT_ETC1_RSLT", "NONPAYMENT_ETC1_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_ETC2", "NONPAYMENT_ETC2");
            tableMapping.ColumnMappings.Add("NONPAYMENT_ETC2_RSLT", "NONPAYMENT_ETC2_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_MATERIAL", "NONPAYMENT_MATERIAL");
            tableMapping.ColumnMappings.Add("NONPAYMENT_MATERIAL_RSLT", "NONPAYMENT_MATERIAL_RSLT");
            tableMapping.ColumnMappings.Add("NONPAYMENT_ETCPAY", "NONPAYMENT_ETCPAY");
            tableMapping.ColumnMappings.Add("NONPAYMENT_ETCPAY_RSLT", "NONPAYMENT_ETCPAY_RSLT");
            tableMapping.ColumnMappings.Add("PERSONNEL_EXPENSES", "PERSONNEL_EXPENSES");
            tableMapping.ColumnMappings.Add("PERSONNEL_EXPENSES_RSLT", "PERSONNEL_EXPENSES_RSLT");
            tableMapping.ColumnMappings.Add("PAID_INTEREST", "PAID_INTEREST");
            tableMapping.ColumnMappings.Add("PAID_INTEREST_RSLT", "PAID_INTEREST_RSLT");
            tableMapping.ColumnMappings.Add("BUSINESS_CASH_OUT", "BUSINESS_CASH_OUT");
            tableMapping.ColumnMappings.Add("BUSINESS_CASH_OUT_RSLT", "BUSINESS_CASH_OUT_RSLT");
            tableMapping.ColumnMappings.Add("BUSINESS_CASH_FLOW", "BUSINESS_CASH_FLOW");
            tableMapping.ColumnMappings.Add("BUSINESS_CASH_FLOW_RSLT", "BUSINESS_CASH_FLOW_RSLT");
            tableMapping.ColumnMappings.Add("FIXED_ASSETS", "FIXED_ASSETS");
            tableMapping.ColumnMappings.Add("FIXED_ASSETS_RSLT", "FIXED_ASSETS_RSLT");
            tableMapping.ColumnMappings.Add("ETC_BUSINESS_OUT", "ETC_BUSINESS_OUT");
            tableMapping.ColumnMappings.Add("ETC_BUSINESS_OUT_RSLT", "ETC_BUSINESS_OUT_RSLT");
            tableMapping.ColumnMappings.Add("ETC_BUSINESS_IN", "ETC_BUSINESS_IN");
            tableMapping.ColumnMappings.Add("ETC_BUSINESS_IN_RSLT", "ETC_BUSINESS_IN_RSLT");
            tableMapping.ColumnMappings.Add("SALES_PAY_ETC", "SALES_PAY_ETC");
            tableMapping.ColumnMappings.Add("SALES_PAY_ETC_RSLT", "SALES_PAY_ETC_RSLT");
            tableMapping.ColumnMappings.Add("SPOTMONTH_PAY", "SPOTMONTH_PAY");
            tableMapping.ColumnMappings.Add("SPOTMONTH_PAY_RSLT", "SPOTMONTH_PAY_RSLT");
            tableMapping.ColumnMappings.Add("BASIS_PAY", "BASIS_PAY");
            tableMapping.ColumnMappings.Add("BASIS_PAY_RSLT", "BASIS_PAY_RSLT");
            tableMapping.ColumnMappings.Add("TERMEND_PAY", "TERMEND_PAY");
            tableMapping.ColumnMappings.Add("TERMEND_PAY_RSLT", "TERMEND_PAY_RSLT");
            tableMapping.ColumnMappings.Add("AVAILABLE_PAY", "AVAILABLE_PAY");
            tableMapping.ColumnMappings.Add("AVAILABLE_PAY_RSLT", "AVAILABLE_PAY_RSLT");
            tableMapping.ColumnMappings.Add("EXT1_CD", "EXT1_CD");
            tableMapping.ColumnMappings.Add("EXT2_CD", "EXT2_CD");
            tableMapping.ColumnMappings.Add("EXT3_CD", "EXT3_CD");
            tableMapping.ColumnMappings.Add("EXT4_CD", "EXT4_CD");
            tableMapping.ColumnMappings.Add("EXT5_CD", "EXT5_CD");
            tableMapping.ColumnMappings.Add("REMARK", "REMARK");
            tableMapping.ColumnMappings.Add("INSRT_USER_ID", "INSRT_USER_ID");
            tableMapping.ColumnMappings.Add("INSRT_DT", "INSRT_DT");
            tableMapping.ColumnMappings.Add("UPDT_USER_ID", "UPDT_USER_ID");
            tableMapping.ColumnMappings.Add("UPDT_DT", "UPDT_DT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[A_DAILY_AMT_PLAN] ([YYYY], [MM], [DD], [SALE_CREDIT], [SALE_CR" +
                "EDIT_RSLT], [RETURN_PAY], [RETURN_PAY_RSLT], [SALES_PAY_IN], [SALES_PAY_IN_RSLT]" +
                ", [TRADE_PAYABLE], [TRADE_PAYABLE_RSLT], [NONPAYMENT], [NONPAYMENT_RSLT], [NONPA" +
                "YMENT_OS], [NONPAYMENT_OS_RSLT], [NONPAYMENT_OUTSIDE], [NONPAYMENT_OUTSIDE_RSLT]" +
                ", [NONPAYMENT_ETC1], [NONPAYMENT_ETC1_RSLT], [NONPAYMENT_ETC2], [NONPAYMENT_ETC2" +
                "_RSLT], [NONPAYMENT_MATERIAL], [NONPAYMENT_MATERIAL_RSLT], [NONPAYMENT_ETCPAY], " +
                "[NONPAYMENT_ETCPAY_RSLT], [PERSONNEL_EXPENSES], [PERSONNEL_EXPENSES_RSLT], [PAID" +
                "_INTEREST], [PAID_INTEREST_RSLT], [BUSINESS_CASH_OUT], [BUSINESS_CASH_OUT_RSLT]," +
                " [BUSINESS_CASH_FLOW], [BUSINESS_CASH_FLOW_RSLT], [FIXED_ASSETS], [FIXED_ASSETS_" +
                "RSLT], [ETC_BUSINESS_OUT], [ETC_BUSINESS_OUT_RSLT], [ETC_BUSINESS_IN], [ETC_BUSI" +
                "NESS_IN_RSLT], [SALES_PAY_ETC], [SALES_PAY_ETC_RSLT], [SPOTMONTH_PAY], [SPOTMONT" +
                "H_PAY_RSLT], [BASIS_PAY], [BASIS_PAY_RSLT], [TERMEND_PAY], [TERMEND_PAY_RSLT], [" +
                "AVAILABLE_PAY], [AVAILABLE_PAY_RSLT], [EXT1_CD], [EXT2_CD], [EXT3_CD], [EXT4_CD]" +
                ", [EXT5_CD], [REMARK], [INSRT_USER_ID], [INSRT_DT], [UPDT_USER_ID], [UPDT_DT]) V" +
                "ALUES (@YYYY, @MM, @DD, @SALE_CREDIT, @SALE_CREDIT_RSLT, @RETURN_PAY, @RETURN_PA" +
                "Y_RSLT, @SALES_PAY_IN, @SALES_PAY_IN_RSLT, @TRADE_PAYABLE, @TRADE_PAYABLE_RSLT, " +
                "@NONPAYMENT, @NONPAYMENT_RSLT, @NONPAYMENT_OS, @NONPAYMENT_OS_RSLT, @NONPAYMENT_" +
                "OUTSIDE, @NONPAYMENT_OUTSIDE_RSLT, @NONPAYMENT_ETC1, @NONPAYMENT_ETC1_RSLT, @NON" +
                "PAYMENT_ETC2, @NONPAYMENT_ETC2_RSLT, @NONPAYMENT_MATERIAL, @NONPAYMENT_MATERIAL_" +
                "RSLT, @NONPAYMENT_ETCPAY, @NONPAYMENT_ETCPAY_RSLT, @PERSONNEL_EXPENSES, @PERSONN" +
                "EL_EXPENSES_RSLT, @PAID_INTEREST, @PAID_INTEREST_RSLT, @BUSINESS_CASH_OUT, @BUSI" +
                "NESS_CASH_OUT_RSLT, @BUSINESS_CASH_FLOW, @BUSINESS_CASH_FLOW_RSLT, @FIXED_ASSETS" +
                ", @FIXED_ASSETS_RSLT, @ETC_BUSINESS_OUT, @ETC_BUSINESS_OUT_RSLT, @ETC_BUSINESS_I" +
                "N, @ETC_BUSINESS_IN_RSLT, @SALES_PAY_ETC, @SALES_PAY_ETC_RSLT, @SPOTMONTH_PAY, @" +
                "SPOTMONTH_PAY_RSLT, @BASIS_PAY, @BASIS_PAY_RSLT, @TERMEND_PAY, @TERMEND_PAY_RSLT" +
                ", @AVAILABLE_PAY, @AVAILABLE_PAY_RSLT, @EXT1_CD, @EXT2_CD, @EXT3_CD, @EXT4_CD, @" +
                "EXT5_CD, @REMARK, @INSRT_USER_ID, @INSRT_DT, @UPDT_USER_ID, @UPDT_DT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYYY", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYYY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MM", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALE_CREDIT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SALE_CREDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALE_CREDIT_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SALE_CREDIT_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RETURN_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_PAY_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "RETURN_PAY_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALES_PAY_IN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SALES_PAY_IN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALES_PAY_IN_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SALES_PAY_IN_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRADE_PAYABLE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TRADE_PAYABLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRADE_PAYABLE_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TRADE_PAYABLE_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_OS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_OS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_OS_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_OS_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_OUTSIDE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_OUTSIDE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_OUTSIDE_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_OUTSIDE_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_ETC1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_ETC1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_ETC1_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_ETC1_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_ETC2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_ETC2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_ETC2_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_ETC2_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_MATERIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_MATERIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_MATERIAL_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_MATERIAL_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_ETCPAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_ETCPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NONPAYMENT_ETCPAY_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "NONPAYMENT_ETCPAY_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_EXPENSES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PERSONNEL_EXPENSES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PERSONNEL_EXPENSES_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PERSONNEL_EXPENSES_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAID_INTEREST", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PAID_INTEREST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAID_INTEREST_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "PAID_INTEREST_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUSINESS_CASH_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BUSINESS_CASH_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUSINESS_CASH_OUT_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BUSINESS_CASH_OUT_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUSINESS_CASH_FLOW", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BUSINESS_CASH_FLOW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BUSINESS_CASH_FLOW_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BUSINESS_CASH_FLOW_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXED_ASSETS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FIXED_ASSETS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXED_ASSETS_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "FIXED_ASSETS_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_BUSINESS_OUT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_BUSINESS_OUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_BUSINESS_OUT_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_BUSINESS_OUT_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_BUSINESS_IN", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_BUSINESS_IN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETC_BUSINESS_IN_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "ETC_BUSINESS_IN_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALES_PAY_ETC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SALES_PAY_ETC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALES_PAY_ETC_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SALES_PAY_ETC_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPOTMONTH_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPOTMONTH_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPOTMONTH_PAY_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "SPOTMONTH_PAY_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIS_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BASIS_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIS_PAY_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "BASIS_PAY_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERMEND_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TERMEND_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TERMEND_PAY_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "TERMEND_PAY_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AVAILABLE_PAY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AVAILABLE_PAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AVAILABLE_PAY_RSLT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "AVAILABLE_PAY_RSLT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT1_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT1_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT2_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT2_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT3_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT3_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT4_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT4_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT5_CD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "EXT5_CD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REMARK", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REMARK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSRT_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSRT_USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSRT_DT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSRT_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDT_USER_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDT_USER_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPDT_DT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPDT_DT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["nepes_display"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT YYYY, MM, DD, SALE_CREDIT, SALE_CREDIT_RSLT, RETURN_PAY, RETURN_PAY_RSLT, SALES_PAY_IN, SALES_PAY_IN_RSLT, TRADE_PAYABLE, TRADE_PAYABLE_RSLT, NONPAYMENT, NONPAYMENT_RSLT, NONPAYMENT_OS, NONPAYMENT_OS_RSLT, NONPAYMENT_OUTSIDE, NONPAYMENT_OUTSIDE_RSLT, NONPAYMENT_ETC1, NONPAYMENT_ETC1_RSLT, NONPAYMENT_ETC2, NONPAYMENT_ETC2_RSLT, NONPAYMENT_MATERIAL, NONPAYMENT_MATERIAL_RSLT, NONPAYMENT_ETCPAY, NONPAYMENT_ETCPAY_RSLT, PERSONNEL_EXPENSES, PERSONNEL_EXPENSES_RSLT, PAID_INTEREST, PAID_INTEREST_RSLT, BUSINESS_CASH_OUT, BUSINESS_CASH_OUT_RSLT, BUSINESS_CASH_FLOW, BUSINESS_CASH_FLOW_RSLT, FIXED_ASSETS, FIXED_ASSETS_RSLT, ETC_BUSINESS_OUT, ETC_BUSINESS_OUT_RSLT, ETC_BUSINESS_IN, ETC_BUSINESS_IN_RSLT, SALES_PAY_ETC, SALES_PAY_ETC_RSLT, SPOTMONTH_PAY, SPOTMONTH_PAY_RSLT, BASIS_PAY, BASIS_PAY_RSLT, TERMEND_PAY, TERMEND_PAY_RSLT, AVAILABLE_PAY, AVAILABLE_PAY_RSLT, EXT1_CD, EXT2_CD, EXT3_CD, EXT4_CD, EXT5_CD, REMARK, INSRT_USER_ID, INSRT_DT, UPDT_USER_ID, UPDT_DT FROM dbo.A_DAILY_AMT_PLAN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Display_AMT.A_DAILY_AMT_PLANDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Display_AMT.A_DAILY_AMT_PLANDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Display_AMT.A_DAILY_AMT_PLANDataTable dataTable = new Display_AMT.A_DAILY_AMT_PLANDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Display_AMT.A_DAILY_AMT_PLANDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Display_AMT dataSet) {
            return this.Adapter.Update(dataSet, "A_DAILY_AMT_PLAN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string YYYY, 
                    string MM, 
                    string DD, 
                    global::System.Nullable<decimal> SALE_CREDIT, 
                    global::System.Nullable<decimal> SALE_CREDIT_RSLT, 
                    global::System.Nullable<decimal> RETURN_PAY, 
                    global::System.Nullable<decimal> RETURN_PAY_RSLT, 
                    global::System.Nullable<decimal> SALES_PAY_IN, 
                    global::System.Nullable<decimal> SALES_PAY_IN_RSLT, 
                    global::System.Nullable<decimal> TRADE_PAYABLE, 
                    global::System.Nullable<decimal> TRADE_PAYABLE_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT, 
                    global::System.Nullable<decimal> NONPAYMENT_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT_OS, 
                    global::System.Nullable<decimal> NONPAYMENT_OS_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT_OUTSIDE, 
                    global::System.Nullable<decimal> NONPAYMENT_OUTSIDE_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT_ETC1, 
                    global::System.Nullable<decimal> NONPAYMENT_ETC1_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT_ETC2, 
                    global::System.Nullable<decimal> NONPAYMENT_ETC2_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT_MATERIAL, 
                    global::System.Nullable<decimal> NONPAYMENT_MATERIAL_RSLT, 
                    global::System.Nullable<decimal> NONPAYMENT_ETCPAY, 
                    global::System.Nullable<decimal> NONPAYMENT_ETCPAY_RSLT, 
                    global::System.Nullable<decimal> PERSONNEL_EXPENSES, 
                    global::System.Nullable<decimal> PERSONNEL_EXPENSES_RSLT, 
                    global::System.Nullable<decimal> PAID_INTEREST, 
                    global::System.Nullable<decimal> PAID_INTEREST_RSLT, 
                    global::System.Nullable<decimal> BUSINESS_CASH_OUT, 
                    global::System.Nullable<decimal> BUSINESS_CASH_OUT_RSLT, 
                    global::System.Nullable<decimal> BUSINESS_CASH_FLOW, 
                    global::System.Nullable<decimal> BUSINESS_CASH_FLOW_RSLT, 
                    global::System.Nullable<decimal> FIXED_ASSETS, 
                    global::System.Nullable<decimal> FIXED_ASSETS_RSLT, 
                    global::System.Nullable<decimal> ETC_BUSINESS_OUT, 
                    global::System.Nullable<decimal> ETC_BUSINESS_OUT_RSLT, 
                    global::System.Nullable<decimal> ETC_BUSINESS_IN, 
                    global::System.Nullable<decimal> ETC_BUSINESS_IN_RSLT, 
                    global::System.Nullable<decimal> SALES_PAY_ETC, 
                    global::System.Nullable<decimal> SALES_PAY_ETC_RSLT, 
                    global::System.Nullable<decimal> SPOTMONTH_PAY, 
                    global::System.Nullable<decimal> SPOTMONTH_PAY_RSLT, 
                    global::System.Nullable<decimal> BASIS_PAY, 
                    global::System.Nullable<decimal> BASIS_PAY_RSLT, 
                    global::System.Nullable<decimal> TERMEND_PAY, 
                    global::System.Nullable<decimal> TERMEND_PAY_RSLT, 
                    global::System.Nullable<decimal> AVAILABLE_PAY, 
                    global::System.Nullable<decimal> AVAILABLE_PAY_RSLT, 
                    global::System.Nullable<decimal> EXT1_CD, 
                    global::System.Nullable<decimal> EXT2_CD, 
                    global::System.Nullable<decimal> EXT3_CD, 
                    global::System.Nullable<decimal> EXT4_CD, 
                    global::System.Nullable<decimal> EXT5_CD, 
                    string REMARK, 
                    string INSRT_USER_ID, 
                    System.DateTime INSRT_DT, 
                    string UPDT_USER_ID, 
                    System.DateTime UPDT_DT) {
            if ((YYYY == null)) {
                throw new global::System.ArgumentNullException("YYYY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(YYYY));
            }
            if ((MM == null)) {
                throw new global::System.ArgumentNullException("MM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MM));
            }
            if ((DD == null)) {
                throw new global::System.ArgumentNullException("DD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DD));
            }
            if ((SALE_CREDIT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(SALE_CREDIT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SALE_CREDIT_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SALE_CREDIT_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RETURN_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(RETURN_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((RETURN_PAY_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(RETURN_PAY_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((SALES_PAY_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(SALES_PAY_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SALES_PAY_IN_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(SALES_PAY_IN_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((TRADE_PAYABLE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(TRADE_PAYABLE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((TRADE_PAYABLE_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(TRADE_PAYABLE_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(NONPAYMENT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(NONPAYMENT_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_OS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(NONPAYMENT_OS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_OS_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(NONPAYMENT_OS_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_OUTSIDE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(NONPAYMENT_OUTSIDE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_OUTSIDE_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(NONPAYMENT_OUTSIDE_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_ETC1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(NONPAYMENT_ETC1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_ETC1_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(NONPAYMENT_ETC1_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_ETC2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(NONPAYMENT_ETC2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_ETC2_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(NONPAYMENT_ETC2_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_MATERIAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(NONPAYMENT_MATERIAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_MATERIAL_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(NONPAYMENT_MATERIAL_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_ETCPAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(NONPAYMENT_ETCPAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NONPAYMENT_ETCPAY_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(NONPAYMENT_ETCPAY_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((PERSONNEL_EXPENSES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(PERSONNEL_EXPENSES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((PERSONNEL_EXPENSES_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(PERSONNEL_EXPENSES_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((PAID_INTEREST.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(PAID_INTEREST.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PAID_INTEREST_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(PAID_INTEREST_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((BUSINESS_CASH_OUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(BUSINESS_CASH_OUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((BUSINESS_CASH_OUT_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(BUSINESS_CASH_OUT_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((BUSINESS_CASH_FLOW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(BUSINESS_CASH_FLOW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BUSINESS_CASH_FLOW_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(BUSINESS_CASH_FLOW_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((FIXED_ASSETS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(FIXED_ASSETS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((FIXED_ASSETS_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(FIXED_ASSETS_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((ETC_BUSINESS_OUT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(ETC_BUSINESS_OUT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((ETC_BUSINESS_OUT_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(ETC_BUSINESS_OUT_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((ETC_BUSINESS_IN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(ETC_BUSINESS_IN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((ETC_BUSINESS_IN_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(ETC_BUSINESS_IN_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((SALES_PAY_ETC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(SALES_PAY_ETC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((SALES_PAY_ETC_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(SALES_PAY_ETC_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((SPOTMONTH_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(SPOTMONTH_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((SPOTMONTH_PAY_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(SPOTMONTH_PAY_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((BASIS_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(BASIS_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((BASIS_PAY_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(BASIS_PAY_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((TERMEND_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(TERMEND_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((TERMEND_PAY_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(TERMEND_PAY_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((AVAILABLE_PAY.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(AVAILABLE_PAY.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((AVAILABLE_PAY_RSLT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(AVAILABLE_PAY_RSLT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((EXT1_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(EXT1_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((EXT2_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(EXT2_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((EXT3_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(EXT3_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((EXT4_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(EXT4_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((EXT5_CD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(EXT5_CD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((REMARK == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(REMARK));
            }
            if ((INSRT_USER_ID == null)) {
                throw new global::System.ArgumentNullException("INSRT_USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(INSRT_USER_ID));
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(INSRT_DT));
            if ((UPDT_USER_ID == null)) {
                throw new global::System.ArgumentNullException("UPDT_USER_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(UPDT_USER_ID));
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((System.DateTime)(UPDT_DT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private A_DAILY_AMTTableAdapter _a_DAILY_AMTTableAdapter;
        
        private A_DAILY_AMT_PLANTableAdapter _a_DAILY_AMT_PLANTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public A_DAILY_AMTTableAdapter A_DAILY_AMTTableAdapter {
            get {
                return this._a_DAILY_AMTTableAdapter;
            }
            set {
                this._a_DAILY_AMTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public A_DAILY_AMT_PLANTableAdapter A_DAILY_AMT_PLANTableAdapter {
            get {
                return this._a_DAILY_AMT_PLANTableAdapter;
            }
            set {
                this._a_DAILY_AMT_PLANTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._a_DAILY_AMTTableAdapter != null) 
                            && (this._a_DAILY_AMTTableAdapter.Connection != null))) {
                    return this._a_DAILY_AMTTableAdapter.Connection;
                }
                if (((this._a_DAILY_AMT_PLANTableAdapter != null) 
                            && (this._a_DAILY_AMT_PLANTableAdapter.Connection != null))) {
                    return this._a_DAILY_AMT_PLANTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._a_DAILY_AMTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._a_DAILY_AMT_PLANTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(Display_AMT dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._a_DAILY_AMTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.A_DAILY_AMT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._a_DAILY_AMTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._a_DAILY_AMT_PLANTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.A_DAILY_AMT_PLAN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._a_DAILY_AMT_PLANTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(Display_AMT dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._a_DAILY_AMTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.A_DAILY_AMT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._a_DAILY_AMTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._a_DAILY_AMT_PLANTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.A_DAILY_AMT_PLAN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._a_DAILY_AMT_PLANTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(Display_AMT dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._a_DAILY_AMT_PLANTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.A_DAILY_AMT_PLAN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._a_DAILY_AMT_PLANTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._a_DAILY_AMTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.A_DAILY_AMT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._a_DAILY_AMTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(Display_AMT dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._a_DAILY_AMTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._a_DAILY_AMTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            if (((this._a_DAILY_AMT_PLANTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._a_DAILY_AMT_PLANTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("TableAdapterManager에서 관리하는 모든 TableAdapter에는 동일한 연결 문자열을 사용해야 합니다.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager에 연결 정보가 없습니다. 각 TableAdapterManager TableAdapter 속성을 올바른 Tabl" +
                        "eAdapter 인스턴스로 설정하십시오.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("트랜잭션을 시작할 수 없습니다. 현재 데이터 연결에서 트랜잭션이 지원되지 않거나 현재 상태에서 트랜잭션을 시작할 수 없습니다.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._a_DAILY_AMTTableAdapter != null)) {
                    revertConnections.Add(this._a_DAILY_AMTTableAdapter, this._a_DAILY_AMTTableAdapter.Connection);
                    this._a_DAILY_AMTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._a_DAILY_AMTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._a_DAILY_AMTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._a_DAILY_AMTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._a_DAILY_AMTTableAdapter.Adapter);
                    }
                }
                if ((this._a_DAILY_AMT_PLANTableAdapter != null)) {
                    revertConnections.Add(this._a_DAILY_AMT_PLANTableAdapter, this._a_DAILY_AMT_PLANTableAdapter.Connection);
                    this._a_DAILY_AMT_PLANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._a_DAILY_AMT_PLANTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._a_DAILY_AMT_PLANTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._a_DAILY_AMT_PLANTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._a_DAILY_AMT_PLANTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._a_DAILY_AMTTableAdapter != null)) {
                    this._a_DAILY_AMTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._a_DAILY_AMTTableAdapter]));
                    this._a_DAILY_AMTTableAdapter.Transaction = null;
                }
                if ((this._a_DAILY_AMT_PLANTableAdapter != null)) {
                    this._a_DAILY_AMT_PLANTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._a_DAILY_AMT_PLANTableAdapter]));
                    this._a_DAILY_AMT_PLANTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591